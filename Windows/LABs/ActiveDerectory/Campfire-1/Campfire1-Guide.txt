=====================================================================
* Легенда сценария *
********************

Сотрудник компании обнаружил на своем компьютере подозрительные файлы и сообщил об этом команде SOC.
Оценив ситуацию, комнада пришла к выводу, что в сети могла произойти атака Kerberoasting.
Ваша задача — подтвердить выводы, проанализировав предоставленные доказательства.

Для анализа были предоставлены:

    -   Журналы безопасности с контроллера домена (Security-DC.evtx);
    -   Операционные журналы PowerShell с затронутой рабочей станции (Powershell-Operational.evtx)
    -   Выборка файлов с затронутой рабочей станции, т.н. Prefetch-журналы

Таким образом Вам надо будет сосредоточился на криминалистике и обнаружении Kerberoasting атак.
Поэтому, Вам надо будет изучите не только журналы контроллера домена, но и некоторые артефакты конечных точек с хоста, который выполнил это задание.
А так как, Kerberoasting — это метод, нацеленный на учетные записи служб в средах Active Directory, то для анализа журналов Windows, на потребуется познания в слуедующих событиях:

    -   Event ID 4768  -   A Kerberos authentication ticket (TGT) was requested
        Это событие рПроисходит, когда клиентская рабочая станция запрашивает TGT из KDC, создавая это событие в журнале безопасности на контроллере домена.

    -   Event ID 4769  -   A Kerberos Service Ticket was Request
        Это событие генерируется после того, как клиент получает TGT и запрашивает TGS для SPN сервера MSSQL.

    -   Event ID 4624/4625  -   An account was successfully/unsuccesfull logged on
        Это событие регистрируется на компьютере, к которому был/не был выполнен вход, и содержит подробную информацию о том, кто, когда и как успешно/не успешно вошел/пытался войти в систему

    -   Event ID 4648  -   A logon was attempted using explicit credentials
        Это событие указывает на то, что была предпринята попытка входа в систему с использованием явных учётных данных

    -   Event ID 4688   -       “A new process has been created”
        Основной источник для отслеживания запуска любых исполняемых файлов или интерпретаторов скриптов (например, cscript.exe, wscript.exe, cmd.exe, python.exe, perl.exe)
    
    -   Event ID 4104 -   Scriptblock logging
        Это событие указывает на выполнение PowerShell и фиксирует содержимое блоков скриптов, которые содержат команды PowerShell.

А также инструментами, которые можно использовать для адаптации журналов *.evtx в удобночитаемый формат *.csv с последующим анализов в специальных приложениях:

    -   EvtxEcmd
        Это инструмент командной строки, который анализирует журналы событий Windows в различных форматах, таких как CSV, JSON, XML и т. д.
    
    -   PECmd
        Это инструмент командной строки используется для анализа файлов предварительной выборки и извлечения данных (Prefetch Files)

    -   TimelineExplorer
        Инструмент на основе графического интерфейса, который функционирует как приложение для фильтрации и навигации данных, чтобы облегчить специалистам по реагированию на инциденты обработку необработанных данных.

    -   EventViewer
        Это инструмент Microsoft Windows для просмотра системных журналов, журналов безопасности и журналов приложений, позволяющий устранять неполадки, оценивать состояние системы и отслеживать события безопасности
    
    -   Splunk
        Это платформа для сбора, индексации, поиска, анализа и визуализации больших объемов машинных данных, таких как журналы событий, метрики и данные приложений.

*** Keberoasting сопоставлен с подтехникой T1558.003 в фреймворке MITRE ATT&CK.

=====================================================================
* Задания *
***********

Как и всегда, разбор заданий будет идти по порядку, НО полученные сведения могут перекликаться между заданиями.
Более того, для подтверждения найденной "улики" в одном лог-файле, необходимо сравнить ее с данными из другого лог-файла 
Поэтому НАСТОЯТЕЛЬНО рекомендуется делать записи/пометки

    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    + Задание 1 - Опеределить дату и время, когда произошла атака Kerberoasting +
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    На первый взгляд определить дату и время, когда произошла Kerberoasting атака, может показаться всер-равно, что найти иголку в стоку сена.
    И если атака была произведена грамотным специалистом, а Ваша система безопасности не была походжа на швейцарский сыр.
    То это будет действитльно не простая задача, так как Вам придется проанализировать сотни логов

    Однако в нашем случае все гораздо проще
    Для определение несостыковок, которые указывают на возможную Kerberoasting атаку, нам надо будет проанализировать всего один журнал -   Securty of Domain Controller.evtx

        1)  Сперва мы проверим на наличие событий с ID 4648.
            Мониторинг этого события может указывать на то, как и когда использовались несанкционированные учётные данные для входа в систему.
            Таким образом, мы сможем определить исходный аккаунт, который инициировал процесс с использованием предоставленных учётных данных.
        
        2)  Затем переходим с возможному списку событий с ID 4624 и 4625
            Это даст нам представления об успешных/неудачных попытка схода в систему
            Т.е. если один и тот же аккаунт после множетсва неудачных попыток смог войти в систему
            То это означает, что данный аккаунт был скопрометирован
        
        3)  Следующее ID события на которое стоит обратить внимание - 4768
            Данное событие предоставит нам информацию какие пользователи запросили билет аутентификации Kerberos
            Особое внимание стоит уделять на имя аккаунта, который запрашивал и присвоенный запросу статус

            Нет ничего не обычного, когда пользователь запрашивает билет TGT на доступ к компьютеру
            Но, если данному пользователю не были выданы права на доступ к запрашиваемым ресурсам, а он получил доступ, то это свидетельствует о том, что билет был поддельный

            Также, если запрос приходит от пользователя, чей аккаунт более не активен в системе
        
        4)  Ну и в заключение, проверяем ID 4769
            Тут мы проверяем на соответствие пользователя к запрашиваемым сервисам/службам
            Как уже было сказано, если у пользователя нет прав на пользование определнными сервисами, то авторизация на данном сервисе сигнализирует о взломе

            Особое внимние стоит образать на способ шифрования билета (TicketEncryptionType)   -   он должен отличаться от всех остальных и иметь более нихний уровени
            Если обычно значение этого поля будет равно 0x12, то у скопроментированного билета она будет отличаться, к примеру = 0x17
    
    Анализировать записи журналов можно разными способами.
    Вот 3 наиболее попудярных:

        А.  EventViewer
            Стандартный просмоторщик журналов Windows
            В теории его хватает, но его система фильтрации (XML-query) весьма капризна к пользовательским запросам и часто глючит
            Но отображение данных по выбранной записи - одно из лучших
        
        B.  TimelineExplorer с предварительной трасформацие журнала в CSV формат
            Очень удобный анализатор различных жерналов, которые предварительно были переделаны в CSV формат
            Имеет очень гибкие пользовательские фильтры
            Но, из-за того, что поля трансформированы с столбцы, финальное отображение весьма растянуто и поэтому очень часто прихожить прокручивать изображение вправо-влево
        
        C.  SIEM модули (на примеру Splunk)
            Очень удобный как и пользовательским фильтрам, так и по визуальному восприятию
            Один минус  -   не умеет работать со сторонними журналами evtx (он их просто не читает, даже исли установить Windows Add-on)
            Поэтому, его надо либо загружать на машине, на которой происходит анализ, либо через агенты
            Можно конечно через трансформацию журнала в CSV/JSON, но в таком случае есть шанс, что некоторые поля целиком уйдут в столбец без нормального распарсивания

    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    + Задание 2 - Опеределить имя сервиса, который стало целью атаки +
    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    После того, как вы определили запись, которая свидетельствует об использовании поддельного TGT/TGS билета
    То, проанализировав данную запись, Вы сможете опеределить имя сервиса, который подвергся атаке
    
    Если вы используете все кроме EventViewer, то для данного овпроса стоит обащать внимание на одной из полей "Payload", которое содердит в себе информацию по "ServiceName"   

    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    + Задание 3 - Опеределить IP-адрес рабочей станции, с которой была выполнена атака Kerberoasting +
    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    Если пользуетесь EventViewer, то смотрите поле "Network Information: Client Address: ..."

    А если другие инструменты, то:

        -   либо одно из "Payload"
        -   либо "RemoteHost"

    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    + Задание 4 - Опеределить имя файла, используемого для перечисления объектов Active Directory и, возможно, поиска учетных записей Kerberoastable в сети +
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    Помимо журнала, который мы уже использовали, для ответа на данный вопрос в нашем случае потребуется другой журнал    -   Powershell-Operational.evtx
    С его помощью мы сможем определить какие именно Powershell скрипты были запущены

    Но сперва мы проверим журнал Securty of Domain Controller.evtx
    Дело в том, что нам сначало надо удостовериться, что не было запущенно никаких других, кроме Powershell, исполняемых файлов/скриптов/комманд
    К примеру python или cmd

    И если мы ничего ужасного не нашли, то переходим к анализу журнала Powershell-Operational.evtx
    Где среди множества записей мы должны найти те, которые совпадают (или около) по времени и Account Name с теми, что мы обнаружили в вопросе №1
    И раз уж в нашем случае мы точно знаем, что это был Powershell скрипт, то мы также  можем отфильтровать данный Event ID по параметру ".ps1"
    
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    + Задание 5 - Опеределить когда был использован файл, найденный в впоросе 4 +
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    Ну, тут все просто  -   смотрим поле с TimeStamp

    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    + Задание 6 - Опеределить имя и полный путь к утелите, которая была использована для проведения атаки Kerberoasting +
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    Сперва нам надо найти, что это за утилита такая
    А раз уж анализ скрипта Powershell нам не дал никакой полезной информации, то придется нам анализировать Prefetch файлы
    Помимо основного значения этих журналов (можно почитать в интеренте)
    Эти файлы являются ценными источниками информации, так как они содержат следы запуска программ, включая вредоносное ПО. 

    Таким образом, мы конвертируем их в CSV или JSON через PECmd и загружаем либо в TimelineExplorer, либо в SIEM платформу (в нашем случае Splunk)
    Результат транфсморфации может выдать огромное количество записей, которые мы устанем анализировать
    Поэтому, нам надо отфиьлтровать их по времени
    Мы знаем, когда был скомпрометирован билет и когда был запущен Powershell скрипт, который обнаружил Kerberos аккаунты
    Таким образом, данная утилита была использована в этом временном диапозоне

    Отфильтровав по временному отрезку мы можем определить какиая именно утилита была использована
    Такак как ее название и/или расположение будет явно отличаться от легетимности
    
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    + Задание 7 - Опеределить когда была запущена утилита, найденная в поросе 6 +
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    Тут все также просто
    Смотри на вопрос №5

    