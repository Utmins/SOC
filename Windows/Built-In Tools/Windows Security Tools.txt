=====================================================================
* Task Manager *
****************

Task Manager (Диспетчер задач) — это встроенная утилита Windows на основе графического интерфейса, которая позволяет пользователям видеть, что запущено в системе Windows.
Она также предоставляет информацию об использовании ресурсов, например, насколько каждый процесс использует ЦП и память.
Когда программа не отвечает, Task Manager используется для завершения (уничтожения) процесса.

Чтобы открыть диспетчер задач, щелкните правой кнопкой мыши на панели задач.
Когда появится новое окно, выберите диспетчер задач

Диспетчер задач содержит следующие владки/менюшки:

    -   Processes
    -   Performance
    -   App History
    -   Startup Apps
    -   Users
    -   Details
    -   Services

    +++++++++++++
    + Processes +
    +++++++++++++

    Данная вкладка отображает список всех запущенных в системе процессов, как системных, так и пользовательских
    По-умолчанию, она состоит из следующих столбцов:
    
        -   Nanem
        -   status
        -   CPU
        -   Memory
        -   Disk
        -   network
    
    Чтобы просмотреть больше столбцов, щелкните правой кнопкой мыши по любому заголовку столбца, чтобы открыть больше опций.
    Рекомендуется добавить следующие столбцы:

        Type            -   каждый процесс относится к одной из 3 категорий (приложения, фоновый процесс или процесс Windows).
        Publisher       -   подумайте об этом столбце как об имени автора программы/файла.
        PID             -   номер идентификатора процесса.
                            Windows назначает уникальный идентификатор процесса каждый раз при запуске программы.
                            Если одна и та же программа имеет несколько запущенных процессов, у каждого будет свой уникальный идентификатор процесса (PID).
        Process Name    -   имя файла процесса.
        Command lines   -   полная команда, используемая для запуска процесса.
        CPU             -   объем ЦП (вычислительной мощности), используемый процессом.
        Memory          -   объем физической рабочей памяти, используемой процессом.
        GPU             -   объем ГП (вычислительной мощности), используемый процессом.

    +++++++++++
    + Details +
    +++++++++++

    Во вкладке Details отображается более детальная информация по каждому запущенному процессу

    Рекомендуется включить отображение следующие столбцов, помимо столбков по-умолчанию

        -   Image path name
        -   Command line

    Эти два столбца могут быстро предупредить аналитика о любых несоответствиях с выбранным процессом.
    К примеру файл и путь к файлу, который должен запускать выбранный процесс отличается от оригинального

=====================================================================
* Key Windows Processes *
*************************

В списке процессов Windows существует огромное количество разных процессов (системные, пользовательские, сетевые и пр)
Однако далее будут рассмотрены наиболее важные из них

Рекомендуется использовать Process Hacker и Process Explorer вместо диспетчера задач для получения более детальной информации о каждом процессе Windows.
Так как отображение детальной информации может отличаться, но в совокупности будет дополнять друг друга до полее полной картины

Вот несколько ресурсов, которые могут быть интересны

    https://0xcybery.github.io/blog/Core-Processes-In-Windows-System
    https://www.sans.org/posters/hunt-evil/
    https://learn.microsoft.com/en-us/sysinternals/resources/windows-internals
    
    ++++++++++
    + System +
    ++++++++++

    Первый процесс Windows в списке — System.
    Как известно, PID для любого заданного процесса назначается случайным образом, но для процесса System это не так.
    PID для System всегда равен 4.
    Что именно делает этот процесс?

    Официальное определение из Windows Internals 6th Edition:
        "Процесс System (ID процесса 4) является домом для особого вида потока, который выполняется только в режиме ядра, системного потока режима ядра.
        Системные потоки имеют все атрибуты и контексты обычных потоков пользовательского режима (такие как аппаратный контекст, приоритет и т. д.)
        Но отличаются тем, что они выполняются только в режиме ядра, выполняя код, загруженный в системное пространство, будь то Ntoskrnl.exe или любой другой загруженный драйвер устройства.
        Кроме того, системные потоки не имеют адресного пространства пользовательского процесса и, следовательно, должны выделять любое динамическое хранилище из куч памяти операционной системы, таких как выгружаемый или невыгружаемый пул".

    Что такое пользовательский режим?
        "При запуске приложения в пользовательском режиме Windows создает для него процесс.
        Этот процесс предоставляет приложению частное виртуальное адресное пространство и таблицу частных дескрипторов.
        Так как виртуальное адресное пространство каждого приложения является частным, одно приложение не может изменять данные другого приложения.
        Каждое приложение выполняется изолированно, гарантируя, что в случае сбоя одно из них не повлияет на другие приложения или операционную систему.

        Виртуальное адресное пространство приложения в пользовательском режиме также ограничено.
        Процесс, выполняющийся в пользовательском режиме, не может получить доступ к виртуальным адресам, зарезервированным для операционной системы.
        Ограничение виртуального адресного пространства приложения в пользовательском режиме предотвращает изменение или повреждение критически важных данных операционной системы."

    Что такое режим ядра?
        "Весь код, выполняемый в режиме ядра, использует одно виртуальное адресное пространство.
        В результате драйвер в режиме ядра не изолируется от других драйверов или операционной системы.
        Если драйвер, работающий в режиме ядра, по ошибке записывает данные на неправильный виртуальный адрес, это может привести к компрометации данных, принадлежащих операционной системе или другому драйверу.
        Если происходит сбой драйвера в режиме ядра, это приводит к сбою всей операционной системы."
    
    Что является обычным поведением этого процесса?

        Image Path:         C:\Windows\system32\ntoskrnl.exe (NT OS Kernel)
        Parent Process:     System Idle Process (0)
    
    Что является НЕобычным поведением этого процесса?

        -   Родительский процесс (кроме System Idle Process (0))
        -   Несколько экземпляров System. (Должен быть только один экземпляр)
        -   Другой PID. (Помните, что PID всегда будет PID 4)
        -   Не запущен в сеансе 0

    ++++++++++++++++++++++++++++++++++++++++
    + Session Manager Subsystem (smss.exe) +
    ++++++++++++++++++++++++++++++++++++++++

    Следующий процесс — smss.exe (Session Manager Subsystem // подсистема диспетчера сеансов).
    Этот процесс, также известный как Windows Session Manager (диспетчер сеансов Windows), отвечает за создание новых сеансов.
    Это первый процесс пользовательского режима, запущенный ядром.

    Этот процесс запускает режимы ядра и пользователя подсистемы Windows.
    Эта подсистема включает:
    
        -   win32k.sys (режим ядра)
        -   winsrv.dll (пользовательский режим)
        -   csrss.exe (пользовательский режим).

    Smss.exe запускает в:
    
        -   сеансе 0 (изолированном сеансе Windows для операционной системы):
                csrss.exe (подсистема Windows)
                wininit.exe. 

        -   сеансе 1 (который является пользовательским сеансом):
                csrss.exe
                winlogon.exe
    
    Первый дочерний экземпляр создает дочерние экземпляры в новых сеансах, что выполняется smss.exe, копирующим себя в новый сеанс и самозавершающим процесс.
    Подробнее об этом процессе можно прочитать здесь    -   https://en.wikipedia.org/wiki/Session_Manager_Subsystem

    SMSS также отвечает за создание переменных среды, файлов подкачки виртуальной памяти и запускает winlogon.exe (диспетчер входа в систему Windows).

    Что является обычным поведением этого процесса?

        Image Path:             %SystemRoot%\System32\smss.exe
        Parent Process:         System
        Number of Instances:    One master instance and child instance per session.
                                The child instance exits after creating the session.
        User Account:           Local System (4)
        Start Time:             Within seconds of boot time for the master instance
    
    Что является НЕобычным поведением этого процесса?

        Другой родительский процесс, отличный от System (4)
        Путь к образу отличается от C:\Windows\System32
        Более одного запущенного процесса. (дочерние процессы самозавершаются и выходят после каждого нового сеанса)
        Запущенный пользователь не является пользователем SYSTEM
        Неожиданные записи реестра для Subsystem

    +++++++++++++++++++++++++++++++++++++++++++++
    + Client Server Runtime Process (csrss.exe) +
    +++++++++++++++++++++++++++++++++++++++++++++

    Как упоминалось выше, csrss.exe (Client Server Runtime Process) — это пользовательская сторона подсистемы Windows.
    Этот процесс всегда запущен и имеет решающее значение для работы системы.
    Если этот процесс будет прерван случайно, это приведет к сбою системы.
    Этот процесс отвечает за создание и удаление окна консоли Win32 и потока процесса.
    
    Для каждого экземпляра csrss.exe загружаются:
    
        -   csrsrv.dll
        -   basesrv.dll 
        -   winsrv.dll (наряду с другими). ​​

    Этот процесс также отвечает за предоставление API Windows другим процессам, сопоставление букв дисков и обработку процесса завершения работы Windows.
    Подробнее об этом процессе можно прочитать здесь    -   https://en.wikipedia.org/wiki/Client/Server_Runtime_Subsystem

    *** Помните, что csrss.exe и winlogon.exe вызываются из smss.exe при запуске сеанса 1.

    Что является обычным поведением этого процесса?

            Image Path:             %SystemRoot%\System32\csrss.exe
            Parent Process:         Создан экземпляром smss.exe
            Number of Instances:    2 или более
            User Account:           Local System
            Start Time:             В течение нескольких секунд после загрузки первых двух экземпляров (для сеанса 0 и 1).
                                    Время запуска дополнительных экземпляров происходит по мере создания новых сеансов, хотя часто создаются только сеансы 0 и 1.
    
    Что является НЕобычным поведением этого процесса?

        Фактический родительский процесс. (smss.exe вызывает этот процесс и самозавершается)
        Путь к файлу образа, отличный от C:\Windows\System32
        Незаметные ОПЕЧАТКИ, чтобы скрыть вредоносные процессы, маскирующиеся под csrss.exe, на виду
        Пользователь не является пользователем SYSTEM.

    ++++++++++++++++++++++++++++++++++++++++++++++++
    + Windows Initialization Process (wininit.exe) +
    ++++++++++++++++++++++++++++++++++++++++++++++++

    Процесс инициализации Windows, wininit.exe, отвечает за запуск
    
        -   services.exe (диспетчер управления службами)
        -   lsass.exe (локальный орган безопасности)
        -   lsaiso.exe в сеансе 0
    
    Это еще один критически важный процесс Windows, который работает в фоновом режиме вместе со своими дочерними процессами.

    *** lsaiso.exe — это процесс, связанный с Credential Guard и KeyGuard.
        Вы увидите этот процесс только в том случае, если Credential Guard включен.

    Что является обычным поведением этого процесса?

        Image Path:             %SystemRoot%\System32\wininit.exe
        Parent Process:         Created by an instance of smss.exe
        Number of Instances:    One
        User Account:           Local System
        Start Time:             Within seconds of boot time
    
    Что является НЕобычным поведением этого процесса?

        Фактический родительский процесс. (smss.exe вызывает этот процесс и самозавершается)
        Путь к файлу образа, отличный от C:\Windows\System32
        Незаметные ОПЕЧАТКИ, чтобы скрыть вредоносные процессы на виду
        Несколько запущенных экземпляров
        Не запущено как SYSTEM

    ++++++++++++++++++++++++++++++++++++++++++++++++
    + Service Control Manager / SCM (services.exe) +
    ++++++++++++++++++++++++++++++++++++++++++++++++

    Service Control Manager (Диспетчер Управления Службами (SCM)) или services.exe.
    Его основная обязанность — управление системными службами:
    
        -   загрузка служб
        -   взаимодействие со службами
        -   запуск или завершение служб.
    
    Он поддерживает базу данных, к которой можно обращаться с помощью встроенной в Windows утилиты sc.exe.

    Информация о службах хранится в реестре -   HKLM\System\CurrentControlSet\Services

    Этот процесс также загружает в память драйверы устройств, отмеченные как автозапускаемые.
    Когда пользователь успешно входит в систему, этот процесс отвечает за установку значения Last Known Good Control Set (Last Known Good Configuration), HKLM\System\Select\LastKnownGood, в значение CurrentControlSet.

    Этот процесс является родителем нескольких других ключевых процессов (это лишь некоторые из них):
    
        -   svchost.exe
        -   spoolsv.exe
        -   msmpeng.exe
        -   dllhost.exe
    
    Подробнее об этом процессе можно прочитать здесь    -   https://en.wikipedia.org/wiki/Service_Control_Manager

    Что является обычным поведением этого процесса?

        Image Path:             %SystemRoot%\System32\services.exe
        Parent Process:         wininit.exe
        Number of Instances:    One
        User Account:           Local System
        Start Time:             Within seconds of boot time
    
    Что является НЕобычным поведением этого процесса?

        Родительский процесс, отличный от wininit.exe
        Путь к файлу образа, отличный от C:\Windows\System32
        Незаметные ОПЕЧАТКИ, чтобы скрыть вредоносные процессы на виду
        Несколько запущенных экземпляров
        Не запущено как SYSTEM

    ++++++++++++++++++++++++++++++
    + Service Host (svchost.exe) +
    ++++++++++++++++++++++++++++++

    The Service Host (Host Process for Windows Services) отвечает за размещение и управление службами Windows.

    Службы, работающие в этом процессе, реализованы как библиотеки DLL.
    Библиотека DLL для реализации хранится в реестре для службы в подразделе Parameters в ServiceDLL.
    Полный путь — HKLM\SYSTEM\CurrentControlSet\Services\SERVICE NAME\Parameters.

    *** Чтобы просмотреть эту информацию из Process Hacker, щелкните правой кнопкой мыши процесс svchost.exe
        Щелкните правой кнопкой мыши службу и выберите Свойства.
        Посмотрите на DLL-библиотеку службы.
        Также обратите внимание на его структуру.
        В двоичном пути может быть ключевой идентификатор (-k).
        Так вызывается законный процесс svchost.exe.
    
    *** Параметр -k предназначен для группировки схожих служб для совместного использования одного и того же процесса.
        Эта концепция была основана на дизайне ОС и реализована для снижения потребления ресурсов.
        Начиная с Windows 10 версии 1703, службы, сгруппированные в хост-процессы, изменились.
        На машинах с более чем 3,5 ГБ памяти каждая служба будет запускать свой собственный процесс.
        Подробнее об этом процессе можно прочитать здесь    -   https://en.wikipedia.org/wiki/Svchost.exe

    Поскольку svchost.exe всегда будет иметь несколько запущенных процессов в любой системе Windows, этот процесс стал целью для вредоносного использования.
    Злоумышленники создают вредоносное ПО, чтобы замаскироваться под этот процесс и попытаться спрятаться среди законных процессов svchost.exe.
    Они могут назвать вредоносное ПО svchost.exe или слегка его исказить, например, scvhost.exe.
    Таким образом, цель состоит в том, чтобы остаться незамеченными.
    Другая тактика — установить/вызвать вредоносную службу (DLL).

    За дополнительной информацией можно обратиться сюда -   https://www.hexacorn.com/blog/2015/12/18/the-typographical-and-homomorphic-abuse-of-svchost-exe-and-other-popular-file-names/

    Что является обычным поведением этого процесса?

        Image Path:             %SystemRoot%\System32\svchost.exe
        Parent Process:         services.exe
        Number of Instances:    Many
        User Account:           варьируется (SYSTEM, Network Service, Local Service) в зависимости от экземпляра svchost.exe.
                                В Windows 10 некоторые экземпляры запускаются от имени вошедшего в систему пользователя.
        Start Time:             обычно в течение нескольких секунд после загрузки.
                                Другие экземпляры svchost.exe могут быть запущены после загрузки.
    
    Что является НЕобычным поведением этого процесса?

        Родительский процесс, отличный от services.exe
        Путь к файлу образа, отличный от C:\Windows\System32
        Незаметные ОПЕЧАТКИ, чтобы скрыть вредоносные процессы на виду
        Отсутствие параметра -k

    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    + Local Security Authority Subsystem Service (lsass.exe) +
    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    Согласно Википедии, Local Security Authority Subsystem Service (Служба подсистемы локальной безопасности) (LSASS) — это процесс в операционных системах Microsoft Windows, который отвечает за обеспечение соблюдения политики безопасности в системе.
    Он проверяет пользователей, входящих в систему на компьютере или сервере Windows, обрабатывает изменения паролей и создает токены доступа.
    Он также записывает данные в журнал безопасности Windows».

    Он создает токены безопасности для SAM (Security Account Manager), AD (Active Directory) и NETLOGON.
    Он использует пакеты аутентификации, указанные в HKLM\System\CurrentControlSet\Control\Lsa.

    Lsass.exe — еще один процесс, на который нацелены злоумышленники.
    Обычные инструменты, такие как mimikatz, используются для дампа учетных данных, или злоумышленники имитируют этот процесс, чтобы спрятаться на виду.
    Опять же, они делают это, называя свое вредоносное ПО этим именем процесса или просто слегка неправильно его написав.

    За дополнительной информацией можно обратиться сюда -   https://yungchou.wordpress.com/2016/03/14/an-introduction-of-windows-10-credential-guard/

    Что является обычным поведением этого процесса?

        Image Path:             %SystemRoot%\System32\lsass.exe
        Parent Process:         wininit.exe
        Number of Instances:    One
        User Account:           Local System
        Start Time:             Within seconds of boot time
    
    Что является НЕобычным поведением этого процесса?

        Родительский процесс, отличный от wininit.exe
        Путь к файлу образа, отличный от C:\Windows\System32
        Незаметные опечатки, чтобы скрыть вредоносные процессы на виду
        Несколько запущенных экземпляров
        Не запущено как SYSTEM

    ++++++++++++++++++++++++++++++++
    + Windows Logon (winlogon.exe) +
    ++++++++++++++++++++++++++++++++

    Windows Logon отвечает за обработку Secure Attention Sequence (SAS).
    Это комбинация клавиш ALT+CTRL+DELETE, которую пользователи нажимают для ввода своего имени пользователя и пароля.

    Этот процесс также отвечает за загрузку профиля пользователя.
    Он загружает NTUSER.DAT пользователя в HKCU, а userinit.exe загружает оболочку пользователя.
    Подробнее об этом процессе читайте здесь    -   https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-2000-server/cc939862(v=technet.10)?redirectedfrom=MSDN

    Он также отвечает за блокировку экрана и запуск заставки пользователя, среди прочих функций.
    Подробнее об этом процессе можно прочитать здесь    -   https://en.wikipedia.org/wiki/Winlogon

    Как упоминалось ранее, smss.exe запускает этот процесс вместе с копией csrss.exe в сеансе 1.

    Что является обычным поведением этого процесса?

        Image Path:             %SystemRoot%\System32\winlogon.exe
        Parent Process:         Создается экземпляром smss.exe, который завершается, поэтому инструменты анализа обычно не предоставляют имя родительского процесса.
        Number of Instances:    One or more
        User Account:           Local System
        Start Time:             В течение нескольких секунд после загрузки первого экземпляра (для сеанса 1).
                                Дополнительные экземпляры возникают по мере создания новых сеансов, обычно через удаленный рабочий стол или быстрое переключение пользователей.
    
    Что является НЕобычным поведением этого процесса?

        Фактический родительский процесс. (smss.exe вызывает этот процесс и самозавершается)
        Путь к файлу образа, отличный от C:\Windows\System32
        Незаметные опечатки, чтобы скрыть несанкционированные процессы
        Не работает как SYSTEM
        Значение оболочки в реестре, отличное от explorer.exe

    +++++++++++++++++++++++++++++++++++
    + Windows Explorer (explorer.exe) +
    +++++++++++++++++++++++++++++++++++

    Этот процесс предоставляет пользователю доступ к его папкам и файлам.
    Он также обеспечивает функциональность для других функций, таких как меню «Пуск» и панель задач.

    Как упоминалось ранее, процесс Winlogon запускает userinit.exe, который запускает значение в HKLM\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\Shell.
    Userinit.exe завершает работу после порождения explorer.exe.
    Из-за этого родительский процесс не существует.

    Для explorer.exe будет много дочерних процессов.

    Что является обычным поведением этого процесса?

        Image Path:             %SystemRoot%\explorer.exe
        Parent Process:         Created by userinit.exe and exits
        Number of Instances:    Один или несколько на каждого интерактивно вошедшего в систему пользователя
        User Account:           Вошедшие в систему пользователи
        Start Time:             Первый экземпляр, когда начинается первый сеанс интерактивного входа пользователя
    
    Что является НЕобычным поведением этого процесса?

        Фактический родительский процесс. (userinit.exe вызывает этот процесс и завершает работу)
        Путь к файлу образа, отличный от C:\Windows
        Запуск от имени неизвестного пользователя
        Незаметные опечатки для сокрытия вредоносных процессов на виду
        Исходящие соединения TCP/IP