=====================================================================
* Введение *
************

Это пошаговое руководство, цель которой — продемонстрировать проблему, а не подробно описать атаку

Однако, дам один полезнй совет  -   если Вы застряли на каком-то этапе, так как фильтр, который Вы используете не дает нужного ответа, то просто удалите его, НО оставьте только те моменты в которых Вы полностью усовершенствованный
К примеру, Вам надо найти сервис, который был отакован скопроментированным полователем, но используемый фильтр, который вывел Вас на скопроментированного пользователя, не отображает нужную Вам информацию
Тогда, Вам надо удалить все, но оставить только index, username, soureimage (если используете), earliest/latest (если точно уверены во временном диапозоне)
И уже вычленять информацию из предоставленного результата
Более того, желательно знать значение EvenCode or EventID, но на крайний случай спросить интеренет

=====================================================================
* Unconstrained Delegation *
****************************

Неограниченное делегирование — это привилегия, которая может быть предоставлена ​​учетным записям пользователей или учетным записям компьютеров в среде Active Directory, позволяя службе аутентифицироваться на другом ресурсе от имени любого пользователя.
Это может быть необходимо, когда, например, веб-серверу требуется доступ к серверу базы данных для внесения изменений от имени пользователя.

Вот как выглядит атака по шагам:

    -   Разведка
        Злоумышленник определяет системы, в которых для учетных записей служб включено неограниченное делегирование.
        Для этого можно использовать следующий набо командлетов (ну или сделать из них скрипт   -   ADDelegationLookup.ps1)

            PS C:\Users\johndoe> Get-ADComputer -Filter {TrustedForDelegation -eq $true -and primarygroupid -eq 515} -Properties trustedfordelegation,serviceprincipalname,description
        
        В результате Вы можете получить вывод со следующими полями:

            Description             :   
            DistinguishedName       :   CN=...,OU=...,DC=...,DC=...
            DNSHostName             :   <service_name>.<DC_name>.<DC_name>
            Enabled                 :   True/False
            Name                    :   <service_name>
            ObjectClass             :   <e.i._computer>
            ObjectGUID              :   ####
            SamAccountName          :   <service_name$>
            serviceprincipalname    :   {.....}
            SID                     :   S-#-#-....
            TrustedForDelegation    :   True/False
            UserPrincipalName       :
    
    -   Боковое скольжение/Проникновение
        Далее, злоумышленнику необходимо получить доступ к системе с включенным неограниченным делегированием.

    -   Извлечение данных
        И затем, злоумышленник может попытаться извлечь билеты предоставления билетов (TGT) из памяти скомпрометированной системы с помощью таких инструментов, как Mimikatz или Rubeus

            mimikatz # sekurlsa::logonpasswords

    -   Взлом/Имперсонализация
        Атакующий использует такой инструмент, как Rubeus, для создания сырого запроса AS-REQ для указанного пользователя, чтобы запросить билет TGT.
        Этот шаг не требует повышенных привилегий на хосте для запроса TGT, что делает его более скрытным подходом, чем атака Mimikatz 

            C:\Users\johndoe\tools> .\Rubeus.exe asktgt /user:<target_username> /domain:<target.domain.name /rc4:<NTLM_hash_value> ptt

    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    + Kerberos Authentication With Unconstrained Delegation +
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    При включении неограниченного делегирования основное отличие аутентификации Kerberos заключается в том, что когда пользователь запрашивает билет TGS для удаленной службы, контроллер домена встраивает TGT пользователя в билет службы.
    При подключении к удаленной службе пользователь представляет не только билет TGS, но и свой собственный TGT.
    А когда службе необходимо пройти аутентификацию в другой службе от имени пользователя, она представляет билет TGT пользователя, который служба получила вместе с билетом TGS.

    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    + Unconstrained Delegation Attack Detection Opportunities +
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    Команды PowerShell и фильтры поиска LDAP, используемые для обнаружения неограниченного делегирования, можно обнаружить, отслеживая журналирование блоков скриптов PowerShell (Event ID 4104) и журналирование запросов LDAP.

    Основной целью атаки неограниченного делегирования является извлечение и повторное использование билетов TGT, поэтому также можно использовать обнаружение Pass-the-Ticket.

    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    + Detecting Unconstrained Delegation Attacks With Splunk +
    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    Теперь давайте рассмотрим, как можно идентифицировать Unconstrained Delegation с помощью Splunk.

        index=main earliest=1690544538 latest=1690544540 source="WinEventLog:Microsoft-Windows-PowerShell/Operational" EventCode=4104 Message="*TrustedForDelegation*" OR Message="*userAccountControl:1.2.840.113556.1.4.803:=524288*" 
        table _time, ComputerName, EventCode, Message

=====================================================================
* Constrained Delegation *
**************************

Ограниченное делегирование — это функция Active Directory, которая позволяет службам делегировать учетные данные пользователя только указанным ресурсам, что снижает риск, связанный с неограниченным делегированием.

Однако учетные записи пользователей или компьютеров, имеющие имена участников службы (SPN), заданные в их свойстве msDS-AllowedToDelegateTo, могут выдавать себя за любого пользователя в домене для этих конкретных SPN.

Вот как выглядит атака по шагам:

    -   Разведка
        Злоумышленник выявляет системы, в которых включено ограниченное делегирование, и определяет ресурсы, которым разрешено делегировать полномочия.
        Для этого можно использовать приведенный ниже командлет или скрипт на его основе (ADDelegationLookup.psq)

            PS C:\Users\johndoe> Get-ADObjeсt -fi {(msDs-AllowedToDelegateTo) -like "*"}
    
    -   Боковое скольжение/Проникновение
        Атакующий получает доступ к TGT принципала (пользователя или компьютера).
        TGT может быть извлечен из памяти (дамп Rubeus) или запрошен с хешем принципала.

            C:\Users\johndoe> .\Rubeus.exe asktgt /user:Backup /domain:<target.doain.name> /password:<Backup_password> /outfile:<file_name>

    -   Имперсонализация
        Злоумышленник использует технику S4U, чтобы выдать себя за учетную запись с высокими привилегиями для целевой службы (запрашивая билет TGS).

            C:\Users\johndoe> .\Rubeus.exe s4u /ticket:<file_from_previous_step> /impersonateuser:<target_user_name> /domain:<target.doain.name> /msdsspn:ldap/dc.<target.daomain.name> /altservice:cifs /ptt

            /impersonateuser:<имя>  -   Указывает имя жертвы, от имени которой мы хотим действовать.
            /altservice:<имя>       -   Указывает альтернативную службу, для которой будет получен билет.
            /ptt                    -   "Pass-the-ticket" — автоматически вставляет полученный TGS-билет в текущую сессию, чтобы сразу использовать его.

    -   Проверка
        Злоумышленник внедряет запрошенный билет и получает доступ к целевым сервисам от имени выдаваемого пользователя.

            C:\Users\johndoe> klist

    +++++++++++++++++++++++++++++++++++++++++++++++++++
    + Kerberos Protocol Extensions - Service For User +
    +++++++++++++++++++++++++++++++++++++++++++++++++++

    Service for User to Self (S4U2self) и Service for User to Proxy (S4U2proxy) позволяют сервису запрашивать билет из центра распространения ключей (KDC) от имени пользователя.
    S4U2self позволяет сервису получать TGS для себя от имени пользователя, в то время как S4U2proxy позволяет сервису получать TGS от имени пользователя для второго сервиса.

        -   S4U2self был разработан, чтобы позволить пользователю запрашивать билет TGS, когда вместо Kerberos использовался другой метод аутентификации.
            Важно, что этот билет TGS может быть запрошен от имени любого пользователя, например, администратора.

        -   S4U2proxy был разработан для того, чтобы брать пересылаемый билет и использовать его для запроса билета TGS для любого SPN, указанного в параметрах msds-allowedtodelegateto для пользователя, указанного в части S4U2self.

    С помощью комбинации S4U2self и S4U2proxy злоумышленник может выдавать себя за любого пользователя для имен участников службы (SPN), установленных в свойствах msDS-AllowedToDelegateTo.

    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    + Constrained Delegation Attack Detection Opportunities +
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    Подобно неограниченному делегированию, можно обнаружить команды PowerShell и запросы LDAP, направленные на обнаружение уязвимых пользователей и компьютеров ограниченного делегирования.

    Чтобы запросить билет TGT для принципала, а также билет TGS с использованием техники S4U, Rubeus устанавливает соединения с контроллером домена.
    Эта активность может быть обнаружена как необычное сетевое соединение процесса с портом TCP/UDP 88 (Kerberos).

    +++++++++++++++++++++++++++++++++++++++++++++++++++
    + Kerberos Protocol Extensions - Service For User +
    +++++++++++++++++++++++++++++++++++++++++++++++++++

    Теперь давайте рассмотрим, как можно идентифицировать Constrained Delegation с помощью Splunk
    Рассмотрим на следующих примерах

        /////////////////////////////////////////////////////////////////////////////
        /// Detecting Constrained Delegation Attacks - Leveraging PowerShell Logs ///
        /////////////////////////////////////////////////////////////////////////////

            index=main earliest=1690544553 latest=1690562556 source="WinEventLog:Microsoft-Windows-PowerShell/Operational" EventCode=4104 Message="*msDS-AllowedToDelegateTo*" 
            | table _time, ComputerName, EventCode, Message

        /////////////////////////////////////////////////////////////////////////
        /// Detecting Constrained Delegation Attacks - Leveraging Sysmon Logs ///
        /////////////////////////////////////////////////////////////////////////

            index=main earliest=1690562367 latest=1690562556 source="XmlWinEventLog:Microsoft-Windows-Sysmon/Operational" 
            | eventstats values(process) as process by process_id
            | where EventCode=3 AND dest_port=88
            | table _time, Computer, dest_ip, dest_port, Image, process

Ответ   -   DC01.corp.local // BLUE.corp.local