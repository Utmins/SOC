=====================================================================
* Введение *
************

Это пошаговое руководство, цель которой — продемонстрировать проблему, а не подробно описать атаку

Однако, дам один полезнй совет  -   если Вы застряли на каком-то этапе, так как фильтр, который Вы используете не дает нужного ответа, то просто удалите его, НО оставьте только те моменты в которых Вы полностью усовершенствованный
К примеру, Вам надо найти сервис, который был отакован скопроментированным полователем, но используемый фильтр, который вывел Вас на скопроментированного пользователя, не отображает нужную Вам информацию
Тогда, Вам надо удалить все, но оставить только index, username, soureimage (если используете), earliest/latest (если точно уверены во временном диапозоне)
И уже вычленять информацию из предоставленного результата
Более того, желательно знать значение EvenCode or EventID, но на крайний случай спросить интеренет

    +++++++++++++++++++++++++++++++
    + LLMNR/NBT-NS/mDNS Poisoning +
    +++++++++++++++++++++++++++++++

    Отравление LLMNR (Link-Local Multicast Name Resolution) и NBT-NS (NetBIOS Name Service), также называемое подменой NBNS, — это атаки на сетевом уровне, которые используют неэффективность этих протоколов разрешения имен.
    И LLMNR, и NBT-NS используются для разрешения имен хостов в IP-адреса в локальных сетях, когда разрешение полностью определенного доменного имени (FQDN) не удается.
    Однако отсутствие встроенных механизмов безопасности делает их уязвимыми для атак подмены и отравления.

    Обычно злоумышленники используют инструмент Responder для выполнения отравления LLMNR, NBT-NS или mDNS.

    Responder   -   https://github.com/lgandx/Responder

    Схема атаки выглядит следующим образом

        +++++++++++++       1)       +++++++++++++
        +   Victim  +--------------->+    DNS    +
        +    Host   +<---------------+   Server  +
        +++++++++++++       2)       +++++++++++++
            |   /\
            |   |   
            |   |
          3)|   |4)
            |   |
            |   |
            \/  |
        +++++++++++++
        +   Hacker  +
        +    Host   +
        +++++++++++++

        1)  Устройство жертвы отправляет запрос на разрешение имени для неправильно набранного имени хоста (Resolve \\fileshrae using DNS).
        2)  DNS не может разрешить неправильно набранное имя хоста, т.е. отправляет сообщение по типу "Unknown hostname"
        3)  Устройство жертвы отправляет запрос на разрешение имени для неправильно набранного имени хоста, используя LLMNR/NBT-NS (Resolve \\fileshare using LLMNR/NBT-NS/mDNS)
        4)  Хост атакующего отвечает на трафик LLMNR (UDP 5355)/NBT-NS (UDP 137), делая вид, что знает идентификацию запрошенного хоста.
            Это фактически отравляет службу, направляя жертву на связь с контролируемой злоумышленником системой.

    Результатом успешной атаки является получение хеша NetNTLM жертвы, который можно либо взломать, либо передать в попытке получить доступ к системам, где эти учетные данные действительны.

    +++++++++++++++++++++++++++++++++++++
    + Responder Detection Opportunities +
    +++++++++++++++++++++++++++++++++++++

    Обнаружение отравления LLMNR, NBT-NS и mDNS может быть сложной задачей.
    Однако организации могут снизить риск, внедрив следующие меры:

        *   Развертывание решений для мониторинга сети для обнаружения необычных шаблонов трафика LLMNR и NBT-NS, таких как повышенный объем запросов на разрешение имен из одного источника.

        *   Использование подхода honeypot — разрешение имен для несуществующих хостов должно завершиться неудачей.
            Если злоумышленник присутствует и подделывает ответы LLMNR/NBT-NS/mDNS, разрешение имен будет успешным. 
    
    Информация из данного источника поможет не только понять схему обнаружения злоумышленника в сети
    Но и содержит небольшой скрипт, внедрение которого поможет автоматизировать процесс обнаружения скопроментированного хоста
    
        https://www.praetorian.com/blog/a-simple-and-effective-way-to-detect-broadcast-name-resolution-poisoning-bnrp/
    
    Скрипт PowerShell, аналогичный приведенному выше, можно автоматизировать для запуска в качестве запланированной задачи, чтобы помочь в обнаружении.
    Регистрация этой активности может быть сложной, но можно использовать командлет PowerShell New-EventLog.

        PS C:\Users\Administrator> New-EventLog -LogName Application -Source LLMNRDetection

    Чтобы создать событие, следует использовать командлет Write-EventLog:

        PS C:\Users\Administrator> Write-EventLog -LogName Application -Source LLMNRDetection -EventId 19001 -Message $msg -EntryType Warning

    ++++++++++++++++++++++++++++++++++++++++++++++++
    + Detecting Responder-like Attacks With Splunk +
    ++++++++++++++++++++++++++++++++++++++++++++++++

    Теперь давайте рассмотрим насколько вариантов, как можно идентифицировать атаки типа Responder, которые обсуждались ранее, используя Splunk и журналы скрипта PowerShell, аналогичного приведенному выше.
    *** расшифровку предоставлять не буду, так как тут и без нее все должно быть Вам понятно

        /////////////////////////////////////////////////
        /// Вариант 1   -   SourceName=LLMNRDetection ///
        /////////////////////////////////////////////////

        index=main earliest=1690290078 latest=1690291207 SourceName=LLMNRDetection
        | table _time, ComputerName, SourceName, Message

        ////////////////////////////////////
        /// Вариант 2   -   EventCode 22 ///
        ////////////////////////////////////

        Событие Sysmon с идентификатором 22 также можно использовать для отслеживания DNS-запросов, связанных с несуществующими/неправильно введенными общими файловыми ресурсами.
        Напомню, Sysmon Event ID 22 -   это DNS-запрос, также известный как код события Windows 22, 
        Он используетсядля получения информации о DNS-запросах, отправляемых определенным хостом и связанных с определенным изображением.

        index=main earliest=1690290078 latest=1690291207 EventCode=22 
        | table _time, Computer, user, Image, QueryName, QueryResults

        ///////////////////////////////////////////
        /// Вариант 3   -   EventCode IN (4648) ///
        ///////////////////////////////////////////

        Не забываем, что событие 4648 также может использоваться для обнаружения явных входов в мошеннические файловые ресурсы, которые злоумышленники могут использовать для сбора учетных данных законных пользователей.
        Напомню, Event ID 4648  -   A logon was attempted using explicit credentials.

        index=main earliest=1690290814 latest=1690291207 EventCode IN (4648) 
        | table _time, EventCode, source, name, user, Target_Server_Name, Message
        | sort 0 _time
