=====================================================================
* Руководство *
***************

Это пошаговое руководство, цель которой — продемонстрировать проблему, а не подробно описать атаку.

Атака будут выполняться с предоставленных машин Windows 10 (WS001) и Kali Linux.
Предполагается, что злоумышленник уже получил remote code execution (или что-то подобное) на этой машине Windows 10 (WS001).
Пользователь, который, как мы предполагаем, скомпрометирован, — это Боб, обычный пользователь в Active Directory без назначенных специальных разрешений.

Окружение состоит из следующих машин и соответствующих им IP-адресов:

	-	DC1		172.16.18.3
	-	DC2		172.16.18.4
	-	Server01	172.16.18.10
	-	PKI		172.16.18.15
	-	WS001		DHCP или 172.16.18.25 (в зависимости от раздела)
	-	Kali Linux	DHCP или 172.16.18.20 (в зависимости от раздела)

Если надо подключиться к любой из управляющих машин AD сервера (к примеру - DC1)

	i)		Поключаемся к хосту жертвы через RDP
	ii)		Пуск -> Windows Accessories -> Remote Desktop
	iii)		Computer	=	DC1 ip address
			User Name	=	Имя пользователя (к примеру htb-student)
	iv)		Пароль введем позже (будет предоставлен запрос)
	v)		Соглашаемся на устанвку соединения
	
=====================================================================
* Легенда *
***********

Объекты в Active Directory имеют множество различных свойств
Например, объект пользователя может содержать свойства, которые содержат такую ​​информацию:

	-	Активна ли учетная запись?
	-	Когда истекает срок действия учетной записи?
	-	Когда последний раз менялся пароль?
	-	Каково имя учетной записи?
	-	Расположение офиса сотрудника и номер телефона

Когда администраторы создают учетные записи, они заполняют эти свойства.
В прошлом распространенной практикой было добавление пароля пользователя (или учетной записи службы) в свойства Description or Info, полагая, что для просмотра этих свойств необходимы права администратора в AD.
Однако каждый пользователь домена может читать большинство свойств объекта (включая Description or Info)

=====================================================================
* Схема атаки *
***************

Для извлечения данной информации как правило используют скрипты
Простой скрипт PowerShell может опрашивать весь домен, выполняя поиск определенных поисковых терминов/строк в полях «Description» или «Info».

Вот пример подобного скрипта powershell

	Function SearchUserClearTextInformation
	{
    		Param (
        		[Parameter(Mandatory=$true)]
        		[Array] $Terms,

       			[Parameter(Mandatory=$false)]
        		[String] $Domain
    		)

    		if ([string]::IsNullOrEmpty($Domain)) {
        		$dc = (Get-ADDomain).RIDMaster
    		} else {
        		$dc = (Get-ADDomain $Domain).RIDMaster
    		}

    		$list = @()

    		foreach ($t in $Terms)
    		{
        		$list += "(`$_.Description -like `"*$t*`")"
        		$list += "(`$_.Info -like `"*$t*`")"
    		}

    		Get-ADUser -Filter * -Server $dc -Properties Enabled,Description,Info,PasswordNeverExpires,PasswordLastSet |
        		Where { Invoke-Expression ($list -join ' -OR ') } | 
        		Select SamAccountName,Enabled,Description,Info,PasswordNeverExpires,PasswordLastSet | 
        		fl
	}

Запуск данного скрипта можно использовать для поиска строки pass, чтобы найти пароль Slavi123 в свойстве Description пользователя

	PS C:\...\...\...> SearchUserClearTextInformation -Terms "pass"

***	Только не забываем изменить политику запуска исполняемых файлов (если необходимо) и импортировать данный скрипт с базу командлетов системы

		PS C:\...\...\...> Set-ExecutionPolicy -ExecutionPolicy <type_of_executionpolicy> -Scope <type_of_scope>

	Для импорта скрипта в базу данным командлетов системы, чтобы образаться к скрпту, используя его название, надо применить следующую команду

		 PS C:\...\...\...> Import-Module <script_name.ps1>
		
=====================================================================
* Предотвращение/защита *
*************************

Существует много вариантов предотвращения этой атаки/неправильной конфигурации:

	-	Выполняйте непрерывные оценки для обнаружения проблемы хранения учетных данных в свойствах объектов.

	-	Обучите сотрудников с высокими привилегиями избегать хранения учетных данных в свойствах объектов.

	-	Автоматизируйте максимально возможную часть процесса создания пользователей, чтобы гарантировать, что администраторы не будут обрабатывать учетные записи вручную
		Это поможет снизить риск введения жестко закодированных учетных данных в объекты пользователей.

=====================================================================
* Обнаружение *
***************

Базовое поведение пользователей — лучший метод обнаружения злоупотребления раскрытыми учетными данными в свойствах объектов.
Хотя это может быть сложно для учетных записей обычных пользователей, проще запустить оповещение для учетных записей администраторов/служб, поведение которых можно понять и сопоставить с базовым поведением.
Автоматизированные инструменты, которые отслеживают поведение пользователей, показали возросшую успешность в обнаружении ненормальных входов в систему.

При обнаружении попыток раскрытия учетных данных пользователя(-ей) (предполагая, что раскрытые учетные данные актуальны), мы ожидаем событий с идентификатором события 4624/4625 (неудачный и успешный вход в систему) и 4768 (запрошен Kerberos TGT).

***	К сожалению, идентификатор события 4738 (A user account was changed), сгенерированный при изменении объекта пользователя, не показывает конкретное свойство, которое было изменено, и не предоставляет новые значения свойств.
	Поэтому мы не можем использовать это событие для определения того, добавляют ли администраторы учетные данные к свойствам объектов.

=====================================================================
* Ловушка/Honeypot *
********************

Хранение учетных данных в свойствах объектов — отличный метод приманки для не очень зрелых сред.
Если есть проблемы с базовой кибергигиеной, то скорее всего, будут такие проблемы (хранение учетных данных в свойствах объектов) в среде AD.
Для настройки пользователя приманки нам нужно убедиться в следующем:

	-	Пароль/учетные данные настроены в поле «Description», так как его проще всего подобрать любому злоумышленнику.
	-	Предоставленный пароль поддельный/неверный.
	-	Учетная запись включена и имеет недавние попытки входа в систему.
	-	Хотя мы можем использовать regular user или service account, тем не менее с большей вероятностью именно service account будут скомпроментированы с целью раскрытия данных, поскольку администраторы, как правило, создают их вручную.
		Напротив, автоматизированные системы управления персоналом часто создают учетные записи сотрудников (и сотрудники, скорее всего, уже сменили пароль).
	-	Учетная запись имеет последний настроенный пароль 2+ года назад (что делает более правдоподобным то, что пароль, скорее всего, подойдет).

Поскольку предоставленный пароль неверен, мы в первую очередь ожидаем неудачных попыток входа в систему
На это могут указывать три идентификатора событий:

	-	4625 (An account failed to log on)
	-	4771 (Kerberos pre-authentication failed)
	-	4776 (The computer attempted to validate the credentials for an account)