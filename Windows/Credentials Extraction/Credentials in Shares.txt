=====================================================================
* Руководство *
***************

Это пошаговое руководство, цель которой — продемонстрировать проблему, а не подробно описать атаку.

Атака будут выполняться с предоставленных машин Windows 10 (WS001) и Kali Linux.
Предполагается, что злоумышленник уже получил remote code execution (или что-то подобное) на этой машине Windows 10 (WS001).
Пользователь, который, как мы предполагаем, скомпрометирован, — это Боб, обычный пользователь в Active Directory без назначенных специальных разрешений.

Окружение состоит из следующих машин и соответствующих им IP-адресов:

	-	DC1		172.16.18.3
	-	DC2		172.16.18.4
	-	Server01	172.16.18.10
	-	PKI		172.16.18.15
	-	WS001		DHCP или 172.16.18.25 (в зависимости от раздела)
	-	Kali Linux	DHCP или 172.16.18.20 (в зависимости от раздела)

Если надо подключиться к любой из управляющих машин AD сервера (к примеру - DC1)

	i)		Поключаемся к хосту жертвы через RDP
	ii)		Пуск -> Windows Accessories -> Remote Desktop
	iii)		Computer	=	DC1 ip address
			User Name	=	Имя пользователя (к примеру htb-student)
	iv)		Пароль введем позже (будет предоставлен запрос)
	v)		Соглашаемся на устанвку соединения
	
=====================================================================
* Легенда *
***********

Учетные данные, со сводобным доступом в сетевых ресурсах, являются (вероятно) наиболее часто встречающейся ошибкой конфигурации в Active Directory на сегодняшний день.
Любые средние/крупные предприятия, несомненно, будут иметь общедоступные учетные данные, хотя это может случиться и в малом бизнесе.
Такое ощущение, что мы переходим от «Не оставляйте свой пароль на заметке на экране» к «Не оставляйте незашифрованные учетные данные и токены авторизации разбросанными повсюду».

Чаще всего учетные данные в сетевых ресурсах встречаются в скриптах и ​​файлах конфигурации (batch, cmd, PowerShell, conf, ini и config).
Однако, учетные данные на локальном компьютере пользователя в основном находятся в текстовых файлах, таблицах Excel или документах Word.
Основное различие между хранением учетных данных на сетевых ресурсах и машинах заключается в том, что первое представляет значительно более высокий риск, поскольку оно может быть доступно каждому пользователю.
Сетевой ресурс может быть доступен каждому пользователю по четырем основным причинам:

	-	Администратор изначально создает ресурсы с надлежащим образом заблокированным доступом, но в конечном итоге открывает его для всех.
		Другой администратор сервера также может быть виновником.
		Тем не менее, общий ресурс в конечном итоге становится открытым для Everyone or Users, и помните, что группа пользователей сервера содержит пользователей домена в качестве своего члена в средах Active Directory.
		Поэтому каждый пользователь домена будет иметь как минимум доступ на чтение (ошибочно предполагается, что добавление «Пользователей» предоставит доступ только локальным пользователям сервера или администраторам).

	-	Администратор, добавляющий скрипты с учетными данными в общий ресурс, может не понимать/знать, что это общая папка.
		Многие администраторы тестируют свои сценарии в папке сценариев на диске C:\; однако, если папка является общей (например, для пользователей), то данные внутри сценариев также отображаются в сети.

	-	Другой пример - намеренное создание открытого общего ресурса для перемещения данных на сервер (например, приложения или некоторых других файлов) и забывание закрыть его позже.

	-	Наконец, в случае скрытых общих ресурсов (папок, имя которых заканчивается знаком доллара $), существует заблуждение, что пользователи не могут найти папку, если не знают, где она находится
		Недоразумение возникает из-за того, что Проводник в Windows не отображает файлы и папки, имена которых заканчиваются на символ $, однако любой другой инструмент их отображает.

=====================================================================
* Схема атаки *
***************

Первый шаг — определить, какие общие ресурсы существуют в домене.
Существует множество инструментов, которые могут этого добиться, например - Invoke-ShareFinder от PowerView.
Эта функция позволяет указать, что общие ресурсы по умолчанию должны быть отфильтрованы (например, c$ и IPC$), а также проверить, имеет ли вызывающий пользователь доступ к остальным общим ресурсам, которые он находит.
Окончательный вывод содержит список общих ресурсов не по умолчанию, к которым у текущей учетной записи пользователя есть как минимум право на чтение

Invoke-ShareFinder можно найти тут	-	https://github.com/darkoperator/Veil-PowerView/blob/master/PowerView/functions/Invoke-ShareFinder.ps1

Для поиска и отображение всех общих ресурсов в конкретном домене можно использовать следующую комнаду

	PS C:\...\...\...> Invoke-ShareFinder -domain <domain.name> -ExcludeStandard -CheckShareAccess

Для поиска и отображения общих ресурсов во всех доменах, достаточно лишь только одной комнады

	PS C:\...\...\...> Invoke-ShareFinder

***	Если скрипт не запускается (в большинстве случаем из-за настроек запуска исполняемых файло), то спрева следует устранить проблему
	На нашей тестовой машине проблема в ограничениях на запус исполняемых файлов
	Для ее решения используем следующий шаги:

		i)		Спрева надо поерделить, какая политика запуска исполняемых файлов установлена на системе
					PS C:\...\...\> Get-ExecutionPolicy -List

		ii)		Если Вы хотите изменить политику на постоянной основе, то
					PS C:\...\...\>	Set-ExecutionPolicy -ExecutionPolicy <type_of_executionpolicy> -Scope <desired_scope>

			За более детально информацией по установке/изменению/снятию политик запуска исполняемых файлов в среде Windows	-	https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.security/set-executionpolicy?view=powershell-7.4#-executionpolicy

		А описание самих ExecutionPolicy и Scope можно найти тут	-	https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_execution_policies?view=powershell-7.5

Количество общих ресурсов разнится от домена к домену, однако в производственных средах их число может достигать тысяч (что требует длительного времени для анализа).

В нашем случаем мы имеем:

	\\DC1.eagle.local\NETLOGON      - Logon server share
	\\DC1.eagle.local\SYSVOL        - Logon server share
	\\Server01.eagle.local\dev$     -
	\\DC2.eagle.local\NETLOGON      - Logon server share
	\\DC2.eagle.local\SYSVOL        - Logon server share
	\\WS001.eagle.local\Share       -
	\\WS001.eagle.local\Users       -

Анализ результата выявил 2 вида общедоступных ресурсов

	-	Со знаком $
	-	Без знака $

Отличие в том, что ресурс со знаком доллара не будет отображаться при обычном запросе к ролительскому ресурсу в адресной строке проводника
Однако, мы можем перейди к нему напрямую, если хотим просмотреть его содержимое

Существует несколько автоматизированных инструментов, которые могут анализировать коллекцию файлов и подбирать соответствующие слова.
Данныую утилиту можно найти тут	-	https://github.com/vivami/SauronEye

Если общих ресурсов мыло (как в нашем случае), нам проще воспользоваться более ручным методом, а именно встроенную команду findstr для желаемой папки.

	i)		Переходим в желаемый ресурс
				PS C:\...\...\...> cd \\Server01.eagle.local\dev$
	
	ii)		Используем утилиту findstr
				PS Microsoft.PowerShell.Core\FileSystem::\\Server01.eagle.local\dev$> findstr /m /s /i "<term>" <target>
		
			Давайте подробно рассмотрим ее составляющие элементы:

				-	/s
					заставляет искать в текущем каталоге и всех подкаталогах

				-	/i
					игнорирует регистр в поисковом запросе

				-	/m
					показывает только имя файла для файла, который соответствует поисковому запросу.
					Нам это крайне необходимо в реальных производственных средах из-за огромного количества возвращаемого текста.
					Например, это могут быть тысячи строк в скриптах PowerShell, которые содержат параметр PassThru при сопоставлении для строки pass.

					Обратите внимание, что если мы удалим аргумент `/m', он отобразит точную строку в файле, где произошло совпадение, а не само совпадение

				-	"<term>"
					Термин, который определяет то, ЧТО мы ищем.
					Хорошими кандидатами являются pass, pw и имя NETBIOS домена.

					Один очевидный и все же необычный поисковый термин — это имя NetBIOS домена.
					Такие команды, как runas и net, принимают пароли как позиционный аргумент в командной строке, а не передают их через pass, pw или любой другой термин.
					Обычно он определяется как /user:DOMAIN\USERNAME PASSWORD.
				
				-	<target>
					Термин, который определяет то, ГДЕ мы ищем.
					Привлекательными целями для этого поиска будут такие типы файлов, как .bat, .cmd, .ps1, .conf, .config и .ini.
			
Для просмотра содержимого найденного файла можно использовать утилиту	-	cat
Содержимое может включать учетные данные
Это будут встроенные учетные данные домена (нередко можно найти права администратора домена в этих файлах скриптов).

Обратите внимание, что запуск findstr может быть воспринят Защитником Windows как подозрительное поведение.

=====================================================================
* Предотвращение/защита *
*************************

Лучшая практика предотвращения таких атак — заблокировать все общие ресурсы в домене, чтобы не было свободных разрешений.

Технически нет способа предотвратить то, что пользователи оставляют после себя в скриптах или других открытых файлах, поэтому необходимо выполнять регулярные сканирования (например, еженедельные) в средах AD для выявления любых новых открытых общих ресурсов или учетных данных, раскрытых в старых.

=====================================================================
* Обнаружение *
***************

Понимание и анализ поведения пользователей — лучший метод обнаружения злоупотребления обнаруженными учетными данными в общих ресурсах.

Предположим, мы знаем время и место входа пользователей с помощью анализа данных.
В этом случае будет легко оповещать о подозрительном поведении, например, об обнаруженной учетной записи «Администратор» в атаке.
Если бы мы были зрелой организацией, которая использовала Privileged Access Workstation, мы бы оповещали о привилегированных пользователях, не прошедших аутентификацию с этих машин.
Это были бы оповещения о событиях с идентификаторами 4624/4625 (неудачный и успешный вход) и 4768 (запрошен Kerberos TGT).

Другой метод обнаружения — обнаружение соединений «один ко многим», например, когда Invoke-ShareFinder сканирует каждое доменное устройство, чтобы получить список его сетевых ресурсов.
Было бы ненормально, если бы рабочая станция одновременно подключалась к сотням или даже тысячам других устройств.

=====================================================================
* Ловушка/Honeypot *
********************

Эта атака дает еще одну отличную причину для того, чтобы оставить пользователя-приманку в средах AD		-	полупривилегированное имя пользователя с неправильным паролем.
Злоумышленник может обнаружить это, только если пароль был изменен после последнего изменения файла, содержащего этот раскрытый поддельный пароль.
Ниже приведена хорошая настройка для учетной записи:

	-	Учетная запись службы, созданная более 2 лет назад.
		Последнее изменение пароля должно быть не менее года назад.

	-	Последнее время изменения файла, содержащего поддельный пароль, должно быть после последнего изменения пароля учетной записи.
		Поскольку это поддельный пароль, нет риска, что агент угрозы скомпрометирует учетную запись.

	-	Учетная запись все еще активна в среде.

	-	Скрипт, содержащий учетные данные, должен быть реалистичным.
		Например, если мы выберем учетную запись службы MSSQL, строка подключения может раскрыть учетные данные.

Поскольку предоставленный пароль неверен, мы в первую очередь ожидаем неудачных попыток входа в систему.
На это могут указывать три идентификатора событий (4625, 4771 и 4776).
