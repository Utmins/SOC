=====================================================================
* Руководство *
***************

Это пошаговое руководство, цель которой — продемонстрировать проблему, а не подробно описать атаку.

Атака будут выполняться с предоставленных машин Windows 10 (WS001) и Kali Linux.
Предполагается, что злоумышленник уже получил remote code execution (или что-то подобное) на этой машине Windows 10 (WS001).
Пользователь, который, как мы предполагаем, скомпрометирован, — это Боб, обычный пользователь в Active Directory без назначенных специальных разрешений.

Окружение состоит из следующих машин и соответствующих им IP-адресов:

	-	DC1		172.16.18.3
	-	DC2		172.16.18.4
	-	Server01	172.16.18.10
	-	PKI		172.16.18.15
	-	WS001		DHCP или 172.16.18.25 (в зависимости от раздела)
	-	Kali Linux	DHCP или 172.16.18.20 (в зависимости от раздела)

Если надо подключиться к любой из управляющих машин AD сервера (к примеру - DC1)

	i)		Поключаемся к хосту жертвы через RDP
	ii)		Пуск -> Windows Accessories -> Remote Desktop
	iii)		Computer	=	DC1 ip address
			User Name	=	Имя пользователя (к примеру htb-student)
	iv)		Пароль введем позже (будет предоставлен запрос)
	v)		Соглашаемся на устанвку соединения
	
=====================================================================
* Легенда *
***********

Объект групповой политики (GPO) — это виртуальный набор параметров политики, имеющий уникальное имя.
GPO — наиболее широко используемый инструмент управления конфигурацией в Active Directory.
Каждый GPO содержит набор из нуля или более параметров политики.
Они связаны с организационной единицей в структуре AD, чтобы их параметры применялись к объектам, находящимся в OU или любом дочернем OU того, с которым связан GPO.

GPO можно ограничить, указав, например, группу AD (по умолчанию она применяется к аутентифицированным пользователям) или фильтр WMI (например, применяется только к компьютерам Windows 10).

Когда мы создаем новый GPO, изменять его могут только администраторы домена (и аналогичные привилегированные роли).
Однако в средах мы столкнемся с различными делегированиями, которые позволяют учетным записям с меньшими привилегиями вносить изменения в GPO; вот в чем проблема.
Во многих организациях есть GPO, которые могут изменять «Прошедших проверку пользователей» или «Пользователей домена», что подразумевает, что любой скомпрометированный пользователь позволит злоумышленнику изменять эти GPO.
Изменения могут включать в себя, например, добавление сценариев запуска или запланированную задачу для выполнения файла.
Такой доступ позволит злоумышленнику скомпрометировать все компьютерные объекты в OU, с которыми связаны уязвимые GPO.

Аналогичным образом администраторы выполняют установку программного обеспечения через GPO или настраивают сценарии запуска, расположенные на сетевых ресурсах.
Если сетевой ресурс настроен неправильно, злоумышленник может заменить файл, который должен быть выполнен системой, на вредоносный.
GPO может не иметь неправильных конфигураций в этих сценариях, просто неправильно настроенные разрешения NTFS для развернутых файлов.

=====================================================================
* Схема атаки *
***************

Здесь нет пошагового руководства по атаке — это простое редактирование GPO или замена файла.
		
=====================================================================
* Предотвращение/защита *
*************************

Один из способов предотвратить эту атаку — заблокировать разрешения GPO для изменения только определенной группой пользователей или определенной учетной записью
Поскольку это значительно ограничит возможности тех, кто может редактировать GPO или изменять его разрешения (в отличие от всех администраторов домена, которых в некоторых организациях может быть больше 50).

Аналогично, никогда не развертывайте файлы, хранящиеся в сетевых расположениях, чтобы многие пользователи могли изменять разрешения общего доступа.

Мы также должны активно и регулярно проверять разрешения GPO, с возможностью автоматизации задачи, которая выполняется ежечасно и оповещает об обнаружении каких-либо отклонений от ожидаемых разрешений.

=====================================================================
* Обнаружение *
***************

К счастью, момент изменения GPO обнаружить просто.
Если включен аудит изменений службы каталогов, то будет сгенерирован идентификатор события 5136 (A directory service object was modified)

При анализе лога, особое внимание следуеь уделять следующим разделам лога:

	-	Account Name (in Subject category)	-	Имя пользователя, кто осуществлял изменения
	-	DN & GUID (in Object category)		-	Отображает значение GUID для измененного GPO

С точки зрения защиты, если здесь внезапно появляется пользователь, у которого, как ожидается, нет права изменять объект групповой политики, следует поднять тревожный сигнал.

=====================================================================
* Ловушка/Honeypot *
********************

Распространенное мнение заключается в том, что из-за простых методов обнаружения этих атак стоит иметь неправильно настроенный GPO в среде, чтобы агенты угроз могли злоупотреблять им
Это также верно для deployed file, поскольку он может постоянно отслеживаться на предмет любых изменений в файле (например, постоянно проверяя, не изменилось ли значение хэша файла).
Однако внедрение этих методов рекомендуется только в том случае, если организация является зрелой и проактивной в реагировании на высокие/критические уязвимости
Это связано с тем, что если в будущем будет обнаружен путь эскалации через какое-либо изменение GPO, если только не будет возможности смягчить его в режиме реального времени, ловушка обернется против вас и станет самым слабым местом.

Однако при реализации honeypot с использованием неправильно настроенного GPO учтите следующее:

	-	GPO связан только с некритическими серверами.
	-	Непрерывная автоматизация используется для мониторинга изменений GPO. 
		Если файл GPO изменяется, мы немедленно отключим пользователя, выполняющего изменение.
	-	GPO должен быть автоматически отсоединен от всех расположений, если обнаружено изменение.

Рассмотрим следующий сценарий, чтобы продемонстрировать, как PowerShell может автоматизировать это.
В нашем случае GPO honeypot идентифицируется значением GUID, а желаемое действие — отключить учетную запись(и), связанную с этим изменением.
Причина потенциального наличия нескольких учетных записей заключается в том, что мы будем выполнять сценарий каждые 15 минут как запланированную задачу.
Таким образом, если для изменения GPO в этот период времени использовались многочисленные скомпрометированные пользователи, мы отключим их всех мгновенно.

В сценарии есть закомментированный раздел, который можно использовать для отправки электронного письма в качестве оповещения, но для PoC мы отобразим вывод в командной строке
Вот как будет выглядеть PowerShell скрипт:

	# Define filter for the last 15 minutes
	$TimeSpan = (Get-Date) - (New-TimeSpan -Minutes 15)

	# Search for event ID 5136 (GPO modified) in the past 15 minutes
	$Logs = Get-WinEvent -FilterHashtable @{LogName='Security';id=5136;StartTime=$TimeSpan} -ErrorAction SilentlyContinue |`
	Where-Object {$_.Properties[8].Value -match "CN={73C66DBB-81DA-44D8-BDEF-20BA2C27056D},CN=POLICIES,CN=SYSTEM,DC=EAGLE,DC=LOCAL"}


	if($Logs){
  	  $emailBody = "Honeypot GPO '73C66DBB-81DA-44D8-BDEF-20BA2C27056D' was modified`r`n"
   	 $disabledUsers = @()
   	 ForEach($log in $logs){
    	    If(((Get-ADUser -identity $log.Properties[3].Value).Enabled -eq $true) -and ($log.Properties[3].Value -notin $disabledUsers)){
    	        Disable-ADAccount -Identity $log.Properties[3].Value
    	        $emailBody = $emailBody + "Disabled user " + $log.Properties[3].Value + "`r`n"
    	        $disabledUsers += $log.Properties[3].Value
    	    }
   	 }
   	 # Send an alert via email - complete the command below
   	 # Send-MailMessage
   	 $emailBody
	}

Если скрипт обнаружит, что объект групповой политики honeypot был изменен, мы увидим следующий вывод (или текст письма, если он настроен):

	Honeypot GPO '73C66DBB-81DA-44D8-BDEF-20BA2C27056D' was modified
	Disabled user bob

Как мы видим, пользователь bob был обнаружен изменяющим наш honeypot GPO и, следовательно, отключен.
Отключение пользователя затем создаст событие с идентификатором 4725 (A user account was disabled)