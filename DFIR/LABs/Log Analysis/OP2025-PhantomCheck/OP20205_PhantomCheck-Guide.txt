=====================================================================
* Легенда сценария *
********************

Компания Talion подозревает, что злоумышленник проводил проверки защиты от виртуализации
Такие проверки проводятся, чтобы избежать не только обнаружения в изолированных средах, но определить, что злоумышленник или его зловред находяться в изолированной среде.

Ваша задача — проанализировать журналы событий и определить конкретные методы, используемые для обнаружения виртуализации.
А также собрать доказательств проверок реестра или процессов, выполненных злоумышленником для выполнения этих проверок.

Данный сценарий демонстрирует некоторые распространённые методы обнаружения виртуализации, используемые злоумышленниками.
Также, аналитики смогут создавать правила обнаружения:

    -   определяя конкретные запросы WMI;
    -   сравнивая процессы обнаружения виртуальных машин;
    -   анализируя ключи реестра или пути к файлам, связанные с виртуальными средами.

Для определения поставленных задачь будут предоставлены 2 журнала Windows Events 

    -   Microsoft-Windows-Powershell.evtx
        Используется в основном для учёта факта запуска PowerShell (кто, когда, сессия).
        Фиксирует создание консоли/скрипта, например: запуск PowerShell.exe, открытие ISE, выполнение скрипта (.ps1).
        Чаще всего хранит события с ID:
            400 (начало)
            403 (конец)
            800 (детали/результат)

    -   Microsoft-Powershell-Operational.evtx
        Это основной источник для анализа действий в PowerShell, особенно при расследовании атак.
        Показывает, что именно выполнялось в PowerShell (команды, скрипты, ошибки).
        Позволяет увидеть:
            Запуск конкретных команд (ID 4103).
            Вводимые строки/скрипты (ID 4104).
            Ошибки и предупреждения.

А также инструментами, которые можно использовать для адаптации журналов *.evtx в удобночитаемый формат *.csv с последующим анализов в специальных приложениях:

    -   EvtxEcmd
        Это инструмент командной строки, который анализирует журналы событий Windows в различных форматах, таких как CSV, JSON, XML и т. д.

    -   TimelineExplorer
        Инструмент на основе графического интерфейса, который функционирует как приложение для фильтрации и навигации данных, чтобы облегчить специалистам по реагированию на инциденты обработку необработанных данных.

    -   EventViewer
        Это инструмент Microsoft Windows для просмотра системных журналов, журналов безопасности и журналов приложений, позволяющий устранять неполадки, оценивать состояние системы и отслеживать события безопасности

=====================================================================
* Задания *
***********

Как и всегда, разбор заданий будет идти по порядку, НО полученные сведения могут перекликаться между заданиями.
Более того, для подтверждения найденной "улики" в одном лог-файле, необходимо сравнить ее с данными из другого лог-файла 
Поэтому НАСТОЯТЕЛЬНО рекомендуется делать записи/пометки

    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    + Задание 1 - Опеределить класс WMI использованный злоумышленником для получения информации о модели и производителе для обнаружения виртуализации? +
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    Как Вы уже наверное поняли, нам потребуется журнал "Microsoft-Powershell-Operational.evtx" с номером события 4104
    И если количество записей будет небольшим, ты Вы их все сможете просмотреть через EventViewer
    Однако, если количество записей большое и займет много времени на анализ каждой записи, то проще всего прогнать чернал через TimelineExplorer
  
         PS C:\Users\<user_name>> .\EvtxECmd.exe -d 'C:\Path\to\the\EVTX\logfiles\' --csv 'C:\Path\where\results\will\be\stored' --csvf <file_name>.csv

         ИЛИ

         PS C:\Path\to\the\folder\EvtxECmd> .\EvtxECmd.exe -d 'C:\Path\to\the\EVTX\logfiles\' --csv 'C:\Path\where\results\will\be\stored' --csvf <file_name>.csv
    
    После транформации выбираем нужный журнал через фильтр столбца "Channel"
    Затем, указываем номер Event ID  в соответствующем стоблца = 4104
    И последний штрих   -   в столбце "Payload..." вписвает ключевое слово "WMI"

    К сожалению, столбец "Payload..." в TimelineExplorer отображает содержимое нужной нам записи в не очень удобном для чтения/анализа формате.
    Поэтому, после обнаружения нужной записи, лучше всего, было бы просмотреть ее через EventViewer, найдя ее по времени и уровню (level)
    
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    + Задание 2 - Опеределить запрос WMI, который выполнил злоумышленник, чтобы получить текущее значение температуры машины? +
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    Искать конкретный запрос парой бывает затруднительно, особенно в EventViewer
    Поэтому, возвращаемся в TimelineExplorer и остаемся с прежними фильтрами

    Если запросов не много, то их можно просмотреть по одному
    А если много, то лучше отредактировать имеющийся фильтр поиска (благо TimelineExplorer позволяет это сделать)
    Для этого в правом нижнем углу окна TimelineExplorer нажимаем на кнопку "Edit Filter"
    И вносим/редактируем запись по Вашему усмотрению
    К примеру, с прошлого вопроса у нас остался следующий фильтр:

        [Event Id] = 4104 And Contains([Payload Data2], 'WMI')
    
    Так как нам надо найти команду связанну со значением температуры, то нужно добавить слово/слова, относящиеся к температуре
    В нашем прмиере это бысло слово "Thermal", но я укажу только лишь "Therm"

        [Event Id] = 4104 And Contains([Payload Data2], 'WMI') And Contains([Payload Data2], 'Therm')

    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    + Задание 3 - Опеределить функцию, находящуюся в составе скрипта, загруженного злоумышленником, для обнаружения виртуальной среды +
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    Остаемся в том же журнале и в том же Event ID

    Однако теперь нам надо изменить наш поиск, чТобы он искал все по совпадению с ключевыми словами "virtual" и/или "vm", вместо "wmi
    И как всегда после обнаружения нужной записи в TimelineExplorer, переходим в EventViewer, чтобы просмотреть содержание записи в более удобночитаемом формате

    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    + Задание 4 - Опеределить разделу реестра, к которому обращался найденный скрипт, для получения сведения о службе для обнаружения виртуализации +
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    Раз му уже обнаружили запись со скриптом, то начнем изучать ее более детально

    Если у Вас не хватает опыта и/изи знаний, чтобы иметь представления в каком разделе или кусте реестра может находиться искомая запись
    То можно обратиться за помощью к ГУГЛ или ЧатГПТ, чтобы он подсказал Вам направления поиска
    После чего уже искать совпадения в сведения скрипта

    Вам конечно может повезти и злоумышленник оставит комментарии к блоку кода
    Но я бы не сильно на это расчитывал

    В нашем случае раздел реестра   -   HKLM:\SYSTEM\ControlSet001\Services

    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    + Задание 5 - Опеределить процессы, которые запрашивает скрипт, определить, запущена ли система под управлением VirtualBox +
    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    Ну тут все просто:

        -   Сперва в ГУГЛ или ЧатГПТ ищем какие процессы отвечают за управление VirtualBox
        -   Затемв TimelineExplorer, в редакторе филтров поиска, указываем то, что нам нужно
            Это могут быть либо названия процессов, либо ключевое слово "virtualbox"
            Хотя названия процессов более предпочтительнее
        -   После обнаружения блока в коде скрипта ищем командлет отвечающий за запрос процессов
            Как правило он называется   -   Get-Process

    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    + Задание 6 - Опеределить . Какие две платформы виртуализации обнаружил скрипт +
    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    Проанализировав содержание скрипта, можно сделать вывод, что скрипт выводит все обнаружения с префиксом «This is a ...»
    Поэтому, нам нужен жернал, который отобразит результат деятельности скрипта, а не сам скрипт.
    В связи с этим переключаемся на журнал  -   "Microsoft-Windows-Powershell.evtx" и фильтруем по Event ID 800

    К сожалению, количество записей как правило огромное
    Поэтому, сперва проще всего отфильтровать в TimelineExplorer с использованием ключевого слова "This is a"
    А потом вернуться в EventViewer для более удобного визуального анализа 
    