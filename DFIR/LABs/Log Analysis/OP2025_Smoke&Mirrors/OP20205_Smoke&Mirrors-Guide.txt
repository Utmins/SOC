=====================================================================
* Легенда сценария *
********************

Вам предстоить расследовать скрытую атаку, которая произошла после того, как злоумышленнику все-таки удалось взломать систему.
Скрытность атаки, по всей видимости, была возможна по причине того, что несколько журналов безопасности, а также механизм оповещения Windows Defender, были отключены.
В связи с этим, руководство подозревает, что злоумышленник использовал методы обхода защиты, чтобы отключить или манипулировать элементами управления безопасностью, что значительно усложнило обнаружение.

Ваша задача -   проанализировать имеющиеся журналы событий и артефакты криминалистической экспертизы, чтобы выяснить, как злоумышленник отключил или изменил функции безопасности.
А также определить инструменты, команды или скрипты, использованные для снижения видимости и установить методы, которые злоумышленник использовал для незамеченных действий.

Данный сценарий научит Вас:

    -   Понимать и распознавать вредоносное использование командлетов PowerShell
    -   Анализировать и интерпретировать изменения в реестре Windows

Для определения поставленных задачь будут предоставлены 3 журнала Windows Events 

    -   Microsoft-Windows-Powershell.evtx
        Используется в основном для учёта факта запуска PowerShell (кто, когда, сессия).
        Фиксирует создание консоли/скрипта, например: запуск PowerShell.exe, открытие ISE, выполнение скрипта (.ps1).
        Чаще всего хранит события с ID:
            400 (начало)
            403 (конец)
            800 (детали/результат)
            И многое другое

    -   Microsoft-Powershell-Operational.evtx
        Это основной источник для анализа действий в PowerShell, особенно при расследовании атак.
        Показывает, что именно выполнялось в PowerShell (команды, скрипты, ошибки).
        Позволяет увидеть:
            Запуск конкретных команд (4103).
            Вводимые строки/скрипты (4104).
            Ошибки и предупреждения.
            И многое другое

    -   Microsoft-Windows-Sysmon-Operational.evtx
        Это основной лог, который формируется службой Sysmon из набора Sysinternals Suite.
        Его назначение — фиксировать расширенные события активности в системе, которые недоступны через стандартные журналы Windows.
        Позволяет увидеть:
            Создание процессов ( 1).
            Загрузку драйверов и DLL (6 - драйвер; 7 - DLL)
            Модификации реестра (12 - создание/удаление ключей; 13 - изменение значения ключа; 14 - переименование ключа/значения)
            Много другое

А также инструментами, которые можно использовать для адаптации журналов *.evtx в удобночитаемый формат *.csv с последующим анализов в специальных приложениях:

    -   EvtxEcmd
        Это инструмент командной строки, который анализирует журналы событий Windows в различных форматах, таких как CSV, JSON, XML и т. д.

    -   TimelineExplorer
        Инструмент на основе графического интерфейса, который функционирует как приложение для фильтрации и навигации данных, чтобы облегчить специалистам по реагированию на инциденты обработку необработанных данных.

    -   EventViewer
        Это инструмент Microsoft Windows для просмотра системных журналов, журналов безопасности и журналов приложений, позволяющий устранять неполадки, оценивать состояние системы и отслеживать события безопасности

    *** Разбор журналов EVTX можно также производить и с помощью других инструментов (к примеру Chainsaw, Hayabusa, Splunk with Add-on Add-on for Microsoft Windows)
        Но мы пока ограничимся используемым инструментарием
        Для личной практики Вы можете попробовать использовать другие инструменты

=====================================================================
* Задания *
***********

Как и всегда, разбор заданий будет идти по порядку, НО полученные сведения могут перекликаться между заданиями.
Более того, для подтверждения найденной "улики" в одном лог-файле, необходимо сравнить ее с данными из другого лог-файла 
Поэтому НАСТОЯТЕЛЬНО рекомендуется делать записи/пометки

    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    + Задание 1 - Опеределить путь к измененному разделу реестра, который отвечает за LSA защиту +
    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    Сперва нам надо понять (если мы не знаем):

        -   Что такое защита LSA?
        -   В каком кусте реестра находится информация о ней
    
    Полное описание того, что такое "LSA защита" я предоставлять не будут (можете посмотреть сами в интеренет)
    Отмече только несколько клюевых моментов:

        1)  Имеет прямое отношение к LSASS-процессу, так как является функцией безопасности Windows, которая защищает процесс LSASS
        2)  Для активации/деактивации этой зашиты необходимо изменить значение ключа RunAsPPL в реестре, находящегося по адресу HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\\Lsa
        3)  Если у Вас есть журнал Applications and Services, то можно отфильтровать по событию 5004 (к сожалению данного журнала у нас нет)
        4)  Так как вносились изменения в элементы реестра, то можно предположить, что использовалась команда связанная с ключевым словом "registry"
            А так как мы не знаем точное название команды, то будем искать по одноименной/однокоренной части слова, а имеено "reg"
    
    Итак, мы имеем несколько моментов, которые мы можем использовать в фильтре:

        -   lsass
        -   RunAsPPL
        -   CurrentControlSet
        -   reg
    
    Фильтр в EventViewer нам не позволит использовать их все разом без манипуляций с XML-запросом, поэтому сперва воспользуемся TimelineExplorer
    В каких именно столбцах следует применять фильтры я Вам не подскажу, так что эксперементируйте сами

    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    + Задание 2 - Опеределить, какая команда Powershell была использована, чтобы отключить Windows Defender +
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    Так как нам бьло сказано (ну или мы сами решили проверить логи на предмет совпадений), что Windows Defender был отключен командлетом Powershell
    То, если Вы не знаете какой командлет используется для этого, рекомендуется поискать в интеренет

    Поиск выдал следующий командлет -   Set-MpPreference
    Поэтому, возвращаемся в TimelineExplorer и фильтруем по данному ключевому слову
    Результат будет в одном из столбцов "Payload..."
        
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    + Задание 3 - Опеределить функцию в DLL-библиотеке, которая была изменена патчем AMSI, написанным на PowerShell +
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    Данный вопрос потребуем дополнительных аналитических навыков
    Что мы имеем:

        -   скрипт написан на Powershell
        -   некая функция в DLL-библиотеке
        -   была disable AMSI
    
    Сперва ищем в интеренте, что это такое за AMSI?
    И как ее отключить с помощью Powershell
    
    Обычный посик по ключевому слову "amsi" может ничего не делать
    Поэтому нам надо использовать другие элементы в поиске
    Следующий вариант   -   отфильтровать по ".dll"

    Среди отфильтрованного результата, нас должно инетерсовать то, что имеет отношение к Powershell
    Поэтому оставляем только те журналы, которые имеют отношение к Powershell

    *** Для решения данного вопроса также может пригодиться использования дополнительных интсрументов (Chainsaw, Hayabusa, Splunk)
        Так как их фильтры и визуальное отображение гораздо удобнее для полнокартинного анализа

    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    + Задание 4 - Опеределить команду, которую использовал злоумышленник для перезапуска компьютера в безопасном режиме +
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    Вариантов перезагрузки в безопасном режиме существует несколько
    Однаком нам нужен тот, который исполняется командной
    А раз уж это была команда, то она была запущена либюо через Command Lina, либо через Powershell

    Гугл-поиск даст подсказку по какой команде стоит отфильтровывать записи
    Также не лишним будет фильтровать и по ключевым словам "safeboot" или "safe boot"

    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    + Задание 5 - Опеределить команду PowerShell, которую использовал злоумышленник для отключения ведения журнала истории команд PowerShell? +
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    Ну тут по аналогии с заданием №2    -   просим гугл показать нам командлет POwershell, который используется для диактивации ведения журнала истории команд PowerShell
    Скорее всего писк выдаст такой вариант  -   Set-PSReadlineOption

    Однако и без помощи гугла можно найти нужную запись
    Достаточно фильтровать по ключевому слову "history"
    Записей будет больше, но не сильно
    