Microsoft Windows в настоящее время является наиболее используемой операционной системой для настольных компьютеров.
Ее предпочитают частные пользователи и предприятия, и в настоящее время она занимает около 80% доли рынка настольных компьютеров.
Это означает, что важно знать, как проводить криминалистический анализ в Microsoft Windows для тех, кто интересуется цифровой криминалистикой.
В этом модуле мы узнаем о различных способах сбора криминалистических данных из реестра Windows и сделаем выводы о действиях, выполняемых в системе Windows, на основе этих данных.

В системе Windows действия человека можно отследить довольно точно с помощью компьютерной криминалистики из-за различных артефактов, которые система Windows создает для данной деятельности.
Эти артефакты часто находятся в местах, куда «обычные» пользователи обычно не отваживаются заходить.
Для наших целей эти артефакты можно проанализировать, чтобы предоставить образец деятельности для расследования.

Система Windows отслеживает множество действий, выполняемых пользователем.
Но все ли это отслеживание делается в вредоносных целях или для этого есть другая причина?
Как мы увидим в этой комнате, компоненты файловой системы, которые эксперты-криминалисты считают артефактами, в первую очередь возникли из-за усилий Microsoft по улучшению пользовательского опыта.

Если предположить, что в системе установлена ​​одна и та же сборка Windows, за исключением действий, выполняемых во время установки, то готовый опыт будет одинаковым для всех пользователей.
Однако со временем каждый пользователь персонализирует свой компьютер в соответствии со своими предпочтениями.
Эти предпочтения включают в себя:

    -   макет и значки рабочего стола
    -   закладки в интернет-браузере
    -   имя пользователя
    -   установку различных приложений и вход в разные учетные записи для каждого из этих приложений
    -   и других учетных записей с помощью интернет-браузера.

Windows сохраняет эти предпочтения, чтобы сделать ваш компьютер более персонализированным.
Однако эксперты-криминалисты используют эти предпочтения в качестве артефактов для идентификации действий, выполняемых в системе.
Итак, хотя ваш компьютер может шпионить за вами, это не является явной причиной шпионажа, а делается для того, чтобы вам было приятнее пользоваться компьютером в соответствии с вашим вкусом.
Но эта же информация используется судебными следователями для проведения судебного анализа.
По мере продвижения по этой комнате мы увидим, что Windows хранит эти артефакты в разных местах файловой системы, наприме:

    -   в реестре
    -   каталоге профиля пользователя
    -   в файлах, специфичных для приложени
    -   и т. д.

=====================================================================
* Data Acquisition Tools *
**************************

При проведении судебной экспертизы мы столкнемся либо с работающей системой, либо с ее образом.
Для точности рекомендуется создать образ системы или сделать копию требуемых данных и провести ее судебно-медицинскую экспертизу.
Этот процесс называется "Data Acquisition" (получением данных).

Хотя мы можем просматривать реестр через редактор реестра, корректный с точки зрения судебной экспертизы метод заключается в получении копии этих данных и выполнении анализа на ней.
Однако, когда захотим скопировать ульи реестра из %WINDIR%\System32\Config, мы не можем этого сделать, поскольку это ограниченный файл.
Итак, что делать теперь?

Для получения этих файлов мы можем использовать один из следующих инструментов:

    -   KAPE
        KAPE — это инструмент для сбора и анализа данных в реальном времени, который можно использовать для сбора данных реестра.
        Это в первую очередь инструмент командной строки, но также поставляется с графическим интерфейсом.
        На снимке экрана ниже показано, как выглядит графический интерфейс KAPE.
    
    -   Autopsy
        Autopsy дает вам возможность получать данные как из живых систем, так и из образа диска.
        После добавления источника данных перейдите к расположению файлов, которые вы хотите извлечь, затем щелкните правой кнопкой мыши и выберите опцию Extract File(s).
        
    -   FTK Imager
        FTK Imager похож на Autopsy и позволяет извлекать файлы из образа диска или живой системы, монтируя указанный образ диска или привод в FTK Imager.
    
        Другой способ извлечения файлов реестра из FTK Imager — через опцию Obtain Protected Files.
        Эта опция доступна только для работающих систем.
        Она позволяет извлечь все ульи реестра в выбранное вами место.
        Однако она не копирует файл Amcache.hve, который часто необходим для исследования доказательств программ, которые были выполнены в последний раз

=====================================================================
* File systems *
****************

    +++++++
    + FAT +
    +++++++

    Однако реестр — не единственное место, где присутствуют артефакты судебной экспертизы.
    Устройство хранения в компьютерной системе, например, жесткий диск или USB-устройство, — это всего лишь набор битов.
    Чтобы преобразовать эти биты в значимую информацию, их необходимо организовать.
    Для этой цели были созданы различные файловые системы, которые организуют биты на жестком диске в соответствии со стандартом, чтобы информацию, хранящуюся в этих битах, можно было легко интерпретировать.

    Таблица размещения файлов (FAT) — одна из таких файловых систем.
    Она была файловой системой по умолчанию для операционных систем Microsoft по крайней мере с конца 1970-х годов и до сих пор используется, хотя больше не является таковой.
    Как следует из названия, таблица размещения файлов создает таблицу, которая индексирует расположение битов, выделенных для различных файлов.

    Файловая система FAT поддерживает следующие структуры данных:

        -   Clusters
            Кластер — это базовая единица хранения файловой системы FAT.
            Каждый файл, хранящийся на устройстве хранения, можно считать группой кластеров, содержащих биты информации.
        
        -   Directory
            Каталог содержит информацию об идентификации файла, такую ​​как имя файла, начальный кластер и длина имени файла.
        
        -   File Allocation Table
            Таблица размещения файлов — это связанный список всех кластеров.
            Она содержит статус кластера и указатель на следующий кластер в цепочке.

    Подводя итог, биты, составляющие файл, хранятся в кластерах.
    Все имена файлов в файловой системе, их начальные кластеры и их длины хранятся в каталогах.
    А расположение каждого кластера на диске хранится в таблице размещения файлов.

    Формат файла FAT делит доступное дисковое пространство на кластеры для более простой адресации.
    Количество этих кластеров зависит от количества бит, используемых для адресации кластера. Отсюда и различные вариации файловой системы FAT.
    FAT изначально была разработана с 8-битной адресацией кластеров и называлась структурой FAT.
    Позже, когда потребовалось увеличить объем хранилища, были введены FAT12, FAT16 и FAT32.

    Теоретически FAT12 использовала 12-битную адресацию кластеров для максимум 4096 кластеров (2^12).
    FAT16 использовала 16-битную адресацию кластеров для максимум 65 536 кластеров (2^16).
    В случае FAT32 фактические биты, используемые для адресации кластеров, составляют 28, поэтому максимальное количество кластеров на самом деле составляет 268 435 456 или 2^28.
    Однако не все эти кластеры используются для хранения файлов.
    Некоторые используются в административных целях, например, для хранения конца цепочки кластеров, неиспользуемых частей диска или других подобных целей.

    Несмотря на то, что максимальный размер тома для FAT32 составляет 2 ТБ, Windows ограничивает форматирование только 32 ГБ.
    Однако размеры томов, отформатированные в других ОС с большими размерами томов, поддерживаются Windows.

    FAT16 и FAT32 все еще используются в некоторых местах, таких как USB-накопители, карты SD или цифровые камеры.
    Однако максимальный размер тома и максимальный размер файла (4 ГБ - 1 размер файла для FAT16 и FAT32) являются ограничивающими факторами, которые сократили их использование.

    По мере роста размеров файлов, максимальный размер файла FAT32 стал существенным ограничивающим фактором для производителей камер.
    Хотя Microsoft перешла на файловую систему NTFS, она не подходила для цифровых медиаустройств, поскольку им не нужны были дополнительные функции безопасности и сопутствующие ей накладные расходы.
    Поэтому эти производители лоббировали Microsoft создание файловой системы exFAT.

    Файловая система exFAT теперь используется по умолчанию для SD-карт объемом более 32 ГБ.
    Она также широко принята большинством производителей цифровых устройств.
    Файловая система exFAT поддерживает размер кластера от 4 КБ до 32 МБ.
    Она имеет максимальный размер файла и максимальный размер тома 128 ПБ (петабайт).
    Она может иметь максимум 2 796 202 файлов на каталог.

    ++++++++
    + NTFS +
    ++++++++

    Так как файловая система FAT имеет определенные ограничения, когда дело касается размеров файлов и томов, то Microsoft разработала новую файловую систему под названием New Technology File System (NTFS).
    
    Вот некоторые из ключевых артефактов судебной экспертизы, которые цифровые следователи часто анализируют при работе с файловыми системами NTFS:

	-	File Metadata (метаданные файлов)
		NTFS хранит обширные метаданные для каждого файла, включая время создания, время изменения, время доступа и атрибутивную информацию (например, атрибуты только для чтения, скрытые или системные).
		Анализ этих временных меток может помочь установить временные рамки и реконструировать действия пользователя.

	-	MFT Entries (записи MFT)
		Основная таблица файлов (MFT - Master File Table) является важнейшим компонентом NTFS, в которой хранятся метаданные для всех файлов и каталогов на томе.
		Изучение записей MFT дает представление об именах файлов, размерах, временных метках и местах хранения данных.
		Когда файлы удаляются, их записи MFT помечаются как доступные, но данные могут оставаться на диске до тех пор, пока не будут перезаписаны.

	-	File Slack and Unallocated Space (резерв файлов и нераспределенное пространство)
		Нераспределенное пространство на томе NTFS может содержать остатки удаленных файлов или фрагменты данных.
		Резерв файлов относится к неиспользуемой части кластера, которая может содержать данные из предыдущего файла.
		Цифровые криминалистические инструменты могут помочь восстановить и проанализировать данные из этих областей.

	-	File Signatures (сигнатуры файлов)
		Заголовки и сигнатуры файлов могут быть полезны для определения типов файлов, даже если расширения файлов были изменены или скрыты.
		Эта информация имеет решающее значение для реконструкции типов файлов, присутствующих в системе.

    -   Journaling
        Файловая система NTFS ведет журнал изменений метаданных в томе.
        Эта функция помогает системе восстанавливаться после сбоя или перемещения данных из-за дефрагментации.
        Этот журнал хранится в $LOGFILE в корневом каталоге тома.
        Поэтому файловая система NTFS называется журналируемой файловой системой.

	-	USN Journal (журнал USN)
		Журнал порядкового номера обновления (USN - Update Sequence Number) — это журнал, который ведет NTFS для записи изменений, внесенных в файлы и каталоги.
		Криминалисты могут анализировать журнал USN для отслеживания изменений, удалений и переименований файлов.

	-	LNK Files (файлы LNK)
		Файлы ярлыков Windows (файлы LNK) содержат информацию о целевом файле или программе, а также временные метки и метаданные.
		Эти файлы могут предоставить информацию о недавно открытых файлах или запущенных программах.

	-	Prefetch Files (файлы предварительной выборки)
		Файлы предварительной выборки создаются Windows для повышения производительности запуска приложений.
		Эти файлы могут указывать, какие программы были запущены в системе и когда они были запущены в последний раз.

	-	Registry Hives (улей/кусты реестра)
		Хотя они напрямую не связаны с файловой системой, улей/кусты реестра Windows содержат важную информацию о конфигурации и системе.
		Вредоносные действия или несанкционированные изменения могут оставлять следы в реестре, которые судебные эксперты анализируют для понимания изменений системы.

	-	Shellbags
		Shellbags — это записи реестра, в которых хранятся настройки просмотра папок, такие как позиции окон и предпочтения сортировки.
		Анализ shellbags может выявить шаблоны навигации пользователя и потенциально идентифицировать открытые папки.

	-	Thumbnail Cache (кэш иконок)
		Кэши иконок хранят миниатюрные предварительные просмотры изображений и документов.
		Эти кэши могут отображать файлы, которые недавно просматривались, даже если исходные файлы были удалены.

	-	Recycle Bin (корзина)
		Корзина содержит файлы, которые были удалены из файловой системы.
		Анализ корзины может помочь восстановить удаленные файлы и предоставить информацию о действиях пользователя.

	-	Alternate Data Streams (Альтернативные потоки данных)
		Файл — это поток данных, организованный в файловой системе
        ADS — это дополнительные потоки данных, связанные с файлами, который позволяет файлам иметь несколько потоков данных, хранящихся в одном файле.
		Злоумышленники могут использовать ADS для сокрытия данных, и судебным экспертам необходимо изучить эти потоки, чтобы обеспечить комплексный анализ.
        Internet Explorer и другие браузеры используют альтернативные потоки данных для идентификации файлов, загруженных из Интернета (с помощью идентификатора зоны ADS).

	-	Volume Shadow Copies (теневые копии томов)
		Файловая система NTFS отслеживает изменения, внесенные в файл, с помощью функции Volume Shadow Copies.
        Используя эту функцию, пользователь может восстановить предыдущие версии файла для восстановления или восстановления системы.
        Эти копии могут быть полезны для восстановления данных и анализа изменений, внесенных с течением времени.
        В некоторых атаках с использованием программ-вымогателей было замечено, что злоумышленники удаляли теневые копии в файловых системах жертвы, чтобы помешать ей восстановить свои данные..
		
	-	Security Descriptors and ACLs (Дескрипторы безопасности и ACL)
		Списки контроля доступа (ACL) и дескрипторы безопасности определяют разрешения для файлов и папок.
		Анализ этих артефактов помогает понять права доступа пользователей и потенциальные нарушения безопасности.
    
    Как и в случае с таблицей размещения файлов, в NTFS есть главная таблица размещения файлов.
    Однако главная таблица размещения файлов, или MFT, гораздо более обширна, чем таблица размещения файлов.
    Это структурированная база данных, которая отслеживает объекты, хранящиеся в томе.
    Поэтому можно сказать, что данные файловой системы NTFS организованы в главной таблице размещения файлов.
    С точки зрения криминалистики, ниже приведены некоторые критические файлы в MFT:

        -   $MFT
            $MFT — это первая запись в томе.
            Загрузочная запись тома (VolumeBootRecord) указывает на кластер, в котором она находится.
            $MFT хранит информацию о кластерах, в которых находятся все остальные объекты, присутствующие в томе.
            Этот файл содержит каталог всех файлов, присутствующих в томе.
        
        -   $LOGFILE
            $LOGFILE хранит транзакционный журнал файловой системы.
            Он помогает поддерживать целостность файловой системы в случае сбоя.
        
        -   $UsnJrnl
            Это означает Update Sequence Number (USN) Journal.
            Он присутствует в записи $Extend и содержит информацию обо всех файлах, которые были изменены в файловой системе, и причину изменения.
            Его также называют журналом изменений
    
    MFT Explorer — один из инструментов Эрика Циммермана, используемый для исследования файлов MFT.
    Он доступен как в командной строке, так и в графическом интерфейсе. 
    Для запуска в командной строке используют - MFTECmd.exe
    MFTECmd анализирует данные из различных файлов, созданных файловой системой NTFS, таких как $MFT, $Boot и т. д.

    Для анализа файла $MFT мы можем использовать следующую команду:

        -   MFTECmd.exe -f <path-to-$MFT-file> --csv <path-to-save-results-in-csv>
    
    Для просмотра вывода MFTECmd или для просмотра файлов CSV вы можете использовать инструмент EZviewer.
    Вы увидите, что он выводит информацию обо всех файлах, присутствующих на томе.

=====================================================================
* Windows Registry *
********************

Реестр Windows — это набор баз данных, содержащих данные конфигурации системы.
Эти данные конфигурации могут быть об оборудовании, программном обеспечении или информации пользователя.
Они также включают данные о недавно использованных файлах, используемых программах или устройствах, подключенных к системе.
Как вы можете понять, эти данные полезны с точки зрения криминалистики.

В этом обзоре мы рассмотрим способы чтения этих данных для определения необходимой информации о системе.
Вы можете просмотреть реестр с помощью regedit.exe, встроенной утилиты Windows для просмотра и редактирования реестра.
Мы рассмотрим другие инструменты, чтобы узнать о реестре в следующих задачах.

Реестр Windows состоит из ключей и значений.
Когда вы открываете утилиту regedit.exe для просмотра реестра, папки, которые вы видите, являются ключами реестра.
Значения реестра — это данные, хранящиеся в этих ключах реестра.
Улей (HIVE) реестра — это группа ключей, подразделов и значений, хранящихся в одном файле на диске.

    +++++++++++++++++++++++++++++
    + Structure of the Registry +
    +++++++++++++++++++++++++++++

    Реестр в любой системе Windows содержит следующие пять корневых ключей:

        -   HKEY_CURRENT_USER
        -   HKEY_USERS
        -   HKEY_LOCAL_MACHINE
        -   HKEY_CLASSES_ROOT
        -   HKEY_CURRENT_CONFIG

    Вы можете просмотреть эти ключи, открыв утилиту regedit.exe.
    *** Чтобы открыть редактор реестра, нажмите одновременно клавиши Windows+R, введите regedit и нажмите выводы

    Здесь вы можете увидеть корневые ключи в левой панели в виде дерева, которое показывает включенные ключи реестра, а значения в выбранном ключе отображаются в правой панели.
    Вы можете щелкнуть правой кнопкой мыши значение, показанное в правой панели, и выбрать свойства, чтобы просмотреть свойства этого значения.
    Для получения более подробной информации и информации о следующих ключах реестра Windows    -   https://learn.microsoft.com/en-us/troubleshoot/windows-server/performance/windows-registry-advanced-users

        Folder/predefined key       Description

        HKEY_CURRENT_USER           Содержит корень информации о конфигурации для пользователя, который в данный момент вошел в систему.
                                    Здесь хранятся папки пользователя, цвета экрана и настройки панели управления.
                                    Эта информация связана с профилем пользователя.
                                    Этот ключ иногда сокращается как HKCU.

        HKEY_USERS                  Содержит все активно загруженные профили пользователей на компьютере.
                                    HKEY_CURRENT_USER является подразделом HKEY_USERS.
                                    HKEY_USERS иногда сокращается как HKU.

        HKEY_LOCAL_MACHINE          Содержит информацию о конфигурации, относящуюся к компьютеру (для любого пользователя).
                                    Этот ключ иногда сокращается как HKLM.

        HKEY_CLASSES_ROOT           Является подразделом HKEY_LOCAL_MACHINE\Software.
                                    Информация, которая хранится здесь, гарантирует, что при открытии файла с помощью проводника Windows откроется правильная программа.
                                    Этот ключ иногда сокращается до HKCR.

                                    Начиная с Windows 2000, эта информация хранится в ключах HKEY_LOCAL_MACHINE и HKEY_CURRENT_USER.
                                    Ключ HKEY_LOCAL_MACHINE\Software\Classes содержит настройки по умолчанию, которые могут применяться ко всем пользователям на локальном компьютере.
                                    Ключ HKEY_CURRENT_USER\Software\Classes содержит настройки, которые переопределяют настройки по умолчанию и применяются только к интерактивному пользователю.

                                    Ключ HKEY_CLASSES_ROOT предоставляет представление реестра, объединяющее информацию из этих двух источников.
                                    HKEY_CLASSES_ROOT также предоставляет это объединенное представление для программ, разработанных для более ранних версий Windows.
                                    Чтобы изменить настройки для интерактивного пользователя, изменения необходимо вносить в HKEY_CURRENT_USER\Software\Classes, а не в HKEY_CLASSES_ROOT.

                                    Чтобы изменить настройки по умолчанию, изменения необходимо внести в HKEY_LOCAL_MACHINE\Software\Classes.
                                    Если вы записываете ключи в ключ в HKEY_CLASSES_ROOT, система сохраняет информацию в HKEY_LOCAL_MACHINE\Software\Classes.
                                    Если вы записываете значения в ключ в HKEY_CLASSES_ROOT, а ключ уже существует в HKEY_CURRENT_USER\Software\Classes, система сохранит информацию там, а не в HKEY_LOCAL_MACHINE\Software\Classes.

        HKEY_CURRENT_CONFIG         Содержит информацию об аппаратном профиле, который используется локальным компьютером при запуске системы.
    
    Если вы получаете доступ к работающей системе, вы сможете получить доступ к реестру с помощью regedit.exe, и вас встретят все стандартные корневые ключи, о которых указано выше.
    Однако, если у вас есть только доступ к образу диска, вы должны знать, где на диске находятся данные о реесте (т.н. ульи/hives).
    Большинство этих ульев находятся в каталоге C:\Windows\System32\Config и являются:

        1)  DEFAULT (mounted on HKEY_USERS\DEFAULT)
        2)  SAM (mounted on HKEY_LOCAL_MACHINE\SAM)
        3)  SECURITY (mounted on HKEY_LOCAL_MACHINE\Security)
        4)  SOFTWARE (mounted on HKEY_LOCAL_MACHINE\Software)
        5)  SYSTEM (mounted on HKEY_LOCAL_MACHINE\System)
    
    Помимо этих ульев, в каталоге профиля пользователя можно найти два других улья, содержащих информацию о пользователе.
    Для Windows 7 и выше каталог профиля пользователя находится в C:\Users\<имя пользователя>\, где находятся ульи:

        6)  NTUSER.DAT (монтируется в HKEY_CURRENT_USER при входе пользователя в систему)
        7)  USRCLASS.DAT (монтируется в HKEY_CURRENT_USER\Software\CLASSES)
        *** Улей USRCLASS.DAT находится в каталоге C:\Users\<имя пользователя>\AppData\Local\Microsoft\Windows.
    
    !!! Помните, что NTUSER.DAT и USRCLASS.DAT — это скрытые файлы.
    
    Помимо этих файлов, есть еще один очень важный улей, называемый ульев AmCache.
    Windows создает этот улей для сохранения информации о программах, которые недавно запускались в системе.
    Этот улей находится в C:\Windows\AppCompat\Programs\Amcache.hve

    ++++++++++++++++++++++++++++++++
    + Transaction Logs and Backups +
    ++++++++++++++++++++++++++++++++

    Некоторые другие очень важные источники криминалистических данных:
    
        -   Transaction Logs (журналы транзакций реестра)
            Журналы транзакций можно рассматривать как журнал изменений в улье реестра.
    
            Windows часто использует журналы транзакций при записи данных в улье реестра.
            Это означает, что журналы транзакций часто могут содержать последние изменения в реестре, которые не попали в сами ульи реестра.
    
            Журнал транзакций для каждого улья хранится в виде файла .LOG в том же каталоге, что и сам улей.
            Он имеет то же имя, что и улей реестра, но расширение — .LOG.
            Например, журнал транзакций для улья SAM будет расположен в C:\Windows\System32\Config в файле с именем SAM.LOG.
    
            Иногда может быть также несколько журналов транзакций.
            В этом случае они будут иметь расширение .LOG1, .LOG2 и т. д.
            
            При проведении криминалистики реестра разумно также просматривать журналы транзакций.

        -   Backups (резервные копии)
            Резервные копии реестра являются противоположностью журналов транзакций.
            
            Это резервные копии ульев реестра, расположенных в каталоге C:\Windows\System32\Config.
            Эти кульи копируются в каталог C:\Windows\System32\Config\RegBack каждые десять дней.
            Это может быть отличным местом для поиска, если вы подозреваете, что некоторые ключи реестра могли быть недавно удалены/изменены
    
    ++++++++++++++++++++++++++++++
    + Exploring Windows Registry +
    ++++++++++++++++++++++++++++++

    После того, как мы извлекли ульи реестра, нам нужен инструмент для просмотра этих файлов, как в редакторе реестра.
    Поскольку редактор реестра работает только с живыми системами и не может загружать экспортированные ульи, мы можем использовать следующие инструменты:

        -   AccessData's Registry Viewer
            У AccessData Registry Viewer пользовательский интерфейс похож на Windows Registry Editor.
            Однако есть пара ограничений
                i)  он загружает только один кулей за раз
                ii) не может учитывать журналы транзакций.
        
        -   Zimmerman's Registry Explorer
            Он может загружать несколько  одновременно и добавлять данные из журналов транзакций в улей, чтобы сделать улей более «чистым» с более актуальными данными.
            Он также имеет удобную опцию «Закладки», содержащую важные с точки зрения криминалистики ключи реестра, которые часто ищут эксперты-криминалисты.
            Следователи могут перейти прямо к интересным ключам реестра и значениям с помощью пункта меню закладок.
        
        -   RegRipper
            RegRipper — это утилита, которая принимает улей реестра в качестве входных данных и выводит отчет, который извлекает данные из некоторых важных для судебной экспертизы ключей и значений в этом улье.
            Выходной отчет находится в текстовом файле и показывает все результаты в последовательном порядке.

            RegRipper доступен как в форме CLI, так и в форме GUI.
        
            Одним из недостатков RegRipper является то, что он не учитывает журналы транзакций.
            Мы должны использовать Registry Explorer для объединения журналов транзакций с соответствующими ульями реестра перед отправкой вывода в RegRipper для более точного результата.
            
    ++++++++++++++++++++++++++++++++++++++++++
    + System Information and System Accounts +
    ++++++++++++++++++++++++++++++++++++++++++

    Теперь, когда мы научились читать данные реестра, давайте выясним, где искать в реестре, чтобы выполнить наш криминалистический анализ.

    Когда мы начинаем выполнять криминалистический анализ, первым шагом будет узнать о системной информации.
    Эта задача будет охватывать сбор информации, связанной с системной информацией и учетной записью машины.

        //////////////////
        /// OS Version ///
        //////////////////

        Если у нас есть только данные для проведения экспертизы, мы можем определить версию ОС, из которой эти данные были извлечены через реестр.
        Чтобы узнать версию ОС, мы можем использовать следующий раздел реестра:

            SOFTWARE\Microsoft\Windows NT\CurrentVersion

        ///////////////////////////
        /// Current control set ///
        ///////////////////////////

        Ульи, содержащие данные конфигурации машины, используемые для управления запуском системы, называются Control Sets.
        Обычно мы увидим два Control Sets, в улье SYSTEM на машине
                
            i)  ControlSet001 (распологается - SYSTEM\ControlSet001)
            ii) ControlSet002 (распологается - SYSTEM\ControlSet002)
            
        !!! В большинстве случаев (но не всегда) ControlSet001 будет указывать на Control Set, с которым машина загрузилась, а ControlSet002 будет последней известной хорошей конфигурацией.
            
        Windows создает изменчивый Control Set, когда машина работает, называемый CurrentControlSet (HKLM\SYSTEM\CurrentControlSet).
        Мы можем узнать, какой Control Set используется как CurrentControlSet, посмотрев на следующее значение реестра:

            -   SYSTEM\Select\Current

        Аналогично, последнюю удачную конфигурацию можно найти с помощью следующего значения реестра:

            -   SYSTEM\Select\LastKnownGood
            
        !!! Крайне важно установить эту информацию, прежде чем двигаться дальше с анализом, так как многие криминалистические артефакты, которые мы собираем, будут собраны из контрольных наборов.
            
        /////////////////////
        /// Computer Name ///
        /////////////////////

        Крайне важно установить имя компьютера при выполнении судебного анализа, чтобы убедиться, что мы работаем на той машине, на которой должны работать.
        Имя компьютера можно найти в следующем месте:

            -   SYSTEM\CurrentControlSet\Control\ComputerName\ComputerName
            
        /////////////////////////////
        /// Time Zone Information ///
        /////////////////////////////

        Для точности важно установить, в каком часовом поясе находится компьютер.
        Это поможет нам понять хронологию событий по мере их возникновения
        Чтобы найти информацию о часовом поясе, мы можем посмотреть следующее местоположение:

            -   SYSTEM\CurrentControlSet\Control\TimeZoneInformation
            
        ////////////////////////////////////////////
        /// Network Interfaces and Past Networks ///
        ////////////////////////////////////////////

        Следующий раздел реестра предоставит список сетевых интерфейсов на исследуемой нами машине:

            -   SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\Interfaces\
            -   SOFTWARE\Microsoft\Windows NT\CurrentVersion\NetworkCards\

        Каждый интерфейс представлен уникальным идентификатором (GUID) подраздела, который содержит значения, относящиеся к конфигурации TCP/IP интерфейса.
        Этот раздел предоставит нам такую ​​информацию, как IP-адреса, DHCP IP-адрес и маска подсети, DNS-серверы, VPN и многое другое.
        Эта информация важна, поскольку она помогает вам убедиться, что вы проводите экспертизу на той машине, на которой вы должны ее выполнять.

        Прошлые сети, к которым была подключена машина, можно найти в следующих местах:

            -   SOFTWARE\Microsoft\Windows NT\CurrentVersion\NetworkList\Signatures\Unmanaged
            -   SOFTWARE\Microsoft\Windows NT\CurrentVersion\NetworkList\Signatures\Managed

        Эти ключи реестра содержат прошлые сети, а также время последнего подключения. 
        ремя последней записи ключа реестра указывает на время последнего подключения этих сетей.

        /////////////////////////////////////
        /// Autostart Programs (Autoruns) ///
        /////////////////////////////////////

        Следующие разделы реестра содержат информацию о программах или командах, которые запускаются при входе пользователя в систему.

            -   NTUSER.DAT\Software\Microsoft\Windows\CurrentVersion\Run
            -   NTUSER.DAT\Software\Microsoft\Windows\CurrentVersion\RunOnce
            -   SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnce
            -   SOFTWARE\Microsoft\Windows\CurrentVersion\policies\Explorer\Run
            -   SOFTWARE\Microsoft\Windows\CurrentVersion\Run

        Следующий раздел реестра содержит информацию о службах:

            -   SYSTEM\CurrentControlSet\Services

        Обратите внимание на значение ключа Start
        Если в этом разделе реестра параметр запуска установлен на 0x02, это означает, что данная служба будет запущена при загрузке системы.

        /////////////////////////////////////
        /// SAM hive and user information ///
        /////////////////////////////////////

        Улей SAM содержит информацию об учетной записи пользователя, информацию о входе в систему и информацию о группе.
        Эта информация в основном находится в следующем месте:

            -   SAM\Domains\Account\Users
            
        Содержащаяся здесь информация включает в себя:
            
            *   relative identifier (RID) / относительный идентификатор пользователя
            *   количество входов пользователя в систему
            *   время последнего входа в систему
            *   последнюю неудачную попытку входа в систему
            *   последнюю смену пароля
            *   срок действия пароля
            *   политику паролей и подсказку к паролю
            *   а также любые группы, в которые входит пользователь.
            
    +++++++++++++++++++++++++++++++++++++++
    + Usage or knowledge of files/folders +
    +++++++++++++++++++++++++++++++++++++++

        ////////////////////
        /// Recent Files ///
        ////////////////////

        Windows ведет список недавно открытых файлов для каждого пользователя.

            User-specific folders (e.g., %AppData%\Microsoft\Windows\Recent)

        Как мы могли видеть при использовании Windows Explorer, он показывает нам список недавно использованных файлов.
        Эта информация хранится в улье NTUSER и может быть найдена в следующем месте:

            -   NTUSER.DAT\Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs
            
        Registry Explorer позволяет нам быстро сортировать данные, содержащиеся в разделах реестра.
        Например, вкладка Recent documents размещает файл Most Recently Used (MRU) в верхней части списка.
        Registry Explorer также размещает их так, что файл Most Recently Used (MRU) отображается в верхней части списка, а более старые — в нижней.

            -   Registry: HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\RunMRU

    	Списки RunMRU (Most Recently Used) в реестре Windows хранят информацию о недавно запущенных программах из разных мест, таких как ключи Run и RunOnce.
	    Эти списки могут указывать:

		    *	какие программы были запущены
		    *	когда они были запущены
		    *	потенциально раскрывать действия пользователя.

        Еще одна интересная часть информации в этом разделе реестра заключается в том, что существуют различные разделы с расширениями файлов, такими как .pdf, .jpg, .docx и т. д.
        Эти разделы предоставляют нам информацию о последних использованных файлах определенного расширения.
        Поэтому, если мы ищем специально последние использованные файлы PDF, мы можем посмотреть на следующий раздел реестра:

            -   NTUSER.DAT\Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.pdf

        Registry Explorer также отображает время последнего открытия файлов.

        ///////////////////////////
        /// Office Recent Files ///
        ///////////////////////////

        Подобно Recent Docs, поддерживаемым Windows Explorer, Microsoft Office также поддерживает список недавно открытых документов.
        Этот список также находится в улье NTUSER.
        Его можно найти в следующем месте:

            -   NTUSER.DAT\Software\Microsoft\Office\VERSION

        Номер версии для каждого выпуска Microsoft Office отличается.
        Пример раздела реестра будет выглядеть следующим образом:

            -   NTUSER.DAT\Software\Microsoft\Office\15.0\Word
                    Здесь 15.0 относится к Office 2013.
            
        Список различных выпусков Office и их номеров версий можно найти по этой ссылке - https://learn.microsoft.com/en-us/microsoft-365-apps/deploy/install-different-office-visio-and-project-versions-on-the-same-computer#office-releases-and-their-version-number

        Начиная с Office 365, Microsoft теперь привязывает местоположение к идентификатору пользователя в реальном времени.
        В таком случае последние файлы можно найти в следующем месте.

            -   NTUSER.DAT\Software\Microsoft\Office\VERSION\UserMRU\LiveID_####\FileMRU

        !!! Это место также сохраняет полный путь к последним использованным файлам.

        //////////////////////////////////////////
        /// ShellBags (e.i. Shallbag Explorer) ///
        //////////////////////////////////////////
            
        Когда любой пользователь открывает папку, она открывается в определенном макете.
        Пользователи могут изменять этот макет в соответствии со своими предпочтениями.
        Эти макеты могут быть разными для разных папок.
            
        Эта информация об «оболочке» Windows хранится и может идентифицировать недавно использованные файлы и папки.
        Поскольку этот параметр отличается для каждого пользователя, он находится в ульях пользователей.
        Мы можем найти эту информацию в следующих местах:

            -   USRCLASS.DAT\Local Settings\Software\Microsoft\Windows\Shell\Bags
            -   USRCLASS.DAT\Local Settings\Software\Microsoft\Windows\Shell\BagMRU
            -   NTUSER.DAT\Software\Microsoft\Windows\Shell\BagMRU
            -   NTUSER.DAT\Software\Microsoft\Windows\Shell\Bags

        Registry Explorer не дает нам много информации о ShellBags.
        Однако другой инструмент из набора инструментов Эрика Циммермана - ShellBag Explorer, показывает нам информацию в удобном для использования формате.
        Нам просто нужно указать на извлеченный нами файл улья, и он проанализирует данные и покажет нам результаты. 

        /////////////////////////////////////////////
        /// Open/Save and LastVisited Dialog MRUs ///
        /////////////////////////////////////////////

        Когда мы открываем или сохраняем файл, появляется диалоговое окно с вопросом, откуда сохранить или открыть этот файл.
        Можно заметить, что как только мы открываем/сохраняем файл в определенном месте, Windows запоминает это место.
        Это означает, что мы можем узнать о недавно использованных файлах, если получим эту информацию.
        Мы можем сделать это, изучив следующие ключи реестра

            -   NTUSER.DAT\Software\Microsoft\Windows\CurrentVersion\Explorer\ComDlg32\OpenSavePIDlMRU
            -   NTUSER.DAT\Software\Microsoft\Windows\CurrentVersion\Explorer\ComDlg32\LastVisitedPidlMRU
            
        ////////////////////////////////////////////
        /// Windows Explorer Address/Search Bars ///
        ////////////////////////////////////////////

        Другой способ определить недавнюю активность пользователя — просмотреть пути, введенные в адресной строке проводника Windows
        Bли поиски, выполненные с использованием следующих разделов реестра соответственно.

            -   NTUSER.DAT\Software\Microsoft\Windows\CurrentVersion\Explorer\TypedPaths
            -   NTUSER.DAT\Software\Microsoft\Windows\CurrentVersion\Explorer\WordWheelQuery
            
    +++++++++++++++++++++++++
    + Evidence of Execution +
    +++++++++++++++++++++++++  

    Артефакты исполнительных файлов в Windows относятся к следам и доказательствам, оставленным в операционной системе Windows при выполнении программ и процессов.
    Эти артефакты предоставляют ценную информацию о выполнении приложений, скриптов и других программных компонентов, что может иметь решающее значение в расследованиях цифровой криминалистики, реагировании на инциденты и анализе кибербезопасности.
    Изучая артефакты выполнения, следователи могут реконструировать временные рамки, выявлять вредоносные действия и устанавливать закономерности поведения.

    Вот некоторые распространенные типы артефактов выполнения Windows:

    	Artifact				Location/Registry Key																			Data Stored

	    UserAssist				Registry: HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\UserAssist		Executed program details (application names, execution counts, timestamps)
        Shimcache				Registry: HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\AppCompatCache	Program execution details (file paths, timestamps, flags)
	    Amcache					C:\Windows\AppCompat\Programs\Amcache.hve (Binary Registry Hive)								Application details (file paths, sizes, digital signatures, timestamps)
	    Prefetch Files			C:\Windows\Prefetch																				Metadata about executed applications (file paths, timestamps, execution count)
	    Jump Lists				User-specific folders (e.g., %AppData%\Microsoft\Windows\Recent)								Recently accessed files, folders, and tasks associated with applications
	    Shortcut (LNK) Files	Various locations (e.g., Desktop, Start Menu)													Target executable, file paths, timestamps, user interactions
	    Windows Event Logs		C:\Windows\System32\winevt\Logs					                                                Various event logs containing process creation, termination, and other events
                        
        //////////////////
        /// UserAssist ///
        //////////////////

        Windows отслеживает приложения, запущенные пользователем с помощью Windows Explorer, для статистических целей в разделах реестра User Assist.
        Эти разделы содержат информацию о запущенных программах, времени их запуска и количестве выполнений.
                    
        Раздел User Assist присутствует в улье NTUSER, сопоставленном с GUID каждого пользователя.
        Мы можем найти его в следующем месте:

            -   NTUSER.DAT\Software\Microsoft\Windows\Currentversion\Explorer\UserAssist\{GUID}\Count
            -   NTUSER.DAT\Software\Microsoft\WindowsNT\Currentversion\AptCompatFlags\
        
        !!! Однако программы, запущенные с помощью командной строки, могут быть найдены в разделах RunMRU
        
            -   NTUSER.DAT\Software\Microsoft\Windows\Currentversion\Explorer\RunMRU
            
        /////////////////////////////////////////////////////////
        /// ShimCache (via AppConpatChache Parser & EZviewer) ///
        /////////////////////////////////////////////////////////

        ShimCache — это механизм, используемый для отслеживания совместимости приложений с ОС и отслеживающий все приложения, запущенные на машине.
        Его основная цель в Windows — обеспечение обратной совместимости приложений.
        Он также называется кэшем совместимости приложений (AppCompatCache).
        Он находится в следующем месте в улье SYSTEM:

            -   SYSTEM\CurrentControlSet\Control\Session Manager\AppCompatCache

        ShimCache хранит имя файла, размер файла и время последнего изменения исполняемых файлов.

        К сожалению Registry Explorer, не анализирует данные ShimCache в удобном для восприятия формате
        Поэтому мы воспользуемся инструментом, который называется AppCompatCache Parser (также являющемуся частью инструментов Эрика Циммермана).
        Он принимает улей SYSTEM в качестве входных данных, анализирует данные и выводит CSV-файл

        Для запуска утилиты AppCompatCache Parser можно использовать следующую команду:

            -   AppCompatCacheParser.exe --csv <путь для сохранения вывода> -f <путь к улью SYSTEM для анализа данных> -c <управление набором для анализа>

        Вывод можно просмотреть с помощью EZviewer, еще одного инструмента Эрика Циммермана.

        ///////////////
        /// AmCache ///
        ///////////////

        Улей AmCache — это артефакт, связанный с ShimCache.
        Он выполняет функцию, похожую на ShimCache, и хранит дополнительные данные, связанные с выполнением программ.
        Эти данные включают:

            -   путь выполнения
            -   время установки, выполнения и удаления
            -   а также хэши SHA1 выполненных программ.
            
        Этот улей находится в файловой системе по адресу:

            -   C:\Windows\appcompat\Programs\Amcache.hve

        Информацию о последних выполненных программах можно найти в следующем месте улья:

            -   Amcache.hve\Root\File\{Volume GUID}\
            
        //////////////////////////////
        /// Windows Prefetch files ///
        //////////////////////////////

        Prefetch Files - это файлы предварительной выборки
        Когда программа запускается в Windows, она сохраняет свою информацию для будущего использования.
        
        Windows поддерживает папку предварительной выборки, содержащую метаданные о выполнении различных приложений.
        Таким образом, он является отличным источником информации о последних выполненных программах и файлах, а также  порядок их запуска.
        Файлы предварительной выборки записывают информацию, такую ​​как:

                *	информацию о файле, а также дескрипторе утсройств, используемые файлом
                *   пути к файлам
                *	количество выполнений
                *	временные метки запуска приложений.
        
        Эта сохраненная информация используется для быстрой загрузки программы в случае частого использования.
        Информация хранится в файлах предварительной выборки (с расширениес *.pf), которые находятся в каталоге 

            C:\Windows\Prefetch.

        Для анализа файлов предварительной выборки и извлечения данных можно использовать Prefetch Parser (PECmd.exe) из инструментов Эрика Циммермана.
        Данную программу рекомендуется запускать в командной строке с повышенными привилегиями
        Чтобы запустить Prefetch Parser для файла и сохранить результаты в CSV, мы можем использовать следующую команду:

            -   C:\Users\user_name> PECmd.exe -f <path-to-Prefetch-files> --csv <path-to-save-csv>

        Аналогично, для разбора всего каталога мы можем использовать следующую команду:

            -   C:\Users\user_name> PECmd.exe -d <path-to-Prefetch-directory> --csv <path-to-save-csv>

        //////////////////////////
        /// Windows Jump Lists ///
        //////////////////////////

        Windows представила списки переходов, чтобы помочь пользователям напрямую переходить к недавно использованным файлам с панели задач.
        Эта информация может быть использована для идентификации как последних запущенных программ, так и последних открытых файлов в системе
        Они включают информацию о выполненных приложениях, первом времени выполнения и последнем времени выполнения приложения по AppID

        Мы можем просматривать списки переходов, щелкнув правой кнопкой мыши значок приложения на панели задач, и он покажет нам недавно открытые файлы в этом приложении.
        Эти данные хранятся в следующем каталоге:

            -   C:\Users\<имя пользователя>\AppData\Roaming\Microsoft\Windows\Recent\AutomaticDestinations

        Мы можем использовать JLECmd.exe (Эрика Циммермана) для анализа списков переходов.
        Для запуска Jumplists можно использовать следующую команду (с повышенными привелегиями):

            -   C:\Users\<имя пользователя> JLECmd.exe -d <path-to-Jumplist-directory> --csv <path-to-save-csv>
            -   C:\Users\<имя пользователя> JLECmd.exe -f <path-to-Jumplist-file> --csv <path-to-save-csv>

        Как правило (хотя могут быть и исклчения) файл образа исследуемой системы/машины сохраняет структуру каталогов исходного каталога Windows, то есть каталог C:\Windows
        И отображается на C:\users\<user_name>\Desktop\triage\C\Windows

        ////////////////////////////////////////////
        /// Shortcut (LNK) Files (файлы ярлыков) ///
        ////////////////////////////////////////////

        Windows создает файл ярлыка для каждого файла, открытого локально или удаленно.
        Файлы ярлыков содержат информацию о первом и последнем времени открытия файла и пути к открытому файлу, а также некоторые другие данные.
        Файлы ярлыков можно найти в следующих местах

            -   C:\Users\<username>\AppData\Roaming\Microsoft\Windows\Recent\
            -   C:\Users\<username>\AppData\Roaming\Microsoft\Office\Recent\
        
        Мы можем использовать LECmd.exe (Lnk Explorer) Эрика Циммермана для разбора файлов Shortcut.
        Для запуска LECmd.exe можно использовать следующую команду (с повышенными привелегиями):

            -   LECmd.exe -f <path-to-shortcut-files> --csv <path-to-save-csv>
        
        Дата создания файла ярлыка указывает на дату/время первого открытия файла.
        Дата/время изменения файла ярлыка указывает на время последнего доступа к файлу.

        Файлы ярлыков могут содержать информацию о:

            *	целевом исполняемом файле
            *	путях к файлам
            *	временных метках
            *	взаимодействиях пользователя.

        Анализ файлов LNK может раскрыть сведения о запущенных программах и контексте, в котором они были запущены.

        //////////////////////////
        /// Windows Event Logs ///
        //////////////////////////

        Журналы событий Windows являются неотъемлемой частью операционной системы Windows, в которых хранятся журналы различных компонентов системы, включая саму систему, приложения, работающие в ней, поставщиков ETW, службы и другие.

        Журналирование событий Windows предлагает комплексные возможности регистрации ошибок приложений, событий безопасности и диагностической информации.
        Специалисты по кибербезопасности широко используют эти журналы для анализа и обнаружения вторжений.

        Тактика злоумышленников от первоначального взлома с использованием вредоносного ПО или других эксплойтов до доступа к учетным данным, повышения привилегий и бокового перемещения с использованием внутренних инструментов операционной системы Windows часто фиксируется в журналах событий Windows.

        Чтобы получить прямой доступ к журналам для автономного анализа, следователи должны перейти к пути файла по умолчанию для хранения журналов в C:\Windows\System32\winevt\logs.

        Анализ журналов событий Windows рассматривался в модулях «Журналы событий Windows и поиск вредоносного ПО» и «YARA и Sigma для аналитиков SOC».

        ///////////////
        /// BAM/DAM ///
        ///////////////

        Background Activity Monitor или BAM отслеживает активность фоновых приложений.
        Аналогичный Desktop Activity Moderator или DAM является частью Microsoft Windows, которая оптимизирует энергопотребление устройства.
        Оба они являются частью системы Modern Standby в Microsoft Windows.

        В реестре Windows следующие расположения содержат информацию, связанную с BAM и DAM.
        Это расположение содержит информацию о последних запущенных программах, их полных путях и времени последнего выполнения.

            -   SYSTEM\CurrentControlSet\Services\bam\UserSettings\{SID}
            -   SYSTEM\CurrentControlSet\Services\dam\UserSettings\{SID}
        
        //////////////////////////
        /// Windows # Timeline ///
        //////////////////////////

        Windows 10 хранит недавно использованные приложения и файлы в базе данных SQLite, которая называется временной шкалой Windows.
        Эти данные могут быть источником информации о последних выполненных программах.
        Они содержат приложение, которое было выполнено, и время фокусировки приложения.
        Временную шкалу Windows можно найти по следующему адресу:

            -   C:\Users\<имя пользователя>\AppData\Local\ConnectedDevicesPlatform\{randomfolder}\ActivitiesCache.db

        Мы можем использовать WxTCmd.exe Эрика Циммермана для анализа временной шкалы Windows.
        Для запуска WxTCmd можно использовать следующую команду (с повышенными привелегиями):

            -   WxTCmd.exe -f <path-to-timeline-file> --csv <path-to-save-csv>

    +++++++++++++++++++++++++++++++++++++++++
    + External Devices/USB device forensics +
    +++++++++++++++++++++++++++++++++++++++++

    При подключении любого нового устройства к системе информация, связанная с настройкой этого устройства, сохраняется в setupapi.dev.log.
    Этот журнал находится в следующем месте:

        -   C:\Windows\inf\setupapi.dev.log

    Этот журнал содержит серийный номер устройства и первое/последнее время подключения устройства.
    Первая строка, отображает идентификатор устройства и серийный номер.

        {Update Device: XXX\VID_####&PID_####\##############}

    При проведении судебной экспертизы машины часто возникает необходимость определить, были ли подключены к машине USB-накопители или съемные диски.
    Если да, то любая информация, связанная с этими устройствами, важна для судебного следователя.
    Далее будут рассмотренны различные способы поиска информации о подключенных устройствах и дисках в системе с помощью реестра.

        /////////////////////////////
        /// Device identification ///
        /////////////////////////////

        Следующие расположения отслеживают USB-ключи, подключенные к системе.
        Они хранят идентификатор поставщика, идентификатор продукта и версию подключенного USB-устройства и могут использоваться для идентификации уникальных устройств.
        Также они хранят время подключения устройств к системе.

            -   SYSTEM\CurrentControlSet\Enum\USBSTOR
            -   SYSTEM\CurrentControlSet\Enum\USB
        
        ////////////////////////
        /// First/Last Times ///
        ////////////////////////

        Cледующий раздел реестра отслеживает первое подключение устройства, последнее подключение и последнее удаление устройства из системы.

            -   SYSTEM\CurrentControlSet\Enum\USBSTOR\Ven_Prod_Version\USBSerial#\Properties\{83da6326-97a6-4088-9453-a19231573b29}\####

        В этом разделе знак #### можно заменить следующими цифрами, чтобы получить необходимую информацию:

            Value	    Information
            0064	    First Connection time
            0066	    Last Connection time
            0067	    Last removal time
        
        Хотя мы можем проверить это значение вручную, как мы видели выше, Registry Explorer уже анализирует эти данные и показывает нам, если мы выберем ключ USBSTOR

        //////////////////////////////
        /// USB device Volume Name ///
        //////////////////////////////

        Имя устройства подключенного диска можно найти в следующем месте:

            -   SOFTWARE\Microsoft\Windows Portable Devices\Devices
        
        Мы можем сравнить GUID (который мы видим в этом разделе реестра) с его Disk ID (который можной в разделах, упомянутых в идентификации устройства), чтобы сопоставить имена с уникальными устройствами.

        Объединив всю эту информацию, мы можем создать справедливую картину любых USB-устройств, которые были подключены к исследуемой нами машине.

=====================================================================
* System Resource Usage Monitor *
*********************************

SRUM (System Resource Usage Monitor) - это функция тщательно отслеживает использование ресурсов и шаблоны использования приложений.
Данные хранятся в файле базы данных с именем sru.db, который находится в каталоге C:\Windows\System32\sru.

Эта база данных в формате SQLite обеспечивает структурированное хранение данных и эффективный поиск данных.
Записи SRUM, организованные по временным интервалам, могут помочь восстановить использование приложений и ресурсов за определенные периоды времени.

Ключевые аспекты криминалистики SRUM включают:

	-	Application Profiling (профилирование приложений)
		SRUM может предоставить комплексное представление о приложениях и процессах, которые были выполнены в системе Windows.
		Он записывает такие данные, как:

			*	имена исполняемых файлов
			*	пути к файлам
			*	временные метки
			*	показатели использования ресурсов.

		Эта информация имеет решающее значение для понимания программного ландшафта в системе, выявления потенциально вредоносных или несанкционированных приложений и реконструкции действий пользователя.

	-	Resource Consumption (потребление ресурсов)
		SRUM собирает данные о времени ЦП, использовании сети и потреблении памяти для каждого приложения и процесса.
		Эти данные бесценны для расследования ресурсоемких действий, выявления необычных схем потребления ресурсов и обнаружения потенциальных проблем с производительностью, вызванных определенными приложениями.

	-	Timeline Reconstruction (реконструкция временной шкалы)
		Анализируя данные SRUM, эксперты по цифровой криминалистике могут создавать временные шкалы выполнения приложений и процессов, использования ресурсов и действий системы.
		Эта реконструкция временной шкалы играет важную роль в понимании последовательности событий, выявлении подозрительного поведения и создании четкой картины взаимодействия и действий пользователя.

	-	User and System Context (пользовательский и системный контекст)
		Данные SRUM включают идентификаторы пользователей, что помогает приписывать действия определенным пользователям.
		Это может помочь в анализе поведения пользователей и определении того, были ли определенные действия выполнены законными пользователями или потенциальными субъектами угрозы.

	-	Malware Analysis and Detection (анализ и обнаружение вредоносных программ)
		Данные SRUM можно использовать для выявления необычных или несанкционированных приложений, которые могут указывать на вредоносные программы или вредоносные действия.
		Внезапные всплески использования ресурсов, ненормальные шаблоны приложений или несанкционированные установки программного обеспечения можно обнаружить с помощью анализа SRUM.

	-	Incident Response (реагирование на инциденты)
		Во время реагирования на инциденты SRUM может предоставлять быструю информацию о недавних действиях приложений и процессов, позволяя аналитикам быстро выявлять потенциальные угрозы и эффективно реагировать.

=====================================================================
* Deleted files and Data recovery *
***********************************

Понимание файловых систем упрощает понимание того, как файлы удаляются, восстанавливаются и стираются.
Как мы уже знаем, файловая система хранит местоположение файла на диске в таблице или базе данных.
Когда мы удаляем файл из файловой системы, файловая система удаляет записи, которые хранят местоположение файла на диске.
Для файловой системы местоположение, где существовал файл, теперь доступно для записи или нераспределено.
Однако содержимое файла на диске все еще там, пока оно не перезаписано файловой системой при копировании другого файла или прошивкой диска при выполнении обслуживания диска.

Аналогично, на диске есть данные в разных нераспределенных кластерах, которые, возможно, можно восстановить.
Чтобы восстановить эти данные, мы должны понимать файловую структуру различных типов файлов, чтобы идентифицировать конкретный файл с помощью данных, которые мы видим в шестнадцатеричном редакторе.
Однако мы не будем это рассматривать, так как это однельная и достаточно общирная тема.
Вместо этого мы сделаем следующее: воспользуемся инструментом (Autopsy), который сделает это за нас и идентифицирует удаленные файлы в файле образа диска.
Но что такое файл образа диска?

Файл образа диска — это файл, содержащий побитовую копию диска.
Побитовая копия сохраняет все данные в файле образа диска, включая метаданные, в одном файле.
Таким образом, при проведении судебной экспертизы можно сделать несколько копий вещественных доказательств, т. е. диска, и использовать их для расследования.
Это помогает двумя способами:
    
    i)  Исходные доказательства не загрязняются при проведении судебной экспертизы
    ii) Файл образа диска можно скопировать на другой диск и проанализировать без использования специализированного оборудования.

=====================================================================
* Web Browser Forensics *
*************************

Если погружаться в криминалистику веб-браузеров, то это дисциплина, сосредоточенная на анализе остатков, оставленных веб-браузерами.
Эти остатки могут пролить свет на действия пользователя, онлайн-взаимодействия и потенциально опасное поведение. Некоторые из основных артефактов криминалистики браузеров включают:

	-	Browsing History
		Записи посещенных веб-сайтов, включая URL-адреса, заголовки, временные метки и частоту посещений.

	-	Cookies
		Это небольшие файлы данных, сохраняемые веб-сайтами на устройстве пользователя, содержащие такую ​​информацию, как сведения о сеансе, предпочтения и токены аутентификации.

	-	Cache
		Кэшированные копии веб-страниц, изображений и другого контента, посещенного пользователем.
		Может показывать посещаемые веб-сайты, даже если история очищена.

	-	Bookmarks/Favorites
		Сохраненные ссылки на часто посещаемые веб-сайты или страницы, представляющие интерес.

	-	Download History
		Записи загруженных файлов, включая исходные URL-адреса, имена файлов и временные метки.

	-	Autofill Data
		Информация, автоматически вводимая в формы, например имена, адреса и пароли.

	-	Search History
		Запросы, введенные в поисковые системы, вместе с поисковыми терминами и временными метками.

	-	Session Data
		Информация об активных сеансах просмотра, вкладках и окнах.

	-	Typed URLs
		URL-адреса, введенные непосредственно в адресную строку.

	-	Form Data
		Информация, введенная в веб-формы, такая как учетные данные для входа и поисковые запросы.

	-	Passwords
		Сохраненные или автоматически заполненные пароли для веб-сайтов.

	-	Web Storage
		Данные локального хранилища, используемые веб-сайтами для различных целей.

	-	Favicons
		Небольшие значки, связанные с веб-сайтами, которые могут отображать посещенные сайты.

	-	Tab Recovery Data
		Информация об открытых вкладках и сеансах, которые можно восстановить после сбоя браузера.

	-	Extensions and Add-ons
		Установленные расширения браузера и их конфигурации

    +++++++++++++++++++
    + IE/Edge history +
    +++++++++++++++++++

    Интересная вещь об истории просмотра IE/Edge заключается в том, что она также включает файлы, открытые в системе, независимо от того, были ли эти файлы открыты с помощью браузера или нет.
    Следовательно, ценным источником информации об открытых файлах в системе является история IE/Edge.
    Мы можем получить доступ к истории в следующем месте:

        -   C:\Users\<имя пользователя>\AppData\Local\Microsoft\Windows\WebCache\WebCacheV*.dat

    Файлы/папки, к которым был получен доступ, отображаются с префиксом file:///* в истории IE/Edge.
    Хотя для анализа данных веб-кэша можно использовать несколько инструментов, вы можете использовать Autopsy
    Для этого выберите Logical Files в качестве источника данных.

=====================================================================
* Eric Zimmerman Tool Set *
***************************

Эрик Циммерман создал набор криминалистических инструментов, используемых для анализа артефактов Windows, называемых EZTools (инструменты Эрика Циммермана).
Некоторые из них уже были упомянуты выше (EZviewer, WxTCmd, JLECmd, AmcacheParser, MFTECmd, LECmd и другие)
С полным набором утилит Эрик Циммермана можно ознакомиться тут  -   https://ericzimmerman.github.io/#!index.md

Ниже буду рассмотренны утили из пакета Эрика, которые не входили в основной учебный материла комнаты SOC Level Analyst от TryHackMe

Для этой задачи мы сосредоточимся на EvtxEcmd и Timeline Explorer, так как эти инструменты в основном используются для разбора и анализа журналов Evtx.

    ++++++++++++
    + EvtxEcmd +
    ++++++++++++

    EvtxEcmd — это инструмент командной строки, который анализирует журналы событий Windows в различных форматах, таких как CSV, JSON, XML и т. д.
    Вы можете использовать этот инструмент вместе с Timeline Explorer, созданным тем же автором.

    Чтобы проанализировать предоставленные журналы, нам нужно сначала преобразовать журналы EVTX в CSV с помощью EvtxEcmd, а затем передать их в Timeline Explorer.
    Для этого используем следующую комнаду в терминале Powershell (обязательно от имени администратора)

        PS C:\Path\to\the\folder\EvtxECmd> .\EvtxECmd.exe -f 'C:\Path\to\the\EVTX\logfile\file_name.evtx' --csv 'C:\Path\where\results\will\be\stored' --csvf <file_name>.csv

    +++++++++++++++++++++
    + Timeline Explorer +
    +++++++++++++++++++++
    
    Timeline Explorer — это инструмент на основе графического интерфейса, который функционирует как приложение для фильтрации и навигации данных, чтобы облегчить специалистам по реагированию на инциденты обработку необработанных данных.


