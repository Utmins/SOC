=====================================================================
* Легенда *
***********

При обнаружении признаков утечки данных из необычного процесса в системе менеджер SOC поручил вам провести расследование через Velociraptor.

=====================================================================
* Задания *
***********

    ++++++++++++++++
    + VAD Analysis +
    ++++++++++++++++

    Using VAD analysis, pinpoint the suspicious process and enter its name as your answer. Answer format: _.exe
    Используя анализ VAD, определите подозрительный процесс и введите его имя в качестве ответа. Формат ответа: _.exe

    Этот артефакт позволяет перечислять разделы памяти процесса через Virtual Address Descriptor (VAD). 
    VAD используется диспетчером памяти Windows для описания выделенных диапазонов памяти процесса.

    Итак...
    
        -   Запускаем Velociraptor
        -   Ищем среди имеющихся collections ту, которая имеещ в своем названии VAD (в нашем случае это бы  -   Windows.System.VAD)
        -   Если необходимо, то вносим собственные изменения в алгоритм поиска
        -   Запускаем
    
    В нашем случем данная коллекция обнаружила 67000+ строк
    Это достаточно большоя обьъем данных, поэтому нам будет проще сохранить результат в отдельные файлы для дальнейшего анализа
    У нас есть 2 способа сохранения результата:

        a)  Вкладка "Artifact Collections"
            В данной вкладке мы можем сохранить на выбор в:
                -   json
                -   csv
                -   json & csv
            
            Результаты будут сохранены в архиве, которые помимо самих результатов, будет содержать еще сопуствующие файлы
        
        b)  Влкдака "Results"
            В данной вкладке у нас будут на выбор только два варианта:
                -   csv
                -   json
            
            И результаты будут сохранены либо в csv формате, либо в json (в зависимости от нашего выбора)
    
    !!! Хочу обратить Ваше внимнаие на тот факт, что формат содержания файлов csv у каждой вкладки будет отличаться
        Но это не особо повлияет на дальнейший анализ

    Как я уже говорил, результат содержит 67000+ строк
    Поэтому в ручную нам их просматривать будет крайне затруднительно
    Более того, не все данные в результатах могут представлять для нас ценность

    В свзя с этим, нам надо как-то выделить нужную для нас информацию
    Сперва рекомендую просто открыть файл (без разницы - csv или json) и посмотреть как он устроен
    От этого будет зависеть выбранный вапи способ анализа
    
        ///////////
        /// СSV ///
        ///////////
    
        Для формата csv cуществуют несколько вариантов анализа

            -   Timeline Explorer
            -   Libra Office / Excell
            -   PowerSHell
        
        И если первые два очень гибки и редко зависят от структуры файла, то PowerShell потребудет некоторого навыка
        В нашем примере я использовал следующую команду

                Get-Content -Path "C:\Folder\where\you\saved\your\csv-file\test.csv" | Where-Object {$_ -like "*.exe*"} | ForEach-Object { $_.Split('""') } | Select-String -Pattern 'C:' -CaseSensitive | Select-Object -Unique
        
        //////////
        /// JQ ///
        //////////

        Что такое JQ найдете в интеренет (но если в кратции, то это своего роде фильт для json файло)
        Однако он потребут наличия на том хосте, на котором вы будете анализировать скачаный файл
        Так что, если у Вас его нет, то сперва установите его   -   https://jqlang.org/

        После установки, Вам надо уточнить  -   в каком формате содержатся данные в json файле
        Если у Вас не достаточно навыков в этом вопросе, то спросите ChatGPT
        Он Вам заодно и поможет с синтаксисом запроса для анализа файла

        Я не буду указывать синтаксис, который я использовал, но хоче сказать лишь то, что вывод у JQ гораздо объемнее
        Но в тоже время манипуляции с синкатсисом запроса могут выдать вам необходимую информацию, отбросим ненужный мусор

    Если мы прочтем задание еще раз, ту увидим, что нам требуется найти Process
    Значит, мы может обратиться к еще нескольким Collections
    В нашем наборе были только 2, которые удовлетворяли нашим требованиям:
    *** И кждая из этих коллекций содержит гораздо меньше записей, чем VAD

        -   Generic.System.Pstree
            Отличительная особенность в том, что показывает т.н. CallChain, т.е. цепочку прочессов до самого начального

        -   Windows.System.Pslist
            Отличительная особенность в том, что в колонке "Authenticode" содержится информация о том, является ли данный процесс доверенным или нет ("Trusted": "tructed" / "untrusted")
    
    Таким образом получается, что каждая из коллекций содержит какий-то уникальную информацию, использовав которую можно найти ископый процесс
    Также не забывает о том, что если процесс (особенно системный) запущен не из родного метса, то это должно вызывать дополнительные вопросы

    После того, как Вы определили подохрительнй процес, не забывайте сохранить любые сведения о нем и его родительском/связных процессах, так как они могут пригодиться вам в будущем

    ++++++++++++++++++++++++
    + C2 Server IP Address +
    ++++++++++++++++++++++++

    Determine the IP address of the C2 (Command and Control) server and enter it as your answer.
    Определите IP-адрес сервера C2 (Command and Control) и введите его в качестве ответа.

    Дело в том, что даже если мы нашли подозрительный процесс, то он может и не являться источником установки связи с C2 сервером
    Поэтому мы рассмотрим данный вопрос как-будто он не имеет отношения к предыдущему вопросу

    Для этого нам понадобятся коллекции связанные с интренет соединениями, а именно

        -   Windows.Network.InterfaceAddresses
            Покажет IP адреса всех используемых ининтрефейсов на исследуемой машине

        -   Windows.Network.netstat
            Отобразит все интренет соединения
            *** Можно оптимизировать синтаксис поиска, чтобы отображал только исходящие во внешнюю сеть соединения
    
    К сожалению бывает так, что коллекция Netstat не отобразит искомую информацию
    Поэтому, поиск стоит раширить использую следующие коллекции

        -   Windows.System.DNSCache

        -   Windows.Carving.cobaltstrike
            Бывает, что атали с использования C2 серверов осуществляются посредством методики Cobaltstrike
            Поэтому ее также стоит использовать

        -   Windows.Detection.Yara.Process

    ++++++++++++++++++++++++++++++++
    + Registry key for persistence +
    ++++++++++++++++++++++++++++++++

    Determine the registry key used for persistence and enter it as your answer.
    Определите ключ реестра, используемый для сохранения, и введите его в качестве ответа.

    Как говориться - задание с сюрпризом
    Без условно, стоит проверить все подходящие коллекции, которые имеют отношение к Registry и\или Persistence (я не буду указывать какие именно коллекции надо использовать, так как их будет очень много)
    Однако помимо коллекций относящихся к регистру, крайне рекумондую проверить другие коллекции, имеющие отношение к:

        -   .....ScheduledTasks
        -   .....Stratup
        -   .....Autorun
    
    Дело в том, что по условию задани зловред должен постоянно находиться в системе (т.е. быть активным) и при этом не вызывать подозрение у системы безопасности
    Постоянное нахождение и называется - persistence (т.е. присутствие)
    А для того, чтобы создать устойчивое, постоянное нахождение в системе, которое бы еще и запускалось автоматиечки после перезагрузки компьютера, нужно внести его в реестр

    Поэтому, для этого, лучше всего подходит либо запланированное задание, либо автозапуск при перезагрузке/выключении

    Но сюрприз заключается в том, что ответ должен содержать полный ключ, а не значение. 
    Следовательно формат ответа — HKEY...\...\... и только до общего каталога, где расположен зловред

    +++++++++++++++++++++++++++++++++++++
    + Location of malware-related files +
    +++++++++++++++++++++++++++++++++++++
    
    Determine the folder that contains all Mimikatz-related files and enter the full path as your answer.
    Определите папку, содержащую все файлы, связанные с Mimikatz, и введите полный путь в качестве ответа.

    Очевидным будет поиск по коллекция, которые имеют отношение к Mimikatz
    Однако, таких коллекций нет
    Зато есть коллекции, относящиеся к impersonation (т.е. выдаванием одного процесса за другого)
    Но и тут, нас может ожидать неудача - либо записей будет много, либо не окажется нужной записи

    Поэтому, стоит также проверить несколько других коллекций, которые содержат информацию об истории запущенных исполнительных файлов

        -   ......AppCompatCache
        -   ......AmCache
    
    Но есть еще одна коллекция, которая на первый взгляд не имеет отношение к нашему поиску, но при ее анализе может выдасть желаемый результат
    Дело в том, что зловред может быть переименнован после размещение на хосте жертвы
    Вот тут нам и понадобиться информация о переименнованных файлах

        -   ......BinaryRename

    +++++++++++++++
    + Find a file +
    +++++++++++++++

    Determine the Microsoft Word document that j0seph recently accessed and enter its name as your answer. Answer format: _.DOCX
    Определите документ Microsoft Word, к которому недавно обращался j0seph, и введите его имя в качестве ответа. Формат ответа: _.DOCX

    Ну тут все просто
    Главная коллекция по данной информации это  -   RecentDocs