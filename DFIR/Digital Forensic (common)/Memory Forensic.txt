=====================================================================
* Введение *
************

В кибербезопасности криминалистика памяти — это подмножество компьютерной криминалистики, которая анализирует энергозависимую память, обычно на скомпрометированной машине
В ОС Windows она соответствует оперативной памяти (ОЗУ), и ее содержимое сбрасывается при каждой перезагрузке или выключении, что делает ее одной из обычных начальных задач, выполняемых во время инцидента.
Процесс отличается от анализа криминалистики диска, поскольку он не только предоставляет информацию о том, что находится на целевом компьютере
Но и предоставляет нам информацию о процессах или приложениях, которые были запущены в определенное время
А также подробную информацию о потоке выполнения в системе, которая может отсутствовать в обычных единицах хранения или журналах приложений.

Этот анализ памяти может помочь нам с немедленным снимком приложения или временной меткой действий злоумышленника.
Это имеет решающее значение, поскольку доказательства, собранные с помощью криминалистики памяти, могут стать бесценными при создании хронологии событий.

=====================================================================
* Memory Forensics Definition & Process *
*****************************************

Криминалистика памяти, также известная как анализ энергозависимой памяти, является специализированным разделом цифровой криминалистики, который фокусируется на исследовании и анализе энергозависимой памяти (RAM) компьютера или цифрового устройства.
В отличие от традиционной цифровой криминалистики, которая включает анализ данных, хранящихся на энергонезависимых носителях, таких как жесткие диски или твердотельные накопители, криминалистика памяти имеет дело с текущим состоянием системы в определенный момент времени.

Вот некоторые типы данных, обнаруженных в RAM, которые представляют ценность для расследования инцидентов:

	-	Network connections
	-	File handles and open Files
	-	Open registry keys
	-	Running processes on the system
	-	Loaded modules
	-	Loaded device drivers
	-	Command history and console sessions
	-	Kernel data structures
	-	User and credential information
	-	Malware artifacts
	-	System configuration
	-	Process memory regions

Как мы уже знаем, когда вредоносное ПО работает, оно часто оставляет следы или отпечатки в активной памяти системы.
Анализируя эту память, следователи могут обнаружить вредоносные процессы, определить индикаторы компрометации и реконструировать действия вредоносного ПО.

Следует отметить, что в некоторых случаях важные данные или ключи шифрования могут находиться в памяти.
Экспертиза памяти может помочь восстановить эти данные, которые могут иметь решающее значение для расследования.

Ниже описывается систематический подход к экспертизе памяти, разработанный для помощи в расследованиях в памяти и черпающий вдохновение из шестиэтапной методологии криминалистики памяти SANS.

	1)	Идентификация и проверка процессов (Process Identification and Verification)
		Вредоносное ПО часто маскируется под легитимные процессы, иногда с тонкими вариациями имен, чтобы избежать обнаружения.
		Нам нужно:

			-	Перечислить все запущенные процессы.
			-	Определить их происхождение в операционной системе.
			-	Сделать перекрестные ссылки с известными легитимными процессами.
			-	Выделить любые несоответствия или подозрительные соглашения об именовании.
	
	2)	Глубокое погружение в компоненты процесса (Deep Dive into Process Components)
		После того, как мы отметили потенциально мошеннические процессы, нашим следующим шагом будет тщательное изучение связанных динамических библиотек (DLL) и дескрипторов.
		Вредоносное ПО часто использует DLL для сокрытия своей деятельности.
		Мы должны:

			-	Изучить DLL, связанные с подозрительным процессом.
			-	Проверить на наличие несанкционированных или вредоносных DLL.
			-	Исследовать любые признаки внедрения или захвата DLL.

	3)	Анализ сетевой активности (Network Activity Analysis)
		Многие штаммы вредоносного ПО, особенно те, которые работают поэтапно, требуют подключения к Интернету.
		Они могут передавать сигналы на серверы управления и контроля (C2) или извлекать данные.
		Чтобы обнаружить это:

			-	Просмотрите активные и пассивные сетевые соединения в памяти системы.
			-	Определите и задокументируйте внешние IP-адреса и связанные домены.
			-	Определите характер и цель коммуникации.
					*	Проверьте легитимность процесса.
					*	Оцените, требует ли процесс сетевой коммуникации.
					*	Проследите до родительского процесса.
					*	Оцените его поведение и необходимость.

	4)	Обнаружение внедрения кода (Code Injection Detection)
		Продвинутые злоумышленники часто используют такие методы, как очистка процесса или использование неотображенных участков памяти.
		Чтобы противостоять этому, мы должны:

			-	Использовать инструменты анализа памяти для обнаружения аномалий или признаков этих методов.
			-	Определите любые процессы, которые, по-видимому, занимают необычные области памяти или демонстрируют неожиданное поведение.

	5)	Обнаружение руткитов (Rootkit Discovery)
		Достижение скрытности и устойчивости является общей целью для злоумышленников.
		Руткиты, которые внедряются глубоко в ОС, предоставляют злоумышленникам постоянный, часто повышенный доступ к системе, избегая обнаружения.
		Чтобы решить эту проблему:

			-	Просканировать на наличие признаков активности руткитов или глубоких изменений ОС.
			-	Определите любые процессы или драйверы, работающие с необычно высокими привилегиями или демонстрирующие скрытое поведение.

	6)	Извлечение подозрительных элементов (Extraction of Suspicious Elements)
		После выявления подозрительных процессов, драйверов или исполняемых файлов нам необходимо изолировать их для углубленного анализа.
		Это включает:

			-	Сбор подозрительных компонентов из памяти.
			-	Надежное их хранение для последующего изучения с использованием специализированных криминалистических инструментов

=====================================================================
* Memory Acquisition & Analysis Tools *
***************************************

Существует мнодество различных инструментов для сбора памяти (Memory Acquisition) и анализа памяти (Memory Analysis)

    ++++++++++++++++++++++
    + Memory Acquisition +
    ++++++++++++++++++++++

    На этапе сбора памяти мы копируем активную память в файл, обычно называемый дампом,
    Это делается для того, чтобы выполнить анализ без риска потери данных из-за непреднамеренной перезагрузки скомпрометированной системы и получить доказательства анализа, в том числе по мере необходимости.

    Есть несколько инструментов, которые могут нам помочь в получении дампа памяти с целевой машины, но какой из них использовать, будет зависеть от личных предпочтений и ОС, задействованной в задаче создания образа.
    Вот некоторые из этих инструментов:

        Windows     FTK imager, WinPmem, RedLine, DumpIt.exe, win32dd.exe/win64dd.exe, Memoryze, FastDump
        Linux       LIME
        macOS       osxpmem
    
    +++++++++++++++++++
    + Memory Analysis +
    +++++++++++++++++++
    
    Получение информации о цели имеет решающее значение для расследования, поскольку это гарантирует, что мы анализируем правильный контекст и среду доказательств.
    Этот шаг помогает нам понять конкретную архитектуру и операционные системы, гарантируя точность, релевантность и легитимность наших выводов.

    Для анализа дампа памяти чаще всего используют следующие утилиты:
    
        -   Volatility
        -   Strings

