=====================================================================
* General *
***********

Velociraptor — это платформа с открытым исходным кодом для мониторинга конечных точек, цифровой криминалистики и киберреагирования, сбора информации на основе хоста с использованием запросов Velociraptor Query Language (VQL).
Она была разработана специалистами по цифровой криминалистике и реагированию на инциденты (DFIR), которым требовался мощный и эффективный способ поиска определенных артефактов и мониторинга действий на множестве конечных точек.
Velociraptor предоставляет вам возможность более эффективно реагировать на широкий спектр расследований цифровой криминалистики и реагирования на киберинциденты, а также на утечки данных

Velociraptor уникален, поскольку исполняемый файл Velociraptor может выступать в качестве сервера или клиента и может работать на Windows, Linux и MacOS.
Он также совместим с облачными файловыми системами, такими как Amazon EFS и Google Filestore.
Velociraptor может быть развернут на тысячах, даже десятках тысяч клиентских конечных точек и работает на удивление хорошо для продукта с открытым исходным кодом.

Сила Velociraptor заключается в его языке запросов Velociraptor, который позволяет агенту конечной точки запрашивать данные непосредственно на конечной точке.
Запросы Velociraptor представляют собой сборник правил правил, каждое из которых создано под определнные условия и задачи инаправленно на сбор различных артефактов.
Одним из часто используемым сборников является			    -	Windows.KapeFiles.Targets, который доступен через проект KapeFiles.
А для удаленного анализа дампа памяти используется сборник	-	Windows.Memory.Acquisition, в результатх которого будет файл с именем PhysicalMemory.raw, который и будет содержать дамп памяти

Если вы хотите взаимодействовать и развертывать Velociraptor локально в своей лаборатории, то Instant Velociraptor для вас.
Instant Velociraptor — это полностью функциональная система Velociraptor, которая развертывается только на вашей локальной машине.

Интернет ресурсы:

	https://github.com/Velocidex/velociraptor
	https://github.com/Velocidex/velociraptor/releases/
	https://docs.velociraptor.app/
	https://alisefer.medium.com/threat-hunting-with-velociraptor-1c61070367d3
	https://www.pentestpartners.com/security-blog/using-velociraptor-for-large-scale-endpoint-visibility-and-rapid-threat-hunting/
	https://github.com/EricZimmerman/KapeFiles

=====================================================================
* Deployment * 
**************

В этом обзоре мы НЕ будем вдаваться в подробности о том, как развернуть Velociraptor как сервер и архитектуру агента в среде.
Вместо этого на виртуальной машине Windows мы сперва развернем Velociraptor как сервер, используя терминал Linux и соответсвующие команды для запуска серверного исполняемого файла.
А затем, на этой же машине установим Velociraptor в качестве агента, но уже непосредственно в среде Windows, используя терминал CMD и другой исполняемый файл и соответсвующий набор комнад.

Такой демнстрационный прием возможен благодаря WSL (подсистема Windows для Linux).
Это смоделирует работу Velociraptor как сервера в Linux (Ubuntu) и как клиента под управлением Windows.
WSL (подсистема Windows для Linux) позволяет нам запускать среду Linux на машине Windows без необходимости в виртуальной машине.

Вот набор команд для каждого терминала:

    *   Velociraptor Server (Ubuntu Terminal):
            
            1)  cd velociraptor (ну или другая папка, куда вы сохранили данный исполняемый файл)
            2)  ./velociraptor-v0.5.8-linux-amd64 --config server.config.yaml frontend -v

        Стоит отметить, что версия Velociraptor, запущенная на подключенной виртуальной машине, — 0.5.8.
        Теперь запустите Google Chrome и щелкните ярлык Velociraptor.
        *** Скорее всего Chrome покажет вам ошибку «Ваше подключение не является частным», это ожидаемо, и вы можете перейти на 127.0.0.1 через расширенные параметры. (просто продолжить, принимая возможные риски)

        После загрузки страницы в Chrome, Вы увидите несколько ссылок
        Эти ссылки специфичны для клиентских конечных точек и станут активными, как только аналитик взаимодействует с этими конечными точками в пользовательском интерфейсе Velociraptor.
        Давайте добавим клиента в Velociraptor.
        *** Помните, поскольку подключенная виртуальная машина работает под управлением Windows Subsystem for Linux (WSL), сервер Velociraptor работает в Ubuntu, но клиентом будет Windows.

    *   Add Windows as a client (CMD)

            1)  cd C:\Program Files\Velociraptor (ну или другая папка, куда вы сохранили данный исполняемый файл)
            2)  velociraptor-v0.5.8-windows-amd64.exe --config velociraptor.config.yaml client -v

        Чтобы увидеть клиента и взаимодействовать с ним, нажмите на увеличительное стекло с пустым поисковым запросом (без текста в строке поиска) или нажмите «Показать все».
        На выходе будет отображен список клиентских машин, на которых запущен агент Velociraptor, в табличной форме.

=====================================================================
* User Interface *
******************

Ниже приведено краткое описание каждого столбца.

    -   Online State
        Зеленая точка указывает на то, что конечная точка находится в сети и взаимодействует с сервером Velociraptor.
        Желтая точка означает, что сервер не получал никаких сообщений от конечной точки в течение 24 часов.
        Красная точка означает, что прошло более 24 часов с момента последнего получения сервером сигнала от конечной точки.

    -   Client ID
        Это уникальный идентификатор, назначенный клиенту сервером Velociraptor, и сервер будет использовать этот идентификатор клиента для идентификации конечной точки.
        Идентификатор клиента всегда начинается с буквы C.

    -   Hostname
        Это имя хоста, по которому клиент идентифицирует себя на сервере Velociraptor.
        Помните, что имена хостов могут меняться, поэтому Velociraptor использует идентификатор клиента вместо идентификации клиентской машины.

    -   Operating System Version
        Клиент Velociraptor может работать в Windows, Linux или MacOS.
        Подробная информация о клиентской операционной системе отображается в этом столбце.

    -   Labels
        К клиентским машинам может быть прикреплено несколько меток.
        Это полезно для идентификации нескольких клиентов как группы.

Нажав на ClientID# вы перейдете к более детальному обхору данного хоста.
Новое окно будет содержать 6 вкладок (по 3 с каждой стороны)

    -   Левая сторона
            *   Interrogate
            *   VFS
            *   Collected
    
    -   Правая сторона
            *   Overview
            *   VQL Drilldown
            *   Shell

    ++++++++++++
    + Overview +
    ++++++++++++

    Эта вкладка содержит общую, дополнительную информацию о клиенте.
    Такуя как

        -   Client ID
        -   Agent Version
        -   Agent Name
        -   Last Seen At
        -   Last Seen IP
        -   Operating System
        -   Hostname
        -   Release
        -   Architecture
        -   Client Metadata

    +++++++++++++++++
    + VQL Drilldown +
    +++++++++++++++++

    В этом представлении есть дополнительная информация о клиенте, такая как
    
        -   использование памяти и ЦП за 24 часа
        -   домен Active Directory, если клиент является присоединенным к домену компьютером,
        -   и активные локальные учетные записи для клиента.

    Данные представлены двумя цветами в отпечатке памяти и ЦП за последние 24 часа.

        -   Оранжевый   -   использование памяти
        -   Синий       -   использование ЦП

    +++++++++
    + Shell +
    +++++++++

    С помощью оболочки команды можно выполнять удаленно на клиентской машине.
    Команды можно запускать в PowerShell, CMD, Bash или VQL.
    В зависимости от целевой операционной системы будет определяться, какой вариант выберет аналитик.
    Например, CMD не будет приемлемым вариантом, если клиентская машина работает под управлением Linux.

    Это просто, выберите один из вариантов запуска команды и нажмите «Запустить».
    Результаты команды видны не сразу, и нужно нажать на значок "глаза" (должен стать перечеркнутым), чтобы увидеть результаты команды.

    +++++++++++++
    + Collected +
    +++++++++++++

    Здесь аналитик увидит результаты команд, выполненных ранее из Shell.
    Другие действия, такие как взаимодействие с VFS (виртуальной файловой системой), такде появятся здесь в разделе Collected. 

    При нажатии на любой FlowId нижняя панель будет заполнена дополнительными сведениями относительно информации, собранной для этого артефакта или коллекции.

    +++++++++++++++
    + Interrogate +
    +++++++++++++++

    Согласно документации   -   Опрос (Interrogate) обычно происходит, когда клиент впервые регистрируется, но вы можете опросить любого клиента, нажав кнопку «Interrogate».

    Чтобы подтвердить это, нажмите «Interrogateс».
    Затем перейдите к «Collected».
    Вы заметите, что
        -   Artifact Collection стала Generic.
        -   Client.Info, которая является дополнительной коллекцией в списке.
        -   Первая коллекция артефактов в списке — Generic.Client.Info. Это та же информация, которая отображается в разделе «VQL Drilldown».

    Для получения дополнительной информации обратитесь к официальной документации Velociraptor под названием «Inspecting Clients»   -   https://docs.velociraptor.app/docs/gui/clients/

    +++++++++++++++++++++++++++++
    + VFS (Virtual File System) +
    +++++++++++++++++++++++++++++

    Согласно документации, VFS  -   это просто кэш файлов на стороне сервера в конечной точке.
    Это просто знакомый графический интерфейс, позволяющий проверять файловую систему клиента.

    Это может оказаться полезным в сценарии реагирования на инциденты, когда вам, аналитику, необходимо проверять артефакты в клиенте.

    При переходе в раздел VFS, будут показаны 4 папки (или средства доступа, драйверы доступа к файловой системе):

        -   file
            Использует API операционной системы для доступа к файлам
        -   ntfs
            Использует необработанный анализ NTFS для доступа к файлам низкого уровня
        -   registry
            Использует API операционной системы для доступа к реестру Windows
        -   artifacts
            Ранее запущенные коллекции.
        
        При щелчке по любой папке на левой панели на средней панели отображаются дополнительные сведения.
        Например, если щелкнуть по папке с файлами, появится подпапка, которая называется C:.
        Теперь сведения на средней панели изменятся, чтобы отразить C:.

    А также 3 значка/кнопки

        *   Папка
            Обновить текущий каталог (синхронизировать его листинг с клиентом)
        
        *   Папка с букво R
            Рекурсивно обновить этот каталог (синхронизировать его листинг с клиентом)

        *   Документ со стрелочкой и буквой R
            Рекурсивно загрузить этот каталог с клиента
        
        Каждый раз, когда вы спускаетесь на уровень ниже, вам нужно нажать кнопку «Папка».

=====================================================================
* Creating New Collection *
***************************

Collection  -   это своего рода сборник, настроенного вами заренее, списка артефактов, который используется дл анализа хоста по необходимым критериям

Создать коллецию под конкретный хост можно следущим способм:

    i)  Переходим в основное менб нужного хоста
    ii) Нажимаем на "+" в левой верхней части рабочей области, под поисковой строкой и рядом со символом "домик"
    
Процессс создания коллекции состоит из 5 этапов:

    -   Select Artifacts
    -   Configure Parameters
    -   Specify Resources
    -   Review
    -   Launch

    ++++++++++++++++++++
    + Select Artifacts +
    ++++++++++++++++++++

    В строке поиска введите название необходимого артефакта (в нашем примере мы используем - Windows.KapeFiles.Targets) 
    Наименования артефактов соответсвует наименованию артефактов, используемых другим DFIT инструментов - KAPE
    Короче говоря, KapeFiles — это созданные сообществом цели и модули для использования с KAPE.

    Когда вы выбираете артефакт, справа отображается краткое описание сборщика вместе с кратким перечнем параметров.

    Выбрав артефакт, нажимаем внизу на Configure Parameters (в этом примере нас интресует только параметр - Ubuntu)

    ++++++++++++++++++++++++
    + Configure Parameters +
    ++++++++++++++++++++++++

    Указываем необходимые параметры
    *** В нашем примере мы все оставляем как есть

    Определившись с параметрами, переходм к Specify Resources

    +++++++++++++++++++++
    + Specify Resources +
    +++++++++++++++++++++

    Так же как в разделе Parameters, выбираем необходимые условия
    И переходим к шагу Review

    ++++++++++
    + Review +
    ++++++++++

    Вывод будет отображаться в формате JSON, и он довольно прост. 
    Только одна настройка была включена для сбора, а именно Ubuntu.

    Проверям все ли правильно и жмем на "Launch"

    ++++++++++
    + Launch +
    ++++++++++

    Когда вы нажмете «Launch», вы будете перенаправлены в раздел «Collected».
    Обратите внимание, что должна быть новая запись с недавно созданной коллекцией.

    В частности, обратите внимание на «State».
    Оно должно показывать песочные часы, которые указывают на то, что артефакты активно собираются для этой коллекции.
    Конда сбор/анализ хакончиться, то песочные часы сменятся на галочку.

    Обратитесь к документации Velociraptor, чтобы узнать больше об артефактах   -   https://docs.velociraptor.app/docs/gui/vfs/

=====================================================================
* VQL (Velociraptor Query Language) *
*************************************

VQL — это фреймворк для создания высоконастраиваемых артефактов, которые позволяют собирать, запрашивать и контролировать практически любой аспект конечной точки, групп конечных точек или всей сети.
Его также можно использовать для создания правил непрерывного мониторинга на конечной точке, а также для автоматизации задач на сервере».

Если вы знакомы с SQL (языком структурированных запросов), то вы должны заметить сходства, например: SELECT, FROM и WHERE.

Чтобы выполнить простой VQL самостоятельно, сначала создайте Notebook.
Перейдите на вкладку Notebooks (символ "Книги" в самой левой части окна)
В Velociraptor Notebooks — это контейнеры, которые мы можем использовать для выполнения наших запросов и команд

Notebooks состоят из двух языков — Markdown и (конечно) VQL.
Если вы знакомы с Jupyter Notebooks, то они работают очень похожим образом!
Давайте создадим наш первый блокнот и введем простую разметку. 

    1)  Нажимаем на "+", заполняем поля и нажимает "Submit"

    2)  Затем нажимаем на то, что появилось в нижней части рабочей обрасти (в нашем примере это надпись "Hello", так как при создании Notebook мы использовании слова "Hello")

    3)  Для переходя в режим редактирования, нажимаем на символ "Карандаш" и в правоя части рабочего окна, выбираем VQL

    4)  Заменяем имеющуюся информацию в рабочем окне на VQL pfghjhc (в нашем примере это - SELECT * FROM info())

    5)  Сохраняем полученный результат
    
VQL также распологает своими модулями/артефактами          

Velociraptor позволяет упаковывать запросы VQL в мини-программы, называемые Артефактами.
VQL Артефакт — это просто структурированный файл YAML, содержащий запрос, с прикрепленным к нему именем.
Это позволяет пользователям Velociraptor искать запрос по имени или описанию и просто запускать запрос на конечной точке без необходимости понимать или вводить запрос в UI

=====================================================================
* Forensic Analysis VQL Plugins *
*********************************

VQL бесполезен без хорошего набора плагинов, которые делают возможной работу DFIR.
Сила Velociraptor заключается в широком спектре плагинов и функций VQL, которые направлены на то, чтобы сделать расследования и обнаружения DFIR эффективными.

Здесь есть много информации о VQL Forensic  -   https://docs.velociraptor.app/docs/forensic/
Цель этой задачи — предоставить вам достаточно информации об этих плагинах, чтобы вы могли составить свой запрос VQL для поиска артефактов популярного эксплойта, известного как Printnightmare.

Ниже представлен список (может быть слегка устаревшим) VQL плагинов, связанных с криминалистическим анализом:

    -   Searching Filenames
    -   Searching Content
    -   NTFS Analysis
    -   Binary Parsing
    -   Evidence of Execution
    -   Event Logs
    -   Volatile Machine State
