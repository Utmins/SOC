BRIM	-	это настольное приложение с открытым исходным кодом, которое обрабатывает файлы pcap и файлы журналов, уделяя основное внимание поиску и аналитике.
BRIM	-	https://www.brimdata.io/

Оно может обрабатывать два типа данных в качестве входных данных;

	-	Packet Capture Files
		Файлы pcap, созданные с помощью приложений, подобных tcpdump, tshark и Wireshark.

	-	Файлы журналов: структурированные файлы журналов, такие как журналы Zeek.

Платформах с открытым исходным кодом, с которыми Brim хорошо взаимодействует:

	-	Zeek
		Механизм генерации журналов.

	-	Zed Language
		Язык запросов журналов, позволяющий выполнять поиск по ключевым словам с помощью фильтров и конвейеров.

	-	ZNG Data Format
		Формат хранения данных, поддерживающий сохранение потоков данных.

	-	Electron и React
		Кроссплатформенный пользовательский интерфейс.

=====================================================================
* Dashboard *
*************

После открытия приложения загружается целевая страница.
Целевая страница состоит из трех разделов и окна импорта файлов.
Она также предоставляет краткую информацию о поддерживаемых форматах файлов.

	-	Pools
		Ресурсы данных, исследованные файлы pcap и журналы.
		Представляет собой список импортированныз файлов, которые расположены в левой части окна

	-	Queries
		Список доступных запросов.
		Находятся по панелью "Pools"

	-	History
		Список запущенных запросов.
		Расположены под запросами (Queries)

После загрузки pcap Brim обрабатывает файл и создает журналы Zeek, сопоставляет их и отображает все доступные результаты на временной шкале.

Brim также предоставляет информационные поля.
Вы можете навести курсор на поля, чтобы получить более подробную информацию о поле.
Остальные данные журнала отображаются на правой панели и содержат сведения о полях файла журнала.
***	Обратите внимание, что вы всегда можете экспортировать результаты с помощью функции экспорта, расположенной рядом с временной шкалой.

Вы можете сопоставить каждую запись журнала, просмотрев раздел корреляции на панели log details.
В этом разделе содержится информация об адресах источника и назначения, продолжительности и связанных файлах журнала.
Эта краткая информация поможет вам ответить на вопрос «Где искать дальше?» и найти интересующее событие и связанные с ним доказательства.
Вы также можете щелкнуть правой кнопкой мыши по каждому полю, чтобы отфильтровать и выполнить список задач.

	-	Filtering values
	-	Counting fields
	-	Sorting (A-Z and Z-A)
	-	Viewing details 
	-	Performing whois lookup on IP address
	-	Viewing the associated packets in Wireshark

Запросы (Queries) помогают нам сопоставлять находки и находить интересующие нас события.
А история (History) хранит выполненные запросы

Запросы могут иметь имена, теги и описания.
Библиотека запросов перечисляет имена запросов, и как только вы дважды щелкните, она передает фактический запрос в строку поиска.
Вы можете дважды щелкнуть по запросу и легко выполнить его.
Как только вы дважды щелкните по запросу, фактический запрос появится в строке поиска и будет указан на вкладке истории.

Результаты отображаются под строкой поиска.
Brim имеет 12 готовых запросов, перечисленных в папке «Brim».
Эти запросы помогают нам обнаружить структуру запроса Brim и выполнять быстрый поиск по шаблонам.
Вы можете добавлять новые запросы, нажав кнопку «+» рядом с меню «Запросы».

Давайте ознакомимся с некоторыми запросами чуть-более подробнее:

	1)	Reviewing Overall Activity (Просмотр общей активности)

		Этот запрос предоставляет общую информацию о файле pcap.
		Предоставленная информация ценна для проведения дальнейшего расследования и создания пользовательских запросов.
		Невозможно создать расширенные или специфичные для случая запросы, не зная доступных файлов журналов.

	2)	Windows Specific Networking Activity (Специфическая сетевая активность Windows)

		Этот запрос фокусируется на сетевой активности Windows и детализирует исходные и целевые адреса, а также именованный канал, конечную точку и обнаружение операций.
		Предоставленная информация помогает исследовать и понимать определенные события Windows, такие как перечисление SMB, входы в систему и эксплуатация служб.
	
	3)	Unique Network Connections and Transferred Data (Уникальные сетевые соединения и передаваемые данные)

		Эти два запроса предоставляют информацию об уникальных соединениях и корреляции данных о соединении.
		Предоставленная информация помогает аналитикам обнаруживать странные и вредоносные соединения, а также подозрительные и маячковые действия.
		Список uniq предоставляет четкий список уникальных соединений, помогающий выявлять аномалии.
		Список данных суммирует скорость передачи данных, которая подтверждает гипотезу исследования аномалий.
	
	4)	DNS and HTTP Methods (Методы DNS и HTTP)

		Эти запросы предоставляют список DNS-запросов и HTTP-методов.
		Предоставленная информация помогает аналитикам обнаруживать аномальный DNS- и HTTP-трафик.
		Вы также можете сузить поиск, просмотрев запросы "HTTP POST" с доступным запросом и изменив его для просмотра методов "HTTP GET".
	
	5)	File Activity (Активность файлов)

		Этот запрос предоставляет список доступных файлов.
		Он помогает аналитикам обнаружить возможные попытки утечки данных и подозрительную активность файлов.
		Запрос предоставляет информацию об обнаруженном файле MIME, имени файла и значениях хэша (MD5, SHA1).
	
	6)	IP Subnet Statistics (Статистика IP-подсети)

		Этот запрос предоставляет список доступных IP-подсетей.
		Он помогает аналитикам обнаружить возможные коммуникации за пределами области действия и идентифицировать необычные IP-адреса.
	
	7)	Suricata Alerts (Оповещения Suricata)

		Эти запросы предоставляют информацию на основе результатов правил Suricata.
		Доступны три различных запроса для просмотра доступных журналов в разных форматах (на основе категории, на основе источника и назначения и на основе подсети)

		***	Suricata — это система обнаружения угроз с открытым исходным кодом, которая может действовать как основанная на правилах система обнаружения и предотвращения вторжений.
			Она разработана Open Information Security Foundation (OISF).
			Suricata работает и обнаруживает аномалии аналогично Snort и может использовать те же сигнатуры.

=====================================================================
* Custom Queries and Use Cases *
********************************

Существует множество примеров использования в анализе трафика.
Для аналитика безопасности жизненно важно знать общие шаблоны и индикаторы аномалии или вредоносного трафика.
В этой задаче мы рассмотрим некоторые из них.

Давайте рассмотрим основы запросов Brim, прежде чем сосредоточиться на пользовательских и расширенных запросах.

	Purpose									Syntax												Example Query
	
	Basic search 							You can search any string and numeric value. 		Find logs containing an IP address or any value.
																								(10.0.0.1)

	Logical operators 						Or, And, Not.										Find logs contain three digits of an IP AND NTP keyword.
																								(192 and NTP)

	Filter values							"field name" == "value"								Filter source IP
																								(id.orig_h==192.168.121.40)

	List specific log file contents			_path=="log name"									List the contents of the conn log file
																								(_path=="conn")

	Count field values						count () by "field"									Count the number of the available log files
																								(count () by _path)

	Sort findings							sort												Count the number of the available log files and sort recursively
																								(count () by _path | sort -r)

	Cut specific field from a log file		_path=="conn" | cut "field name"					Cut the source IP, destination port and destination IP addresses from the conn log file
																								(_path=="conn" | cut id.orig_h, id.resp_p, id.resp_h)

	List unique values						uniq												Show the unique network connections
																								(_path=="conn" | cut id.orig_h, id.resp_p, id.resp_h | sort | uniq)

***	Примечание: настоятельно рекомендуется использовать имена полей и параметры фильтрации и не полагаться на функцию слепого/нерегулярного поиска.
	Brim обеспечивает отличную индексацию источников журналов, но он не очень хорошо работает с нерегулярными поисковыми запросами.
	Лучше всего всегда использовать фильтры полей для поиска интересующего события.

	++++++++++++++++++++
	+ Примеры ЗАПРОСОВ +
	++++++++++++++++++++

	*)	Communicated Hosts (Связанные хосты)

		Определение списка хостов, с которыми осуществлялось взаимодействие, является первым шагом расследования.
		Аналитикам безопасности необходимо знать, какие хосты активно взаимодействуют в сети, чтобы в первую очередь обнаружить любую подозрительную и аномальную активность.
		Такой подход поможет аналитикам обнаружить возможные нарушения доступа, попытки эксплуатации и заражения вредоносным ПО.

		Пример запроса	-	_path=="conn" | cut id.orig_h, id.resp_h | sort | uniq
	
	*)	Frequently Communicated Hosts (Часто используемые хосты)

		После получения списка хостов, с которыми установлена ​​связь, важно определить, какие хосты чаще всего взаимодействуют друг с другом.
		Это поможет аналитикам безопасности обнаружить возможные действия по эксфильтрации данных, эксплуатации и бэкдорингу.

		Пример запроса	-	_path=="conn" | cut id.orig_h, id.resp_h | sort | uniq -c | sort -r
	
	*)	Most Active Ports (Наиболее активные порты)

		Подозрительные действия не всегда обнаруживаются изначально.
		Злоумышленники используют множество способов сокрытия и обхода методов, чтобы избежать обнаружения.
		Однако, поскольку данные являются доказательством, невозможно скрыть следы пакетов.
		Исследование наиболее активных портов поможет аналитикам обнаружить скрытые и хорошо скрытые аномалии, сосредоточившись на шине данных и используемых службах.

		Примеры запросов	-	_path=="conn" | cut id.resp_p, service | sort | uniq -c | sort -r count

								_path=="conn" | cut id.orig_h, id.resp_h, id.resp_p, service | sort id.resp_p | uniq -c | sort -r
	
	*)	Long Connections (Длинные соединения)

		Для аналитиков безопасности длительные соединения могут быть первым индикатором аномалии.
		Если клиент не предназначен для обслуживания непрерывной службы, исследование длительности соединения между двумя IP-адресами может выявить возможные аномалии, такие как бэкдоры

		Пример запроса	-	_path=="conn" | cut id.orig_h, id.resp_p, id.resp_h, duration | sort -r duration
	
	*)	Transferred Data (Передаваемые данные)

		Другим важным моментом является расчет размера переданных данных.
		Если клиент не предназначен для обслуживания и получения файлов и не действует как файловый сервер, важно исследовать общее количество байтов для каждого соединения.
		Таким образом, аналитики могут различать возможную утечку данных или подозрительные действия с файлами, такие как загрузка и распространение вредоносного ПО.
	
		Пример запроса	-	_path=="conn" | put total_bytes := orig_bytes + resp_bytes | sort -r total_bytes | cut uid, id, orig_bytes, resp_bytes, total_bytes
	
	*)	DNS and HTTP Queries (DNS и HTTP-запросы)

		Выявление подозрительных и необычных доменных соединений и запросов является еще одним важным моментом для аналитика безопасности.
		Ненормальные соединения могут помочь обнаружить C2-коммуникации и возможные скомпрометированные/инфицированные хосты.
		Выявление подозрительных DNS-запросов и HTTP-запросов помогает аналитикам безопасности обнаружить вредоносные каналы C2 и поддержать гипотезу расследования
	
		Примеры запросов	-	_path=="dns" | count () by query | sort -r

								_path=="http" | count () by uri | sort -r
	
	*)	Suspicious Hostnames (Подозрительные имена хостов)

		Выявление подозрительных и необычных имен хостов помогает аналитикам обнаружить несанкционированные хосты.
		Исследование журналов DHCP предоставляет информацию об имени хоста и домене.

		Пример запроса	-	_path=="dhcp" | cut host_name, domain

	*)	Suspicious IP Addresses (Подозрительные IP-адреса)

		Для аналитиков безопасности идентификация подозрительных и необычных IP-адресов имеет важное значение, как и идентификация странных доменных адресов.
		Поскольку журналы подключений хранятся в одном файле журнала (conn), фильтрация IP-адресов более управляема и обеспечивает более надежные результаты.

		Пример запроса	-	_path=="conn" | put classnet := network_of(id.resp_h) | cut classnet | count() by classnet | sort -r
	
	*)	Detect Files (Определить файлы)

		Исследование переданных файлов — еще один важный момент исследования трафика.
		Выполнение этого поиска поможет аналитикам безопасности обнаружить передачу вредоносных программ или зараженных файлов путем сопоставления значений хэша.
		Этот акт также ценен для обнаружения передачи конфиденциальных файлов.

		Пример запроса	-	filename!=null
	
	*)	SMB Activity

		Другим важным моментом является исследование активности SMB.
		Это поможет аналитикам обнаружить возможные вредоносные действия, такие как эксплуатация, боковое перемещение и вредоносный обмен файлами.
		При проведении расследования предлагается задать вопрос: «Что происходит в SMB?».

		Пример запроса	-	_path=="dce_rpc" OR _path=="smb_mapping" OR _path=="smb_files"
	
	*)	Known Patterns (Известные модели)

		Известные шаблоны представляют собой оповещения, генерируемые решениями безопасности.
		Эти оповещения генерируются против распространенных шаблонов атак/угроз/вредоносных программ и известны продуктам безопасности конечных точек, брандмауэрам и решениям IDS/IPS.
		Этот источник данных в значительной степени полагается на доступные сигнатуры, атаки и шаблоны аномалий.
		Исследование доступных источников журналов, содержащих оповещения, жизненно важно для аналитика безопасности.

		Brim поддерживает журналы Zeek и Suricata, поэтому любая аномалия, обнаруженная этими продуктами, создаст файл журнала.
		Исследование этих файлов журналов может дать подсказку, на чем аналитик должен сосредоточиться.

		Пример запроса	-	event_type=="alert" or _path=="notice" or _path=="signatures"