=====================================================================
* Руководство *
***************

Если использовать машину от HTB, то сперва надо запустить данную комнаду, чтобы скачать и распокавать все необходимые pcap файлы

	<usern_name>@<host_name>$ wget -O file.zip 'https://academy.hackthebox.com/storage/resources/pcap_files.zip' && mkdir tempdir && unzip file.zip -d tempdir && mkdir -p pcaps && mv tempdir/Intermediate_Network_Traffic_Analysis/* pcaps/ && rm -r tempdir file.zip

Удобнее всего просматривать PCAP-files используя Wireshark
Однако, в целях практики и выбработки навыков использования CLI-based tools мы будем использовать такие утилиты как tcpdump

=====================================================================
* Легенда *
***********

Протокол разрешения адресов (ARP) — это давняя утилита, используемая злоумышленниками для запуска атак типа «человек посередине» и «отказ в обслуживании».
Учитывая эту распространенность, ARP становится точкой фокусировки при анализе трафика, часто становясь первым протоколом, который мы тщательно изучаем.
Многие атаки на основе ARP являются широковещательными, а не направлены конкретно на хосты, что делает их более легко обнаруживаемыми с помощью наших методов анализа пакетов.

В идеальном сценарии были бы установлены надежные средства контроля, чтобы предотвратить эти атаки, но в реальности это не всегда осуществимо.
Чтобы более эффективно понять наши индикаторы компрометации (IOC), давайте углубимся в поведение атак ARP Poisoning и Spoofing.
Обнаружение этих атак может быть сложным, поскольку они имитируют структуру связи стандартного трафика ARP.
Тем не менее, некоторые запросы и ответы ARP могут раскрыть их гнусную природу. 
Давайте проиллюстрируем, как работают эти атаки, что позволит нам лучше идентифицировать их во время анализа трафика.

	Step	Description

	1	Рассмотрим сеть с тремя машинами: жертва, маршрутизатор и злоумышленник.
	2	Злоумышленник инициирует свою схему ARP cache poisoning, отправляя поддельные сообщения ARP как на компьютер жертвы, так и на маршрутизатор.
	3	Сообщение на компьютер жертвы утверждает, что IP-адрес шлюза (маршрутизатора) соответствует физическому адресу машины злоумышленника.
	4	И наоборот, сообщение на маршрутизатор утверждает, что IP-адрес машины жертвы соответствует физическому адресу машины злоумышленника.
	5	При успешном выполнении этих запросов злоумышленник может повредить кэш ARP как на машине жертвы, так и на маршрутизаторе, в результате чего все данные будут перенаправлены на машину злоумышленника.
	6	Если злоумышленник настроит переадресацию трафика, он может перевести ситуацию из состояния отказа в обслуживание в состояние атаки типа «человек посередине».
	7	Проверяя другие слои нашей сетевой модели, мы можем обнаружить дополнительные атаки.
		Злоумышленник может провести DNS-спуфинг, чтобы перенаправить веб-запросы на поддельный сайт, или выполнить SSL-стриппинг, чтобы попытаться перехватить конфиденциальные данные в пути.

Обнаружение этих атак — это один аспект, но их предотвращение — это совсем другая задача.
Мы могли бы потенциально отразить эти атаки с помощью таких элементов управления, как:

	-	Статические записи ARP
		Запретив легкую перезапись и изменение кэша ARP, мы можем остановить эти атаки.
		Однако это требует повышенного обслуживания и надзора в нашей сетевой среде.

	-	Безопасность портов коммутатора и маршрутизатора
		Реализация контроля сетевых профилей и других мер может гарантировать, что только авторизованные устройства смогут подключаться к определенным портам на наших сетевых устройствах, эффективно блокируя машины, пытающиеся подделать/отравить ARP.

Существуют другие аномальные поведения в запросах и ответах ARP.
Общеизвестно, что poisoning and spoofing составляют основу большинства атак типа «отказ в обслуживании» (DoS) и «человек посередине» (MITM) на основе ARP.
Однако злоумышленники также могут использовать ARP для сбора информации.
К счастью, у нас есть навыки для обнаружения и оценки этих тактик с помощью аналогичных процедур.


Некоторые типичные "красные флаги", указывающие на сканирование ARP:

	-	Широковещательные запросы ARP, отправленные на последовательные IP-адреса (.1,.2,.3,...)

	-	Широковещательные запросы ARP, отправленные на несуществующие хосты

	-	Потенциально необычный объем трафика ARP, исходящий от вредоносного или скомпрометированного хоста

=====================================================================
* Подготовка *
**************

Аналогично примеру - ARP Spoofing & Abnormality Detection

=====================================================================
* Анализ *
**********

	++++++++++++++++++++++++
	+ Finding ARP Scanning +
	++++++++++++++++++++++++

	Откроем файл захвата трафика при помощи Wireshark и применим фильтр arp.opcode:

		<usern_name>@<host_name>$ wireshark <file_name>.pcapng

		-	arp.opcode

	Результат демонстрирует, что ARP-запросы действительно распространяются одним хостом на все IP-адреса последовательно.
	Эта схема является симптомом сканирования ARP и является общей чертой широко используемых сканеров, таких как Nmap.

	Кроме того, мы можем различить, что активные хосты отвечают на эти запросы посредством своих ARP-ответов.
	Это может быть признаком успешного выполнения тактики сбора информации злоумышленником.

	+++++++++++++++++++++++++++++++++
	+ Identifying Denial-of-Service +
	+++++++++++++++++++++++++++++++++

	Атакующий может использовать сканирование ARP для составления списка активных хостов.
	Получив этот список, атакующий может изменить свою стратегию, чтобы отказать в обслуживании всем этим машинам.
	По сути, они будут стремиться заразить всю подсеть и манипулировать как можно большим количеством кэшей ARP.
	Эта стратегия также правдоподобна для атакующего, пытающегося установить позицию «человек посередине».

	Также мы можем заметить, что трафик ARP атакующего может сместить фокус на объявление новых физических адресов для всех активных IP-адресов.
	Цель здесь — повредить кэш ARP маршрутизатора.
	
	Более того, чтобы выделить потенциальное наличие дублирование назначения одного и того же IP-фдреса (в нашем случае это 192.168.10.1) клиентским устройствам, достаточно использовать следующий фильтр
	Это указывает на то, что атакующий пытается повредить кэш ARP этих устройств-жертв с намерением затруднить трафик в обоих направлениях.
	
		-	arp.opcode && arp.duplicate-address-detected

	+++++++++++++++++++++++++++++
	+ Responding To ARP Attacks +
	+++++++++++++++++++++++++++++

	При выявлении любой из аномалий, связанных с ARP, мы можем определить подходящий курс действий для противодействия этим угрозам.
	Вот несколько подсказок:

		-	Tracing and Identification
			Прежде всего, машина злоумышленника — это физическое существо, расположенное где-то.
			Если нам удастся ее обнаружить, мы потенциально сможем остановить ее деятельность.
			Иногда мы можем обнаружить, что машина, организующая атаку, сама скомпрометирована и находится под удаленным управлением.

		-	Containment
			Чтобы помешать любой дальнейшей эксфильтрации информации злоумышленником, мы можем рассмотреть отключение или изоляцию пораженной области на уровне коммутатора или маршрутизатора.
			Это действие может эффективно прекратить атаку DoS или MITM в ее источнике.

	Атаки на уровне канала часто остаются незамеченными.
	Хотя они могут показаться незначительными для идентификации и расследования, их обнаружение может иметь решающее значение для предотвращения эксфильтрации данных с более высоких уровней модели OSI.

=====================================================================
* Дополнительные Вопросы *
**************************

	1)	Необходимо найти количество запросов ARP (код операции 1), отправленных с адреса 08:00:27:53:0c:ba

		-	arp.opcode == 1 && eth.src ==  08:00:27:53:0c:ba

	2)	Необходимо найти изначальный MAC-адрес, который был привязан к устройству с IP 192.168.10.1

		-	arp.opcode == 2