=====================================================================
* Руководство *
***************

Если использовать машину от HTB, то сперва надо запустить данную комнаду, чтобы скачать и распокавать все необходимые pcap файлы

	<usern_name>@<host_name>$ wget -O file.zip 'https://academy.hackthebox.com/storage/resources/pcap_files.zip' && mkdir tempdir && unzip file.zip -d tempdir && mkdir -p pcaps && mv tempdir/Intermediate_Network_Traffic_Analysis/* pcaps/ && rm -r tempdir file.zip

Удобнее всего просматривать PCAP-files используя Wireshark
Однако, в целях практики и выбработки навыков использования CLI-based tools мы будем использовать такие утилиты как tcpdump

=====================================================================
* Легенда *
***********

Туннелирование — это метод, используемый злоумышленниками для перекачки данных из одного места в другое.
Существует множество различных видов туннелирования, и каждый из них использует свой протокол.
Обычно злоумышленники могут использовать прокси-серверы для обхода наших сетевых элементов управления или протоколов, которые позволяют наши системы и элементы управления.

По сути, когда злоумышленник хочет передать данные другому хосту, он может использовать туннелирование.
Во многих случаях мы можем заметить это, когда злоумышленник обладает некоторым контролем над одной из машин.

Как уже отмечалось, туннелирование может осуществляться многими различными способами.
Одним из наиболее распространенных типов является туннелирование SSH.
Однако прокси-сервер, HTTP, HTTPs, DNS и другие типы можно наблюдать аналогичным образом.

Идея туннелирования заключается в том, что злоумышленник сможет расширить свое командование и контроль и обойти наши сетевые средства контроля с помощью протокола по своему выбору.

Вот команда для создании SSH тонеля

	-	ssh -L ####:localhost:## user@instance

=====================================================================
* Подготовка *
**************

Как такового, подготовительного этапа, не существует
Однако, Вы можете использовать следующие рекомендации для предотвращения туннелирования ICMP

	1)	Блокировка запросов ICMP
		Проще говоря, если ICMP не разрешен, злоумышленники не смогут его использовать.

	2)	Проверка запросов и ответов ICMP на наличие данных
		Удаление данных или проверка данных на наличие вредоносного содержимого в этих запросах и ответах может позволить нам лучше понять нашу среду и возможность предотвратить утечку данных

=====================================================================
* Анализ *
**********

	++++++++++++++++++++++++++
	+ Finding ICMP Tunneling +
	++++++++++++++++++++++++++

	В случае туннелирования ICMP злоумышленник добавляет данные, которые он хочет вывести во внешний мир или на другой хост, в поле данных запроса ICMP.
	Это делается с намерением скрыть эти данные среди общего типа протокола, такого как ICMP, и, как мы надеемся, затеряться в нашем сетевом трафике.	

	Поскольку туннелирование ICMP в основном осуществляется путем добавления злоумышленником данных в поле данных ICMP, мы можем обнаружить его, просмотрев содержимое данных в запросе и ответе.
	Для этого Вам надо отфильтровать захват Wireshark только по запросам и ответам ICMP, введя ICMP в строку фильтра.

		-	icmp

	Предположим, что мы заметили фрагментацию, происходящую в нашем трафике ICMP, это будет означать, что большой объем данных передается через ICMP.
	Чтобы понять это поведение, мы должны рассмотреть обычный запрос ICMP и тем самым мы увидим характерные отличия
	
	Первым, что может броситься в глаза - размер передаваемых данных
	У обычного ICMP запроса размер (length) пакета весьма маленький.
	Более того, размер передаваемой информации также будет весьма незначительным - несколько байт
	Если же и размер пакета и объем передавайемой информаци разительно отличается от стандарта, то это может вызвать подозрение

	В также можете просмотреть правую сторону Вашего экрана в Wireshark.
	В этом случае мы можем заметить что-то вроде текста информации (среди которых могут быть имена пользователя и пароля, названия файлом и другие данные) отправляемых на внешний или внутренний хост.
	Это прямой признак туннелирования ICMP.

	Очень часто передаваемая информация шифруется в Base64, чтобы не выглядеть как очевидно извлеченная информация
	В таком случае Вы можете скопировать эти данные и расшифровать используя следующую команду

		-	echo '<encrypted_data>' | base64 -d

	Таким образом, если длина данных ICMP превышает 48 байт, мы знаем, что происходит что-то подозрительное, и всегда должны это проверить.

=====================================================================
* Дополнительные Вопросы *
**************************


