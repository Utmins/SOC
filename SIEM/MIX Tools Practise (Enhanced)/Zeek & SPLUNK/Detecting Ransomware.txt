=====================================================================
* Введение *
************

Как Вы уже наверное значете, Zeek   -   обычно используется для тщательного изучения каждого бита трафика в сети, глубокого поиска любых признаков подозрительной или вредоносной активности.
Проще говоря, это такой же инструмент для анализа сетевого трафика, НО с другим (более узкоспециализированным) функционалом

Для подробной информции об общих и/или отличительных чертах Zeek от Wireshark, можно спросить ChatGPT или Google

!!! НО, очень часто Zeek используют для анализа пакетов собранных Wireshark (*.pcap)
    Поэтому, представленный ниже сценарий будет базироваться на анализе Zeek-ом некоторого *.pcap файла

Помимо взаимодействия с Zeek и Wireshark, будет также рассмотрено использование утилиты SPLUNK
Которая в свою очередь будет анализировать *.log файлы (это выжимка из *.pcap файла посредством Zeek/tShark) для отображения нужных результатов черех используемые фильтры

!!! Так как SPLUNK не работает на прямую с файлами типа *.pcap, то я КРАЙНЕ НАСТОЯТЕЛЬНО рекомендую ознакомиться с инструкцией по загрузки *.log файлов (каталогов) в базу данных SPLUNK

В данной презентации *.pcap файл уже был распарсен Zeek и все сформированные файлы были загружены в базу данных SPLUNK
Связанные материалы:

    -   PCAP-file           ransomware_open_rename_sodinokibi.pcap      //  ransomware_new_file_extension_ctbl_ocker.pcap  
    -   Splunk Index:       ransomware_open_rename_sodinokibi           //  ransomware_new_file_extension_ctbl_ocker
    -   Splunk Sourcetupe:  bro:smb_files:json                          //  bro:smb_files:json

Также перед оптимизацие фильтра, сперва рекомендую провести SPLUNK анализ без каких-либо уточняющих параметров
Это позволит увидеть вам название используемых полей-заголовков, которые мотом можно будет использовать для более тонкой настройки фильтрации

=====================================================================
* Detecting Ransomware *
************************

Программы-вымогатели используют ряд методов для достижения своих целей.
В следующем анализе мы рассмотрим два из этих методов, изучим их внутреннюю работу и объясним, как их обнаружить с помощью сетевого мониторинга.

    1)  File Overwrite Approach (Подход к перезаписи файлов)
    
        Программы-вымогатели используют эту тактику, получая доступ к файлам через протокол SMB, шифруя их, а затем напрямую перезаписывая исходные файлы их зашифрованными версиями (опять же через протокол SMB).
        Злонамеренные субъекты, стоящие за программами-вымогателями, предпочитают этот метод из-за его эффективности, поскольку он требует меньше действий и оставляет меньше следов их деятельности.
        Чтобы обнаружить этот подход, группы безопасности должны искать чрезмерные операции перезаписи файлов в системе.
    
    2)  File Renaming Approach (Подход к переименованию файлов)
    
        В этом подходе злоумышленники, занимающиеся программами-вымогателями, используют протокол SMB для чтения файлов, затем шифруют их и, наконец, переименовывают зашифрованные файлы, добавляя уникальное расширение (опять же через протокол SMB), часто указывающее на штамм программы-вымогателя.
        Переименование сигнализирует о том, что файлы были взяты в заложники, что упрощает аналитикам и администраторам распознавание атаки.
        Обнаружение включает в себя мониторинг необычного количества файлов, переименованных с одним и тем же расширением, особенно тех, которые связаны с известными вариантами программ-вымогателей.

Теперь давайте рассмотрим, как можно определить Ransomware с помощью Splunk и Zeek logs

    1)  Excessive Overwriting

        index="ransomware_open_rename_sodinokibi" sourcetype="bro:smb_files:json" 
            | where action IN ("SMB::FILE_OPEN", "SMB::FILE_RENAME")
            | bin _time span=5m
            | stats count by _time, source, action
            | where count>30 
            | stats sum(count) as count values(action) dc(action) as uniq_actions by _time, source
            | where uniq_actions==2 AND count>100
    
        Этот фильтр ищет аномально активные SMB-сессии, характерные для атаки программой-вымогателем Sodinokibi (REvil) — в частности, случаи массового открытия и переименования файлов, что типично для шифровальщиков.
        А имеено, пытается найти источники (source), которые в течение 5 минут:

            -   Совершили более 100 операций SMB;
            -   Причём и открывали, и переименовывали файлы;
            -   Такие шаблоны часто соответствуют поведению шифровальщика Sodinokibi или других рансомварей.

    2)  Excessive Renaming With The Same Extension

        index="ransomware_new_file_extension_ctbl_ocker" sourcetype="bro:smb_files:json" action="SMB::FILE_RENAME" 
            | bin _time span=5m
            | rex field="name" "\.(?<new_file_name_extension>[^\.]*$)"
            | rex field="prev_name" "\.(?<old_file_name_extension>[^\.]*$)"
            | stats count by _time, id.orig_h, id.resp_p, name, source, old_file_name_extension, new_file_name_extension,
            | where new_file_name_extension!=old_file_name_extension
            | stats count by _time, id.orig_h, id.resp_p, source, new_file_name_extension
            | where count>20
            | sort -count
        
        Этот фильтр предназначен для обнаружения потенциальной активности программ-вымогателей (ransomware), которые переименовывают файлы, добавляя им новые расширения (например, .locked, .ctbl, .ocker и т.п.).

        Вот расшифровка ключевых моментов фильтра:

            -   rex field="name" "\.(?<new_file_name_extension>[^\.]*$)" // rex field="prev_name" "\.(?<old_file_name_extension>[^\.]*$)"

                С помощью регулярного выражения (rex) вытаскиваются:

                    -   новое расширение файла из поля name;
                    -   старое расширение файла из поля prev_name.
                    -   (?<имя_группы>...) — это именованная группа для сохранения результата.
                    -   [^\.]*$ — всё, что идёт после последней точки, то есть расширение файла.
        
        В результате будет список IP-адресов и путей, где много файлов были переименованы с новым расширением, отличающимся от предыдущего, и это произошло в пределах 5 минут — высокая вероятность активности ransomware.

*** Вот список ресурсов, где можно узнать об известных расширениях, связанныех с программами-вымогателями:

    -   https://docs.google.com/spreadsheets/d/e/2PACX-1vRCVzG9JCzak3hNqqrVCTQQIzH0ty77BWiLEbDu-q9oxkhAamqnlYgtQ4gF85pF6j6g3GmQxivuvO1U/pubhtml
    -   https://github.com/corelight/detect-ransomware-filenames
    -   https://fsrm.experiant.ca/


    index="ransomware_excessive_delete_aleta" sourcetype="bro:smb_files:json" 
            | where action IN ("SMB::FILE_OPEN", "SMB::FILE_RENAME")
            | bin _time span=5m
            | stats count by _time, source, action
            | where count>30 
            | stats sum(count) as count values(action) dc(action) as uniq_actions by _time, source
            | where uniq_actions==2 AND count>100

