=====================================================================
* Введение *
************

Как Вы уже наверное значете, Zeek   -   обычно используется для тщательного изучения каждого бита трафика в сети, глубокого поиска любых признаков подозрительной или вредоносной активности.
Проще говоря, это такой же инструмент для анализа сетевого трафика, НО с другим (более узкоспециализированным) функционалом

Для подробной информции об общих и/или отличительных чертах Zeek от Wireshark, можно спросить ChatGPT или Google

!!! НО, очень часто Zeek используют для анализа пакетов собранных Wireshark (*.pcap)
    Поэтому, представленный ниже сценарий будет базироваться на анализе Zeek-ом некоторого *.pcap файла

Помимо взаимодействия с Zeek и Wireshark, будет также рассмотрено использование утилиты SPLUNK
Которая в свою очередь будет анализировать *.log файлы (это выжимка из *.pcap файла посредством Zeek/tShark) для отображения нужных результатов черех используемые фильтры

!!! Так как SPLUNK не работает на прямую с файлами типа *.pcap, то я КРАЙНЕ НАСТОЯТЕЛЬНО рекомендую ознакомиться с инструкцией по загрузки *.log файлов (каталогов) в базу данных SPLUNK

В данной презентации *.pcap файл уже был распарсен Zeek и все сформированные файлы были загружены в базу данных SPLUNK
Связанные материалы:

    -   PCAP-file           cobalt_strike_psexec.pcap
    -   Splunk Index:       cobalt_strike_psexec
    -   Splunk Sourcetupe:  bro:smb_files:json

Также перед оптимизацие фильтра, сперва рекомендую провести SPLUNK анализ без каких-либо уточняющих параметров
Это позволит увидеть вам название используемых полей-заголовков, которые мотом можно будет использовать для более тонкой настройки фильтрации

=====================================================================
* Detecting Cobalt Strike's PSExec *
************************************

Команда psexec Cobalt Strike — это реализация популярного инструмента PsExec, который является частью пакета Sysinternals Suite от Microsoft.
Это облегченная замена telnet, которая позволяет вам выполнять процессы в других системах.

Версия Cobalt Strike используется для выполнения полезных нагрузок в удаленных системах в рамках процесса после эксплуатации.
Когда команда psexec вызывается в Cobalt Strike, происходят следующие шаги:

    -   Service Creation (Создание службы)
        Инструмент сначала создает новую службу в целевой системе.
        Эта служба отвечает за выполнение желаемой полезной нагрузки.
        Служба обычно создается со случайным именем, чтобы избежать легкого обнаружения.

    -   File Transfer
        Затем Cobalt Strike передает полезную нагрузку в целевую систему, часто в общий ресурс ADMIN$.
        Обычно это делается с помощью протокола SMB.

    -   Service Execution
        Затем запускается вновь созданная служба, которая, в свою очередь, выполняет полезную нагрузку.
        Эта полезная нагрузка может быть шелл-кодом, исполняемым файлом или любым другим типом файла, который может быть выполнен.

    -   Service Removal
        После выполнения полезной нагрузки служба останавливается и удаляется из целевой системы, чтобы свести к минимуму следы вторжения.

    -   Communication
        Если полезная нагрузка представляет собой маяк или другой тип бэкдора, она обычно устанавливает обратную связь с сервером команды Cobalt Strike, позволяя отправлять и выполнять дальнейшие команды на скомпрометированной системе.

Psexec Cobalt Strike работает через порт 445 (SMB) и требует привилегий локального администратора на целевой системе.
Поэтому ее часто используют после получения первоначального доступа и повышения привилегий.

Вот подробная инструкция по обнаружению Cobalt Strike Attack и защите от него   -   https://thedfirreport.com/2021/08/29/cobalt-strike-a-defenders-guide/

При анализе трафика чреез Wireshark, как правило использую фильтр по пакетам
Просматривают SMB пакеты, в которых ищут

    -   Connection Request (как правило к ADMIN$)
    -   Create Request File (с весьма подозрительным названием)
    -   CreateServiceA request

Теперь давайте рассмотрим, как можно определить Cobalt Strike's PSExec с помощью Splunk и Zeek logs

    index="cobalt_strike_psexec" sourcetype="bro:smb_files:json" action="SMB::FILE_OPEN"  name IN ("*.exe", "*.dll", "*.bat") path IN ("*\\c$", "*\\ADMIN$") size>0

Этот фильтр используется для обнаружения потенциально вредоносной активности с использованием SMB (например, lateral movement с помощью PsExec или Cobalt Strike).
Вот расшифровка ключевых моментов фильтра:

    -   action="SMB::FILE_OPEN"
        Фильтруем события, где файл был открыт через SMB.
        Это указывает на попытку получить доступ к файлу по сети — важно для выявления lateral movement и malware deployment.

    -   name IN ("*.exe", "*.dll", "*.bat")
        Фильтруем только те файлы, имена которых заканчиваются на: "*.exe", "*.dll", "*.bat"

    -   path IN ("*\\c$", "*\\ADMIN$")
        Фильтрация по путям, содержащим: "*\\c$", "*\\ADMIN$"
        Эти пути используются при удалённом администрировании, в том числе инструментами вроде PsExec и Cobalt Strike.