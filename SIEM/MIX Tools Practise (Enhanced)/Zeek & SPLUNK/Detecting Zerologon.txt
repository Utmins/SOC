=====================================================================
* Введение *
************

Как Вы уже наверное значете, Zeek   -   обычно используется для тщательного изучения каждого бита трафика в сети, глубокого поиска любых признаков подозрительной или вредоносной активности.
Проще говоря, это такой же инструмент для анализа сетевого трафика, НО с другим (более узкоспециализированным) функционалом

Для подробной информции об общих и/или отличительных чертах Zeek от Wireshark, можно спросить ChatGPT или Google

!!! НО, очень часто Zeek используют для анализа пакетов собранных Wireshark (*.pcap)
    Поэтому, представленный ниже сценарий будет базироваться на анализе Zeek-ом некоторого *.pcap файла

Помимо взаимодействия с Zeek и Wireshark, будет также рассмотрено использование утилиты SPLUNK
Которая в свою очередь будет анализировать *.log файлы (это выжимка из *.pcap файла посредством Zeek/tShark) для отображения нужных результатов черех используемые фильтры

!!! Так как SPLUNK не работает на прямую с файлами типа *.pcap, то я КРАЙНЕ НАСТОЯТЕЛЬНО рекомендую ознакомиться с инструкцией по загрузки *.log файлов (каталогов) в базу данных SPLUNK

В данной презентации *.pcap файл уже был распарсен Zeek и все сформированные файлы были загружены в базу данных SPLUNK
Связанные материалы:

    -   PCAP-file           zerologon.pcap
    -   Splunk Index:       zerologon
    -   Splunk Sourcetupe:  bro:dce_rpc:json

Также перед оптимизацие фильтра, сперва рекомендую провести SPLUNK анализ без каких-либо уточняющих параметров
Это позволит увидеть вам название используемых полей-заголовков, которые мотом можно будет использовать для более тонкой настройки фильтрации

=====================================================================
* Detecting Zerologon *
***********************

Уязвимость Zerologon, также известная как CVE-2020-1472, является критическим недостатком в реализации протокола Netlogon Remote, в частности в криптографическом алгоритме, используемом протоколом.
Уязвимость может быть использована злоумышленником для выдачи себя за любой компьютер, включая контроллер домена, и выполнения удаленных вызовов процедур от его имени.

Давайте углубимся в технические детали этой уязвимости.

    -   В основе Zerologon лежит криптографическая проблема в способе, которым протокол Netlogon Remote от Microsoft аутентифицирует пользователей и машины в домене Windows.
        Когда клиент хочет пройти аутентификацию на контроллере домена, он использует протокол MS-NRPC, часть Netlogon, для установления защищенного канала.

    -   Во время этого процесса клиент и сервер генерируют ключ сеанса, который вычисляется из пароля учетной записи машины.
        Затем этот ключ используется для получения вектора инициализации (IV) для режима шифрования AES-CFB8.
        В защищенной конфигурации IV должен быть уникальным и случайным для каждой операции шифрования.
        Однако из-за несовершенной реализации протокола Netlogon IV устанавливается на фиксированное значение из всех нулей.

    -   Злоумышленник может воспользоваться этой криптографической слабостью, попытавшись пройти аутентификацию на контроллере домена с помощью сеансового ключа, состоящего из всех нулей, эффективно обходя процесс аутентификации.
        Это позволяет злоумышленнику установить безопасный канал с контроллером домена, не зная пароля учетной записи компьютера.

    -   После установки этого канала злоумышленник может использовать функцию NetrServerPasswordSet2, чтобы изменить пароль учетной записи компьютера на любое значение, включая пустой пароль.
        Это фактически дает злоумышленнику полный контроль над контроллером домена и, как следствие, над всем доменом Active Directory.

Уязвимость Zerologon особенно опасна из-за своей простоты и уровня доступа, который она предоставляет злоумышленникам.
Для эксплуатации этой уязвимости требуется всего несколько сообщений Netlogon, и ее можно выполнить в течение нескольких секунд.

Подробно о данной уязвимости и способе компроментации можно почитать тут    -   https://www.trendmicro.com/en_us/what-is/zerologon.html

Теперь давайте рассмотрим, как можно определить Zerologon с помощью Splunk и Zeek logs

    index="zerologon" endpoint="netlogon" sourcetype="bro:dce_rpc:json"
        | bin _time span=1m
        | where operation == "NetrServerReqChallenge" OR operation == "NetrServerAuthenticate3" OR operation == "NetrServerPasswordSet2"
        | stats count values(operation) as operation_values dc(operation) as unique_operations by _time, id.orig_h, id.resp_h
        | where unique_operations >= 2 AND count>100

Этот фильтр построен для обнаружения атак Zerologon или похожей подозрительной активности, связанной с злоупотреблением протокола Netlogon (MS-NRPC).
Его цель - обнаружить IP-адреса, которые за короткий промежуток времени (1 минута) выполняют много операций Netlogon, в том числе разные типы вызовов (что может указывать на попытку эксплуатации уязвимости Zerologon — CVE-2020-1472)

Вот расшифровка ключевых моментов фильтра:

    -   where unique_operations >= 2 AND count>100
        Показывает только те случаи, когда:
            было 100+ операций за 1 минуту, и
            как минимум 2 разных типа операций были выполнены.
        Это фильтрует спам/флуд или подозрительные автоматические атаки (например, Zerologon-эксплойт может делать десятки вызовов NetrServerReqChallenge + NetrServerAuthenticate3 за секунды, надеясь на успешную аутентификацию без ключа).