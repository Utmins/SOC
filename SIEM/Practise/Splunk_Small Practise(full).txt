В этом упражнении мы будем расследовать кибератаку, в ходе которой злоумышленник испортил веб-сайт организации.
Нашей задачей в качестве аналитика безопасности будет расследование этой кибератаки и сопоставление действий злоумышленника со всеми 7 фазами цепочки киберубийств.
Важно отметить, что нам не нужно следовать последовательности Cyber kill Chain Model во время расследования.
Так как один вывод на одном этапе приведет к другому выводу, который может быть сопоставлен с какой-то другой фазой.

Однако сопоставлять действия злоумышленника с Cyber kill Chain Model, на каждом этапе во время этого расследования, для понимания картины происходящего и предугадывания действий злоумышленника, все же стоит.
При необходимости мы также будем использовать разведку с открытым исходным кодом (OSINT) и другие выводы, чтобы заполнить пробелы в цепочке убийств.
*** Для напоминания, Cyber kill Chain Model выглядит так:

    -   Reconnaissance / Разведка
    -   Weaponization / Вооружение
    -   Delivery / Доставка
    -   Exploitation / Эксплойтирование
    -   Installation / Базирование
    -   Command & Control / Управление и контроль
    -   Actions on Objectives / Действия по целям

    +++++++++++
    + ЛЕГЕНДА +
    +++++++++++
    
    Крупная корпоративная организация Wayne Enterprises недавно столкнулась с кибератакой
    В ходе которой злоумышленники проникли в их сеть, нашли доступ к их веб-серверу и успешно испортили их веб-сайт http://www.imreallynotbatman.com.
    Теперь на их веб-сайте отображается торговая марка злоумышленников с сообщением ВАШ САЙТ ВЗЛОМАН"
            
    К счастью, у организации был установлен Splunk, поэтому есть все журналы событий, связанные с действиями злоумышленника.
    Нам нужно изучить записи и выяснить, как атака попала в их сеть и какие действия они выполнили.
    Журналы поступают с веб-сервера/брандмауэра/Suricata/Sysmon и т. д.
    *** Это расследование относится к фазе Detection and Analysis.

    +++++++++++++++++++++++++++++
    + ПОДГОТОВИТЕЛЬНЫЕ ДЕЙСТВИЯ +
    +++++++++++++++++++++++++++++
    
    1)  На вкладке сводки данных мы можем изучить источники журналов, показывающие видимость как сетевых, так и хост-центрических действий.
        Чтобы получить полную картину хостов и источников журналов, отслеживаемых в Wayne Enterprise, нажмите 
            
            Splunk -> Search&Reporting -> Data Summary (in "How to Search" section/pane)
        
    2)  Из представленного многообразия жиурналов, выберите то (те), которое Вам необходимые
        Вот некоторые интересные источники журналов, которые помогут нам в нашем расследовании:

            Log Sources          Details

            wineventlog         Содержит журналы событий Windows
            winRegistry         Содержит журналы, связанные с созданием / изменением / удалением реестра и т. д.
            XmlWinEventLog      Содержит журналы событий sysmon. Это очень важный источник журналов с точки зрения расследования.
            fortigate_utm       Содержит журналы брандмауэра Fortinet
            iis                 Содержит журналы веб-сервера IIS
            Nessus: scan        Содержит результаты сканера уязвимостей Nessus.
            Suricata            Содержит сведения об оповещениях от Suricata IDS.
                                Этот источник журналов показывает, какое оповещение было сгенерировано и что вызвало его срабатывание — очень важный источник журналов для расследования.
            stream: http        Содержит сетевой поток, связанный с трафиком http.
            stream: DNS         Содержит сетевой поток, связанный с трафиком DNS.
            stream: icmp        Содержит сетевой поток, связанный с трафиком icmp.
            
        *** Все журналы событий (нашего примера), которые мы собираемся исследовать, присутствуют в index=botsv1
    
    Теперь, когда мы знаем, какие хосты нам нужно исследовать, какие есть источники и типы источников, давайте подключимся к лаборатории и начнем исследование.
    
        /////////////////////////////////
        /// Reconnaissance / Разведка ///
        /////////////////////////////////

        Разведка — это попытка обнаружить и собрать информацию о цели.
        Это могут быть знания об используемой системе, веб-приложении, сотрудниках или местоположении и т. д.

        Мы начнем наш анализ с изучения любой попытки разведки веб-сервера компании     -   imreallynotbatman.com.
        С точки зрения аналитика, куда нам нужно в первую очередь обратить внимание?
        Если мы посмотрим на доступные источники журналов, мы найдем некоторые источники журналов, охватывающие сетевой трафик
        Это означает, что все входящие сообщения к нашему веб-серверу будут регистрироваться в источнике журналов, содержащем веб-трафик.
        Давайте начнем с поиска домена в заголовке поиска и посмотрим, какой источник журналов включает следы нашего домена.
        *** Перед началом поиска, РЕКОЕНДУЕТСЯ переключить режим поиска на VERBOSE MODE (переключатель находится под значком "ЛУПА")
            А временной диапозон указать как - ALL TIME

            Поисковый запрос                    index=botsv1 imreallynotbatman.com
            Пояснение поискового запроса        мы будем искать журналы событий в индексе "botsv1", который содержит термин imreallynotbatman.com

        По завершению анализа, нам стоит обратить поле SELECTED FIELDS
        Где для нас (пока) интересным является поле -   sourcetype
        Просмотр которого, нам покажет, что следующие источники журнала содержат следы этого поискового термина.

            -   Suricata
            -   stream:http
            -   fortigate_utm
            -   iis

        Из названия этих источников журналов становится ясно, что может содержать каждый источник журналов.
        Наша первая задача — определить IP-адрес, пытающийся выполнить разведывательную деятельность на нашем веб-сервере.
        Было бы очевидно, что нужно посмотреть на веб-трафик, поступающий в сеть.
        Мы можем начать изучать любой из упомянутых выше источников журналов.

        Давайте начнем с источника журнала stream:http, который содержит журналы трафика http, и изучим поле src_ip на левой панели.
        Поле src_ip содержит исходный IP-адрес, который он находит в журналах.
        *** Важно отметить, если вы не нашли интересующее вас поле, продолжайте прокручивать левую панель.
            При нажатии на поле оно будет содержать все значения, которые оно находит в журналах.
            
            Поисковый запрос                    index=botsv1 imreallynotbatman.com sourcetype=stream:http
            Пояснение поискового запроса        этот запрос будет искать только термин imreallynotbatman.com в источнике журнала stream:http.
        
        Пока что мы нашли два IP в поле src_ip 40.80.148.42 и 23.22.63.114.
        Первый IP, похоже, содержит высокий процент журналов по сравнению с другим IP, что может быть ответом.
        Если вы хотите подтвердить дальше, нажмите на каждый IP по одному, он будет добавлен в поисковый запрос, и просмотрите журналы, и вы найдете ответ.

        Чтобы еще раз подтвердить наши подозрения относительно IP-адреса 40.80.148.42, нажмите на IP и изучите журналы.
        Мы можем посмотреть на Interesting Fields, такие как User-Agent, Post request, URI и т. д., чтобы увидеть, какой трафик поступает с этого конкретного IP.

        Итак, что нам нужно сделать, чтобы подтвердить наши обнаружения?
        Просто, покопайтесь в веблогах.
        Давайте сузим результат, посмотрим на журналы suricata и посмотрим, срабатывает ли какое-либо правило в этом сообщении.

            Поисковый запрос                    index=botsv1 imreallynotbatman.com src=40.80.148.42 sourcetype=suricata
            Пояснение поискового запроса        этот запрос покажет журналы из источника журнала suricata, которые обнаружены/сгенерированы из исходного IP 40.80.248.42
        
        На правой панели мы не смогли найти поле, которое нас интересовало, поэтому мы нажали "## more fields" и искали поля, содержащие информацию об alerts
        *** Чтобы не выискивать и затем отмечать все необходимые сигнатуры, мы может воспользоваться ФИЛЬТРОМ
            Для этого в поле фильтра необходимо написать что нас интересует (в нашем случает это - alert)
            И затем выбрать из появившихся вариантов (в нашем примере это - alert.signatures)
        
        Вот некоторые моменты, которые мы можем ОБНАРУЖИТЬ на данном этапе:

            1)  В одном предупреждении Suricata было указано значение CVE, связанное с попыткой атаки. Каково значение CVE?

                    Selected Fileds:
                        host
                        source
                        sourcetype
                        src_ip
                        alert.signature
                    
                    Search Filed:
                        index="botsv1" imreallynotbatman.com sourcetype=suricata src_ip="40.80.148.42"
                
                Если 1 раз нажать на alert.signature, то в появившемся окне можно найти ответ
                    ET WEB_SERVER Possible CVE-2014-6271 Attempt
            
            2)  Какую CMS использует наш веб-сервер?

                    Selected Fileds:
                        host
                        source
                        sourcetype
                        src_ip
                        url
                        http.url

                    Search Filed:
                        index="botsv1" imreallynotbatman.com
                
                Ответ на данный вопрос можно найти либо в поле url, либо в http.url
                Как правило используемый CMS будет находиться в начале адресной строки
                В нашем случае это - joomla
                    /joomla/administrator/index.php
            
            3)  Какой веб-сканер использовал злоумышленник для осуществления попыток сканирования?

                    Selected Fileds:
                        host
                        source
                        sourcetype
                        src_ip
                        hostname
                        http_user_agent
                        http.http_user_agent
                        eventtype
                        ids_type
                        msg

                    Search Filed:
                        index="botsv1" imreallynotbatman.com src="40.80.148.42"
                
                Вариантов поиска ответа на данный вопрос может быть несколько
                И каждый зависит от выбранных настроек
                Я указал все поля, которые могут потребоваться, но использование каждого их них зависит от ваших предпочтений

                Что касаемо моего способа, то кроме первых 5, мне понадобились только 2 -   msg и http_user_agent
                Нажав 1 раз на msg я увидел сообщение об используемом инструменте
                    tools: Acunetix.Web.Vulnerability.Scanner
                Нажав 1 раз на msg я обнаружил несколько упоминаний об  -   Acunetix
                Банальный гугл-поиск указал, что Acunetix является веб-сканером
                Анализ остальных полей может лишь только дополнительно подтвердить обнаружением
            
            4)  Какой IP-адрес у сервера imreallynotbatman.com?

                    Selected Fileds:
                        host
                        source
                        sourcetype
                        src_ip
                        hostname

                    Search Filed:
                        index="botsv1" imreallynotbatman.com src="40.80.148.42"
                
                Анализ каждого сообщения отображенных, использунмыми фильтрами/полями, выдаст на 2 новых IP адреса
                    192.168.250.1
                    192.168.250.70
                По характеру адресов становиться понятно, что
                    1)  Они принаджедат к одной сети
                    2)  ###.###.###.1 это как правило адрес самой сети
                    3)  Так что оставшийся адрес 192.168.250.70 и будет являться нашим ответом

        ///////////////////////////////////////
        /// Exploitation / Эксплойтирование ///
        ///////////////////////////////////////
    
        Злоумышленнику необходимо использовать уязвимость, чтобы получить доступ к системе/серверу.
        На этом этапе мы рассмотрим потенциальную попытку эксплуатации со стороны злоумышленника против нашего веб-сервера и выясним, удалось ли злоумышленнику успешно ее использовать или нет.
        Чтобы начать наше расследование, давайте отметим имеющуюся у нас на данный момент информацию:

            -   Мы обнаружили два IP-адреса из фазы разведки с отправкой запросов на наш сервер.
            -   Один из IP-адресов 40.80.148.42 был замечен при попытке сканирования сервера с IP-адресом 192.168.250.70.
            -   Злоумышленник использовал веб-сканер Acunetix для попытки сканирования.
        
        Сперва нам надо определить/увидеть сколько запросов с каждого подозрительного IP-адресу было осуществленно в отношении нашего веб-сервера.

            Поисковый запрос                    index=botsv1 imreallynotbatman.com sourcetype=stream* | stats count(src_ip) as Requests by src_ip | sort - Requests
            Пояснение поискового запроса        этот запрос использует функцию stats для отображения количества IP-адресов в поле src_ip.
        
        *** Если мы хотим создать различную визуализацию (к примеру груговую диаграмму), чтобы показать результат, то
                Нажмите Visualization -> Select Visualization
        
        Далее мы сузим результат, чтобы отобразить запросы, отправленные на наш веб-сервер, имеющий IP 192.168.250.70
        
            Поисковый запрос                    index=botsv1 sourcetype=stream:http dest_ip="192.168.250.70"
            Пояснение поискового запроса        этот запрос будет искать весь входящий трафик на IP 192.168.250.70.
        
        Результат в поле src_ip показывает три IP-адреса (1 локальный IP и два удаленных IP-адреса), которые инициировали HTTP-трафик к нашему веб-серверу.
        
        Другое интересное поле, http_method, предоставит нам информацию о HTTP-методах, наблюдаемых во время этих HTTP-коммуникаций.
        Мы наблюдали большинство запросов, поступающих на наш сервер через запрос POST
        Чтобы увидеть, какой трафик поступает через запросы POST, мы сузим поле http_method=POST

            Поисковый запрос                    index=botsv1 sourcetype=stream:http dest_ip="192.168.250.70" http_method=POST
        
        Результат в поле src_ip показывает два IP-адреса, отправляющих все POST-запросы на наш сервер.

        Добавим несколько интересных полей, содержащих ценную информацию:

            -   uri
            -   form_data
            -   http_user_agent
        
        Как вы помните, мы уже использовали поле uri для определения CMS используемого нашим веб-сервером   -   joomla
        Термин Joomla также может быть найденн в ндругих полях, таких как uri, uri_path, http_referrer и т. д.
        Это подтверждает, что наш веб-сервер использует Joomla CMS (службу управления контентом) в бэкэнде.
        Небольшой поиск в Интернете страницы входа администратора Joomla CMS покажет как -> /joomla/administrator/index.php
        *** Данный адрес также отображался в поле uri

        Это важно, поскольку этот uri содержит страницу входа для доступа к веб-порталу, поэтому мы будем проверять трафик, поступающий в эту панель администратора, на предмет потенциальной атаки методом подбора.
            https://www.joomla.org/administrator/index.php

        Мы можем сузить наш поиск, чтобы увидеть запросы, отправленные на портал входа, используя эту информацию.

            Поисковый запрос                    index=botsv1 imreallynotbatman.com sourcetype=stream:http dest_ip="192.168.250.70" uri="/joomla/administrator/index.php"
            Пояснение поискового запроса        Мы собираемся добавить uri="/joomla/administrator/index.php" в поисковый запрос, чтобы показать трафик, поступающий на этот URI.

        Поле form_data содержит запросы, отправленные через форму на странице панели администратора, которая имеет страницу входа.
        Мы подозреваем, что злоумышленник мог попробовать несколько учетных данных, пытаясь получить доступ к панели администратора.
        Для подтверждения мы углубимся в значения, содержащиеся в поле form_data:

            Поисковый запрос                    index=botsv1 sourcetype=stream:http dest_ip="192.168.250.70" http_method=POST uri="/joomla/administrator/index.php" | table _time uri src_ip dest_ip form_data
            Пояснение поискового запроса        мы добавим это -> | table _time uri src_ip dest_ip form_data, чтобы создать таблицу, содержащую важные поля, а именно
                                                    _time
                                                    uri
                                                    src_ip
                                                    dest_ip
                                                    form_data

        Если мы продолжим изучать результаты, то обнаружим два интересных поля
        
            -   username, которое включает единственное имя пользователя admin во всех событиях
            -   passwd, которое содержит несколько паролей, что показывает, что злоумышленник с IP-адреса 23.22.63.114 пытался угадать пароль методом подбора и перебирал многочисленные пароли
        
        Время, прошедшее между несколькими событиями, также позволяет предположить, что злоумышленник использовал автоматизированный инструмент, поскольку было зафиксировано несколько попыток в течение короткого промежутка времени.

        Просматривая логи, мы видим, что эти поля не анализируются должным образом.
        Давайте используем Regex в поиске, чтобы извлечь только эти два поля и их значения из журналов и отобразить их.
        Мы можем отобразить только журналы, содержащие значения username и passwd в поле form_data, добавив form_data=*username*passwd* в поиск выше.

            Поисковый запрос: index=botsv1 sourcetype=stream:http dest_ip="192.168.250.70" http_method=POST uri="/joomla/administrator/index.php" form_data=*username*passwd* | table _time uri src_ip dest_ip form_data
        
        Пришло время использовать Regex (регулярные выражения) для извлечения всех значений паролей, найденных в поле passwd в журналах.
        Для этого в Splunk есть функция rex.
        Если мы введем ее в заголовок поиска, она покажет подробности и пример того, как использовать ее для извлечения значений.
        Давайте используем Regex. rex field=form_data "passwd=(?<creds>\w+)" Чтобы извлечь только значения passwd.
        Это выберет поле form_data и извлечет все значения, найденные в поле cred

            Поисковый запрос                        index=botsv1 sourcetype=stream:http dest_ip="192.168.250.70" http_method=POST form_data=*имя_пользователя*пароль* | rex field=form_data "passwd=(?<creds>\w+)" | table src_ip creds
        
        Мы извлекли пароли, используемые против имени пользователя admin на панели администратора веб-сервера.
        Если мы проверим поля в журналах, мы найдем два значения против поля http_user_agent:

            -   Python-urllib/2.7
            -   Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko
        
        Первое значение ясно показывает, что злоумышленник использовал скрипт python для автоматизации атаки методом подбора паролей на наш сервер.
        Но один запрос пришел из браузера Mozilla. ПОЧЕМУ?
        Чтобы найти ответ на этот запрос, давайте немного изменим поисковый запрос и добавим поле http_user_agent в заголовок поиска.
        В результате мы создадим таблицу для отображения ключевых полей и значений, добавив -> | table _time src_ip uri http_user_agent creds в поисковый запрос

            Поисковый запрос                        index=botsv1 sourcetype=stream:http dest_ip="192.168.250.70" http_method=POST form_data=*username*passwd* | rex field=form_data "passwd=(?<creds>\w+)" |table _time src_ip uri http_user_agent creds
        
        Этот результат наглядно демонстрирует непрерывную попытку атаки методом подбора с IP-адреса 23.22.63.114 и 1 попытку подбора пароля batman с IP-адреса 40.80.148.42 с использованием браузера Mozilla.

        //////////////////////////////////
        /// Installation / Базирование ///
        //////////////////////////////////

        После того, как злоумышленник успешно взломал систему безопасности, он попытается установить бэкдор или приложение для сохранения или получения большего контроля над системой. 
        та деятельность относится к фазе базирования, т.е. создания точки входа для последующих атак или управления атакой.

        На предыдущей фазе эксплуатации мы обнаружили доказательства того, что веб-сервер iamreallynotbatman.com был скомпрометирован с помощью атаки методом подбора злоумышленником, использовавшим скрипт python для автоматизации получения правильного пароля.
        Злоумышленник использовал IP-адрес для атаки и IP-адрес для входа на сервер.
        На этой фазе будут исследованы любые полезные данные/вредоносные программы, загруженные на сервер с любых IP-адресов злоумышленника и установленные на скомпрометированном сервере.

        Чтобы начать расследование, мы сначала сузим любой http-трафик, поступающий на наш сервер 192.168.250.70, содержащий термин «.exe».
        Этот запрос может не привести к результатам, но хорошо начать с 1 расширения и двигаться дальше.

        Но сперва, мы пересмотри состав используемых полей
        Начнем со следующего списка
        *** Важно отметить, если вы не нашли интересующее вас поле, то необходимо поставить отобрадения All Fields.

            host
            source
            sourcetype
            src_ip
            dest_ip
            part_filename[]
            c_ip
            EventCode
            CommandLine
        
        Поле part_filename[] как раз нам поможет с поиском файлов

            Поисковый запрос                        index=botsv1 sourcetype=stream:http dest_ip="192.168.250.70" *.exe
        
        Рассматривая интересные поля и значения, мы видим, что поле part_filename{} содержит два имени файлов
            -   исполняемый файл 3791.exe
            -   файл PHP agent.php
        
        Далее нам нужно выяснить, были ли какие-либо из этих файлов получены с IP-адресов, которые ранее были связаны с атакой.
        Щелкните по имени файла; оно будет добавлено в поисковый запрос, затем найдите поле c_ip, которое, по-видимому, представляет собой IP-адрес клиента.

            Поисковый запрос                        index=botsv1 sourcetype=stream:http dest_ip="192.168.250.70" "part_filename{}"="3791.exe"
        
        Мы обнаружили, что файл 3791.exe был загружен на сервер.
        Вопрос, который может прийти нам в голову, был ли этот файл выполнен на сервере?
        Нам нужно сузить наш поисковый запрос, чтобы показать журналы из источников журналов, ориентированных на хост, чтобы ответить на этот вопрос.

            Поисковый запрос                        index=botsv1 "3791.exe"
        
        Просматривая поле sourcetypeg были обнаружены источники со следами исполняемого файла 3791. exe.

            -   xmlwineventlog
            -   WinEventlog
            -   stream:http
            -   fortigate_utm
            -   suricata

        Однако для нас боее все интересны только 3 из 5, так как предоставляют данные непосредственно с хоста

            -   xmlwineventlog
            -   WinEventlog
            -   fortigate_utm

        Для подтверждения выполнения мы можем использовать sysmon и посмотреть на EventCode=1 для выполнения программы.

            Поисковый запрос                        index=botsv1 "3791.exe" sourcetype="XmlWinEventLog" EventCode=1
            Пояснение поискового запроса            Этот запрос будет искать журналы создания процессов, содержащие термин «3791.exe».
        
        Просмотрев поле CommandLine мы увидим не только приложения/утилиты, которые запускали данный файл, но и возможные фильтры

            -   C:\Windows\system32\cmd.exe
            -   3791.exe
            -   \??\C:\Windows\system32\conhost.exe 0xffffffff
            -   cmd.exe /c "3791.exe 2&gt;&amp;1"

        /////////////////////////////////////////////////
        /// Actions on Objectives / Действия по целям ///
        /////////////////////////////////////////////////

        Поскольку веб-сайт был испорчен из-за успешной атаки злоумышленника, было бы полезно лучше понять, что оказалось на веб-сайте, что вызвало испорченность.

        Как аналитик, нашей первой задачей может быть выяснение потока трафика, который может привести нас к ответу на этот вопрос.
        А именно - было ли установленно исходящее соединения с веб-сервера
        Подходов к поиску ответа на этот вопрос может быть несколько.
        Мы начнем наше расследование с изучения источника журнала Suricata и IP-адресов, взаимодействующих с веб-сервером 192.168.250.70.

        Список используемых полей следующий

            host
            source
            sourcetype
            src
            dest_ip
            url
            http.hostname

            Поисковый запрос                            index=botsv1 dest=192.168.250.70 sourcetype=suricata
        
        В полученном результате не отображается внешний IP, взаимодействующий с сервером.
        Давайте изменим направление потока, чтобы увидеть, исходит ли какая-либо связь с сервером.

            Поисковый запрос                            index=botsv1 src=192.168.250.70 sourcetype=suricata
        
        Что интересного в выводе?
        Поле dest_ip указывает, что с веб-серва исходит больщой поток трафика
        Но вочему это нас может заинтересовать?
        Обычно веб-серверы не являются источником трафика, так как браузер или клиент будут источником, а сервер — пунктом назначения.
        Здесь мы видим несколько внешних IP-адреса, по отношению к которым наш веб-сервер инициирует исходящий трафик.
        
        Наиболее интресные для нас те, которые получают самый большой объем информации (в нашем случае это)

            40.80.148.42
            23.22.63.114

        Поочередно перейдем к IP-адресам назначения, чтобы увидеть, какой тип трафика/связи осуществляется.
        *** Забешая наперд скажу, что нужный нам IP-адрес   -   23.22.63.114

            Поисковый запрос                            index=botsv1 src=192.168.250.70 sourcetype=suricata dest_ip=23.22.63.114
        
        Поле URL показывает 2 файла PHP и один файл jpeg.
        Файл jpeg выглядит интересным.
        Давайте изменим поисковый запрос и посмотрим, откуда взялся этот файл jpeg.
        А также добавим новое поле - http.hostname

            Поисковый запрос                             index=botsv1 url="/poisonivy-is-coming-for-you-batman.jpeg" dest_ip="192.168.250.70" | table _time src dest_ip http.hostname url
        
        Конечный результат ясно показывает, что подозрительный jpeg-файл poisonivy-is-coming-for-you-batman.jpeg был загружен с хоста злоумышленника prankglassinebracket.jumpingcrab.com, что испортило сайт.

        /////////////////////////////////////////////////
        /// Command & Control / Управление и контроль ///
        /////////////////////////////////////////////////

        Злоумышленник, загрузил файл на сервер, прежде чем испортить его.
        При этом атакующий использовал динамический DNS для разрешения вредоносного IP.
        Нашей целью было бы найти IP, который атакующий определил как DNS.

        Чтобы исследовать связь с IP-адресами противника (to & from), мы изучим источники сетевых журналов, упомянутые выше.
        Сначала мы выберем fortigate_utm для просмотра журналов брандмауэра, а затем перейдем к другим источникам журналов.

            Поисковый запрос                                index=botsv1 sourcetype=fortigate_utm "poisonivy-is-coming-for-you-batman.jpeg"
        
        Заглянув в журналы брандмауэра Fortinet, мы можем увидеть исходный IP, целевой IP и URL.
        Посмотрите на поля на левой панели, и поле url содержит FQDN (полное доменное имя)

            prankglassinebracket.jumpingcrab.com:1337/poisonivy-is-coming-for-you-batman.jpeg
        
        Хотя мы нашли ответ, мы можем проверить другие источники журнала.
        Давайте проверим ответ, посмотрев другой источник журнала.stream:http.
        
            Поисковый запрос                                index=botsv1 sourcetype=stream:http dest_ip=23.22.63.114 "poisonivy-is-coming-for-you-batman.jpeg" src_ip=192.168.250.70
        
        Мы определили подозрительный домен как сервер управления и контроля, с которым злоумышленник связался после получения контроля над сервером.
        Для дополнительно подтверждения мы можем просмотреть последний источник журнала stream:dns, чтобы увидеть, какие DNS-запросы были отправлены с веб-сервера в период заражения.

        //////////////////////////////////
        /// Weaponization / Вооружение ///
        //////////////////////////////////

        На этапе вооружения злоумышленники:

            -   Создают вредоносное ПО/вредоносный документ для получения начального доступа/уклонения от обнаружения и т. д.
            -   Создают домены, похожие на целевой домен, чтобы обмануть пользователей.
            -   Создают сервер управления и контроля для постэксплуатационной коммуникации/активности и т. д.

        Мы обнаружили несколько доменов/IP-адресов, связанных с злоумышленником во время расследований.
        Эта задача в основном будет заключаться в изучении сайтов OSINT, чтобы узнать, какую дополнительную информацию мы можем получить о злоумышленнике.

        На данный момент мы нашли домен prankglassinebracket.jumpingcrab.com, связанный с этой атакой.
        Нашей первой задачей будет поиск IP-адреса, связанного с доменами, которые потенциально могут быть предварительно настроены для атаки на Wayne Enterprise.

        В следующем упражнении мы будем искать на сайтах по разведке угроз любую информацию, такую ​​как IP-адреса/домены/адреса электронной почты, связанные с этим доменом, которая может помочь нам узнать больше об этом злоумышленнике.

        Robtex — это сайт Threat Intel, который предоставляет информацию об IP-адресах, доменных именах и т. д.
        Пожалуйста, найдите домен на сайте robtex и посмотрите, что мы получим.
        Мы получим IP-адреса, связанные с этим доменом и несколько доменов
            	
            69.197.18.183
            70.39.97.227
            169.47.130.85

            adjazd.jumpingcrab.com
            easythere.jumpingcrab.com
            lev.jumpingcrab.com
            miegum.jumpingcrab.com
            nonesuch.jumpingcrab.com
            piranhabrothers.jumpingcrab.com
            sendmgs.jumpingcrab.com
            sslsd.jumpingcrab.com
            wvw.jumpingcrab.com
            zim.jumpingcrab.com

        Далее найдите IP-адрес 23.22.63.114 на этом сайте Threat Intel.

        Что мы обнаружили?
        Этот IP связан с некоторыми доменами, которые очень похожи на сайт WAYNE Enterprise.

            wanecorpinc.com
            wayncorpinc.com
            waynecorinc.com
            waynecorpnc.com
            waynecrpinc.com
            wayneorpinc.com
            wynecorpinc.com
            ec2-23-22-63-114.compute-1.amazonaws.com
        
        Virustotal — это сайт OSINT, используемый для анализа подозрительных файлов, доменов, IP и т. д.
        Давайте теперь поищем IP-адрес на сайте virustotal.
        Если мы перейдем на вкладку RELATIONS, то увидим все домены, связанные с этим IP, которые похожи на компанию Wayn Enterprise.
        В списке доменов мы увидели домен, который связан с атакующим www.po1s0n1vy.com.
        Давайте поищем этот домен на virustotal
            
            38.207.236.88
            156.254.170.147
            172.67.187.244
            104.21.7.173
            34.102.136.180
            91.195.240.117
            23.22.63.114

            ftp.po1s0n1vy.com
            illian.po1s0n1vy.com
            lillian.po1s0n1vy.com
            po1s0n1vy.com
            smtp.po1s0n1vy.com
        
        Мы также можем поискать информацию whois на этом сайте -> whois.domaintools.com, чтобы посмотреть, сможем ли мы найти что-то ценное.

        ///////////////////////////
        /// Delivery / Доставка ///
        ///////////////////////////

        Злоумышленники создают вредоносное ПО и заражают устройства, чтобы получить первоначальный доступ или обойти защиту и найти способы доставки его различными способами.
        Мы определили различные IP-адреса, домены и адреса электронной почты, связанные с этим противником.
        Нашей задачей на этом уроке будет использование имеющейся у нас информации о противнике и использование различных платформ Threat Hunting и сайтов OSINT для поиска любого вредоносного ПО, связанного с противником.

        Отчет Threat Intel предполагает, что эта группа противников Poison lvy, по-видимому, имеет вторичный вектор атаки на случай, если первоначальный взлом не удастся.
        Нашей целью будет узнать больше о злоумышленнике и его методологии и сопоставить информацию, найденную в журналах, с различными источниками информации об угрозах.

        Для поиска нужной информации мы будем пользоваться следующими OSINT ресурсами

            ThreatMiner
            Virustotal
            Hybrid-Analysis

        Давайте начнем наше расследование с поиска IP-адреса 23.22.63.114 на сайте Threat Intel ThreatMiner.
        Мы обнаружили три файла, связанных с этим IP, из которых один файл со значением хэша c99131e0169171935c5ac32615ed6261, по-видимому, является вредоносным и представляет интерес.
        Теперь щелкните по этому значению хэша MD5, чтобы увидеть метаданные и другую важную информацию об этом конкретном файле.

            File name:	            MirandaTateScreensaver.scr.exe
            SHA256:	                9709473ab351387aab9e816eff3910b9f28a7a70202e250ed46dba8f820f34a8
            Related resources:      VirusTotal | Hybrid-Analysis | VirusShare
        
        Откройте virustotal.com и найдите хэш на virustotal.
        Здесь мы можем получить информацию о метаданных об этом вредоносном ПО на вкладке «Details tab».

            Detection:      MirandaTateScreensaver.scr.exe
            Relations:      23.22.63.114
        
        Hybrid Analysis — полезный сайт, который показывает анализ поведения любого вредоносного ПО.
        Здесь вы можете просмотреть все действия, выполняемые этим вредоносным ПО после выполнения.
        Некоторые сведения, которые предоставляет Hybrid-Analysis:

            -   Сетевое взаимодействие.
            -   DNS-запросы
            -   Связанные хосты с сопоставлением стран
            -   Строки
            -   MITRE ATT&CK Сопоставление
            -   Вредоносные индикаторы.
            -   Импорт/экспорт DLL
            -   Информация о Mutex, если она создана
            -   Метаданные файла
            -   Скриншоты


