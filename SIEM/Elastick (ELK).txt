=====================================================================
* INTRO *
*********

*** В этой комнате мы узнаем, как использовать интерфейс Kibana для поиска, фильтрации и создания визуализаций и панелей мониторинга, одновременно исследуя журналы VPN на предмет аномалий.   
    
    Американская компания CyberT отслеживала журналы VPN своих сотрудников, и команда SOC обнаружила некоторые аномалии в деятельности VPN.
    Наша задача как аналитиков SOC — изучить журналы VPN за январь 2022 года и выявить аномалии.
    Вот некоторые ключевые моменты, на которые следует обратить внимание перед расследованием:

        -   Все журналы VPN попадают в индекс vpn_connections.
        -   Индекс содержит журналы VPN за январь 2022 года.
        -   Пользователь Johny Brown был удален 1 января 2022 года.
        -   Мы наблюдали неудачные попытки подключения некоторых пользователей, которые необходимо расследовать.

=====================================================================
* Elastick Overview *
*********************

Elastic Stack — это набор различных компонентов с открытым исходным кодом, связанных вместе, чтобы помочь пользователям извлекать данные из любого источника и в любом формате
А также выполнять поиск, анализ и визуализацию данных в режиме реального времени.
Основа стека Elastic, представляет собой набор из трех приложений

    -   Beats
    -   Logstash
    -   Elasticsearch
    -   Kibana

Стек Elastic такде можно улучшить/разнообразить в ресурсоемких средах, добавив Kafka, RabbitMQ и Redis для буферизации и отказоустойчивости, а также nginx для безопасности.

Кратко пробежимся по каждому компоненту и посмотрим, как они работают вместе.

    +++++++++
    + Beats +
    +++++++++

    Beats — это хост-агент, известный как Data-shippers, который используется для отправки/передачи данных с конечных точек в elasticsearch.
    Каждый бит — это агент специального назначения, который отправляет определенные данные в elasticsearch.
    Beats упрощает процесс сбора данных из различных источников и гарантирует, что стек Elastic получает необходимую информацию для анализа и визуализации.
    
    ++++++++++++
    + Logstash +
    ++++++++++++

    Logstash — это механизм обработки данных, который используется для получения данных из разных источников, применения к ним фильтра или нормализации,
    А затем отправки их в пункт назначения, которым может быть Kibana или прослушивающий порт.
    
    Файл конфигурации logstash разделен на три части, как показано ниже.

        1)  Input — это то, где пользователь определяет источник, из которого поступают данные.
            Logstash поддерживает множество плагинов ввода, как показано в справке https://www.elastic.co/guide/en/logstash/8.1/input-plugins.html

        2)  Filter — это то, где пользователь указывает параметры фильтра для нормализации журнала, полученного выше.
            Logstash поддерживает множество плагинов фильтра, как показано в справочной документации https://www.elastic.co/guide/en/logstash/8.1/filter-plugins.html

        3)  Output — это то, куда пользователь хочет отправить отфильтрованные данные.
            Это может быть порт прослушивания, интерфейс Kibana, база данных Elasticsearch, файл и т. д.
            Logstash поддерживает множество плагинов вывода, как показано в справочной документации https://www.elastic.co/guide/en/logstash/8.1/output-plugins.html
    
    +++++++++++++++++
    + Elasticsearch +
    +++++++++++++++++

    Elasticsearch — это полнотекстовый поисковый и аналитический движок, используемый для хранения документов в формате JSON.
    Это важный компонент, используемый для хранения, анализа, выполнения корреляции данных и т. д.
    Он поддерживает RESTFul API для взаимодействия с данными.
    Как основной компонент стека Elastic, он обрабатывает индексацию, хранение и запросы.
    Elasticsearch позволяет пользователям выполнять сложные запросы и аналитические операции с записями файлов журналов, обработанными Logstash.

    ++++++++++
    + Kibana +
    ++++++++++
    
    Kibana — это веб-визуализация данных, которая работает с elasticsearch для анализа, исследования и визуализации потока данных в реальном времени.
    Она позволяет пользователям создавать несколько визуализаций и панелей мониторинга для лучшей видимости — подробнее о Kibana в следующих задачах.

    ++++++++++++++++++++++++++
    + How they work together +
    ++++++++++++++++++++++++++

       ---------            ------------                 -------------------         ----------
       - Beats -    -->     - Logstash -        -->      - Elastick Search -   -->   - Kibana -
       ---------            ------------                 -------------------         ----------
    Data Collection     Data Input / Filter /             Index & Store Data         Analysys & 
        Agent             Process & Output                                          Vizualization

    -   Beats — это набор различных агентов доставки данных, используемых для сбора данных от нескольких агентов.
        Подобно тому, как Winlogbeat используется для сбора журналов событий Windows, Packetbeat собирает потоки сетевого трафика.
    -   Logstash собирает данные из битов, портов или файлов и т. д., анализирует/нормализует их в пары значений полей и сохраняет их в elasticsearch.
    -   Elasticsearch действует как база данных, используемая для поиска и анализа данных.
    -   Kibana отвечает за отображение и визуализацию данных, хранящихся в elasticsearch.
        Данные, хранящиеся в elasticseach, можно легко преобразовать в различные визуализации, временные диаграммы, инфографику и т. д. с помощью Kibana.

Чтобы реализовать Elastic stack как SIEM-решение, данные, связанные с безопасностью, из различных источников, таких как брандмауэры, IDS/IPS и конечные точки, следует вводить в Elastic stack с помощью Logstash.
Elasticsearch следует настроить для хранения и индексации данных безопасности
А Kibana следует использовать для создания пользовательских панелей мониторинга и визуализаций, чтобы предоставить информацию о событиях, связанных с безопасностью.

=====================================================================
* Kibana *
**********

Kibana является неотъемлемым компонентом стека Elastic, который используется для отображения, визуализации и поиска журналов.
Вот некоторые важные вкладки:

    -   Discover tab
    -   Visualization
    -   Dashboard

    ++++++++++++++++
    + Discover Tab +
    ++++++++++++++++

    Вкладка «Обнаружение» в интерфейсе Kibana содержит журналы, которые загружаются вручную или в режиме реального времени, временную диаграмму, нормализованные поля и т. д
    Аналитики в основном используют эту вкладку для поиска/исследования журналов с помощью строки поиска и параметров фильтра.

    Некоторые ключевые сведения, доступные в интерфейсе панели мониторинга:

        -   Logs (document):
                Каждый журнал здесь также известен как отдельный документ, содержащий информацию о событии.
                Он показывает поля и значения, найденные в этом документе.

                По умолчанию документы отображаются в необработанном виде.
                Мы можем нажать на любой документ и выбрать важные поля, чтобы создать таблицу, показывающую только эти поля.
                Этот метод уменьшает шум и делает ее более презентабельной и осмысленной

                Не забудьте сохранить формат таблицы после ее создания.
                Затем она будет показывать одни и те же поля каждый раз, когда пользователь входит в панель управления.
        -   Fields pane (left):
                Левая панель интерфейса Kibana показывает список нормализованных полей, которые он находит в доступных документах/журналах.
                Щелкнув по любому полю, и оно покажет 5 верхних значений и процент встречаемости.

                Мы можем использовать эти значения, чтобы применить к ним фильтры.
                Щелчок по кнопке + добавит фильтр для отображения журналов, содержащих это значение, а кнопка - применит фильтр к этому значению, чтобы показать результаты, в которых это значение отсутствует.

                Мы можем щелкнуть по любому полю, чтобы добавить поле в фильтр или удалить его из поиска.
                Опция «Add filter» под строкой поиска позволяет нам применять фильтр к полям.
        -   Index Pattern:
                По умолчанию Kibana требует шаблон индекса для доступа к данным, хранящимся/принимаемым в elasticsearch.
                Index Pattern сообщает Kibana, какие данные elasticsearch мы хотим исследовать.
                
                Каждый шаблон индекса соответствует определенным определенным свойствам полей.
                Один шаблон индекса может указывать на несколько индексов.

                Каждый источник журнала имеет различную структуру журнала
                Поэтому, когда журналы принимаются в elasticsearch, они сначала нормализуются в соответствующие поля и значения путем создания специального шаблона индекса для источника данных.

                В наших примерах мы будем изучать шаблон индекса с именем vpn_connections, который содержит журналы VPN.
        -   Search bar:
                Место, где пользователь добавляет поисковые запросы/применяет фильтры, чтобы сузить результаты.
        -   Time Filter:
                Фильтр времени позволяет нам применять фильтр журнала на основе времени. 
                На этой вкладке есть много вариантов выбора для фильтрации/ограничения журналов.
                Мы можем сузить результаты на основе продолжительности времени.

                Вкладка Quick Select — еще одна полезная вкладка в меню поиска интерфейса Kibana, которая предоставляет несколько вариантов выбора.
                Параметр Refresh, Every в конце позволит нам выбрать время для непрерывного обновления журналов.
                Если установлено 5 секунд, журналы будут обновляться каждые 5 секунд автоматически.
        -   Time Interval / Timeline:
                Панель временной шкалы предоставляет обзор количества событий, произошедших за указанное время/дату.
                Мы можем выбрать панель только для отображения журналов за указанный период.
                Счетчик в левом верхнем углу отображает количество документов/событий, найденных за выбранное время.

                Эта полоса также полезна для определения пика в журналах.
        -   TOP Bar:
                Эта панель содержит различные варианты сохранения поиска, открытия сохраненных поисков, обмена или сохранения поиска и т. д.

    +++++++++++++++++
    + Visualization +
    +++++++++++++++++

    Вкладка визуализации позволяет нам визуализировать данные в различных формах, таких как таблицы, круговые диаграммы, столбчатые диаграммы и т. д.
    Эта задача визуализации будет использовать несколько параметров, предоставляемых этой вкладкой, для создания простых презентабельных визуализаций.

    Есть несколько способов перейти на вкладку визуализации.
    
        *)  Один из способов — нажать на любое поле на вкладке обнаружения и нажать на "visualization".
    
    Часто нам требуется создание корреляций между несколькими полями.
    Перетаскивание необходимого поля в середину создаст вкладку корреляции на вкладке визуализации.

    Мы также можем создать таблицу, отображающую значения выбранных полей в виде столбцов.

    Самое главное в создании этих визуализаций — сохранить их.
    Для этого нажмите на опцию сохранения справа и заполните описательные значения ниже.
    Мы также можем добавить активную визуализации в уже существующую панель мониторинга или создать новую.

    Действия после создания визуализаций:

        -   Создайте визуализацию и нажмите кнопку «Сохранить» в правом верхнем углу.
        -   Добавьте заголовок и описание к визуализации.
        -   Мы можем добавить визуализацию на любую существующую панель мониторинга или новую панель мониторинга.
        -   Нажмите «Сохранить» и добавьте в библиотеку, когда она будет

    +++++++++++++
    + Dashboard +
    +++++++++++++

    Панели мониторинга обеспечивают хорошую видимость коллекции журналов.
    Пользователь может создать несколько панелей мониторинга для удовлетворения конкретных потребностей.

    В этой задаче мы можем объединить различные сохраненные поиски и визуализации, чтобы создать настраиваемую панель мониторинга для видимости журналов VPN.

    Шаги по созданию панели мониторинга следующие:

        1)  Перейдите на вкладку «Dashboard tab» и нажмите «Create dashboard».
        2)  Нажмите «Add from Library» (ну или создавайте с чистого листа)
        3)  Нажмите на visualizations и saved searches.
            Они будут добавлены на панель управления.
        4)  После добавления элементов настройте их соответствующим образом.
        5)  Не забудьте сохранить панель управления после ее завершения.

=====================================================================
* KQL Overview *
****************

KQL (Kibana Query Language) — это язык поисковых запросов, используемый для поиска в загруженных журналах/документах в elasticsearch.
Он упрощает процесс извлечения информации из ваших индексированных данных Elasticsearch, предлагая более интуитивный подход
Помимо языка KQL, Kibana также поддерживает Lucene Query Language.

*** Запросы посредством KQL можно отключить
    Для надо нажать на KQL, что назодится в сроке поиска (Search) и в появившемся меню перевести бегунок в положение OFF.

Базовая структура запросов KQL состоит из пар "field:value", где:

    -   field (поле) представляет атрибут данных
    -   value (значение) представляет искомые вами данные.
    -   Пример  -   event.code:4625

С помощью KQL мы можем искать журналы двумя разными способами.

    -   Free text search / Свободный текстовый поиск
    -   Field-based search / Поиск по полям

Когда мы нажимаем на строку поиска, нам будут представлены все доступные поля, которые мы можем использовать в нашем поисковом запросе.
Чтобы изучить другие опции KQL, посмотрите эту официальную ссылку https://www.elastic.co/guide/en/kibana/7.17/kuery-query.html

    ++++++++++++++++++++
    + Free text Search +
    ++++++++++++++++++++

    Свободный текстовый поиск позволяет пользователям искать журналы, основываясь только на тексте.
    Это означает, что простой поиск термина security вернет все документы, содержащие этот термин, независимо от поля.

    Тем не менее, свободный текстовой запрос весьма требователен к то, что Вы вводите в строке поиска
    К примеру, если нам надо найти все совпадения по запросу "United States", то он может отобразить найденое количество совпадений (если таковые вообще имеются)
    Однако, если мы попытаемся найти совпадения по слову "United", то мы вообще ничего не получим
    Поскольку KQL ищет весь термин/слово в документах.

    Для более точного поиска используются общепринятые различные операторы посика

        /////////////////
        /// Wild Card ///
        /////////////////

        KQL позволяет использовать подстановочный знак * для сопоставления частей термина/слова.
        
        Мы использовали подстановочный знак с термином United, чтобы вернуть все результаты, содержащие термин United и любой другой термин.
        Если бы у нас были журналы с термином United Nations, они бы также были возвращены в результате этого подстановочного знака.

        //////////////////////////////////////////
        /// Logical Operators (AND | OR | NOT) ///
        //////////////////////////////////////////

        KQL также позволяет пользователям использовать логические операторы в поисковом запросе.
        Давайте рассмотрим каждый из них поотдельности.

            1)  OR / ИЛИ
                Мы будем использовать оператор OR для отображения журналов, содержащих либо «Значение№1», либо «Значение№2».
                Каждое ископмое значение желательно заключать в кавычки
                    "United States" OR "England"
            
            2)  AND / И
                Мы воспользуемся оператором AND для создания поиска, который вернет журналы, содержащие термины «Значение№1» И «Значение№2».
                Каждое ископмое значение желательно заключать в кавычки
                    "United States" AND "Virginia"

            3)  NOT / НЕ
                Аналогично, мы можем использовать оператор NOT для удаления определенного термина из результатов поиска.
                Этот поисковый запрос покажет журналы из «Значение№1», но игнорируя «Значение№2».
                Каждое ископмое значение желательно заключать в кавычки
                А, искомое значение, которое должно быть исключено еще и в скобки
                    "United States" AND NOT ("Florida")

        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /// Comparison Operators (= | > | >= | < | <= | ! | <=> | <> or != | BETWEEN | IS NULL or IS NOT NULL | IN {value1}, {value2}, ...) ///
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

        Эти операторы позволяют вам определять точные условия для сопоставления значений полей

    ++++++++++++++++++++++
    + Field-based search +
    ++++++++++++++++++++++

    В Field-based search мы укажем имя поля и значение, которое мы ищем в журналах.
    Этот поиск имеет специальный синтаксис 
    Он использует двоеточие : в качестве разделителя между полем и значением.
        FIELD : VALUE.
    
        Source_ip : 238.163.231.224    AND     UserName : Suleman
